(()=>{var __webpack_modules__={"./src/exportQueryDefinitions.yaml":module=>{module.exports=Object.freeze({AttributeAssignmentRule:{VlocityDataPackType:"AttributeAssignmentRule",query:"Select Id, Name from %vlocity_namespace%__AttributeAssignmentRule__c"},AttributeCategory:{VlocityDataPackType:"AttributeCategory",query:"Select Id, Name, %vlocity_namespace%__Code__c from %vlocity_namespace%__AttributeCategory__c",salesforceUrl:{namespace:"vlocity",path:"'/apex/' + namespace + '__VlocityAttributeCategoryEdit?id=' + id "}},CalculationMatrix:{VlocityDataPackType:"CalculationMatrix",query:"Select Id, Name from %vlocity_namespace%__CalculationMatrix__c"},CalculationMatrixVersion:{VlocityDataPackType:"CalculationMatrixVersion",query:"Select Id, Name from %vlocity_namespace%__CalculationMatrixVersion__c WHERE %vlocity_namespace%__IsEnabled__c = true",requiredSetting:"separateMatrixVersions"},CalculationProcedure:{VlocityDataPackType:"CalculationProcedure",query:"Select Id, Name from %vlocity_namespace%__CalculationProcedure__c"},CalculationProcedureVersion:{VlocityDataPackType:"CalculationProcedureVersion",query:"Select Id, Name from %vlocity_namespace%__CalculationProcedureVersion__c WHERE %vlocity_namespace%__IsEnabled__c = true",requiredSetting:"separateCalculationProcedureVersions"},Catalog:{VlocityDataPackType:"Catalog",query:"Select Id, Name from %vlocity_namespace%__Catalog__c"},ContentVersion:{VlocityDataPackType:"ContentVersion",query:"Select Id, Title, %vlocity_namespace%__GlobalKey__c from ContentVersion WHERE %vlocity_namespace%__GlobalKey__c != null"},ContextAction:{VlocityDataPackType:"ContextAction",query:"Select Id, Name, %vlocity_namespace%__GlobalKey__c from %vlocity_namespace%__ContextAction__c"},ContextDimension:{VlocityDataPackType:"ContextDimension",query:"Select Id, Name, %vlocity_namespace%__GlobalKey__c from %vlocity_namespace%__ContextDimension__c"},ContextScope:{VlocityDataPackType:"ContextScope",query:"Select Id, Name, %vlocity_namespace%__GlobalKey__c from %vlocity_namespace%__ContextScope__c"},ContractType:{VlocityDataPackType:"ContractType",query:"Select Id, Name from %vlocity_namespace%__ContractType__c"},CpqConfigurationSetup:{VlocityDataPackType:"CpqConfigurationSetup",query:"Select Id, Name from %vlocity_namespace%__CpqConfigurationSetup__c"},CustomFieldMap:{VlocityDataPackType:"CustomFieldMap",query:"Select Id, Name from %vlocity_namespace%__CustomFieldMap__c"},DataRaptor:{VlocityDataPackType:"DataRaptor",query:"Select Id, Name from %vlocity_namespace%__DRBundle__c WHERE %vlocity_namespace%__Type__c != 'Migration'",salesforceUrl:{namespace:"vlocity",path:"'/apex/' + namespace + '__drmapper?id=' + id"}},Document:{VlocityDataPackType:"Document",query:"Select Id, DeveloperName from Document",manifestOnly:!0},DocumentClause:{VlocityDataPackType:"DocumentClause",query:"Select Id, Name from %vlocity_namespace%__DocumentClause__c",salesforceUrl:{namespace:"vlocity",path:"'/apex/' + namespace + '__DocumentClause?id=' + id "}},DocumentTemplate:{VlocityDataPackType:"DocumentTemplate",query:"Select Id, Name, %vlocity_namespace%__TemplateContentFormat__c, %vlocity_namespace%__VersionNumber__c, %vlocity_namespace%__Status__c from %vlocity_namespace%__DocumentTemplate__c where %vlocity_namespace%__Status__c = 'Active'",description:"(IsActive__c ? 'Active' : null)",salesforceUrl:{namespace:"vlocity",path:"'/apex/' + namespace + '__documenttemplate?templateId=' + id + '&templateType=' + ( TemplateContentFormat__c == 'Microsoft Word .DOCX Template' ? 'docx' : (TemplateContentFormat__c == 'Microsoft Powerpoint .PPTX Template' ? 'pptx' : 'web') )"}},EntityFilter:{VlocityDataPackType:"EntityFilter",query:"Select Id, Name, %vlocity_namespace%__GlobalKey__c from %vlocity_namespace%__EntityFilter__c"},GeneralSettings:{VlocityDataPackType:"GeneralSettings",query:"Select Id, Name from %vlocity_namespace%__GeneralSettings__c"},IntegrationProcedure:{VlocityDataPackType:"IntegrationProcedure",query:"Select Id, Name, %vlocity_namespace%__Type__c, %vlocity_namespace%__SubType__c, %vlocity_namespace%__Version__c, %vlocity_namespace%__IsActive__c from %vlocity_namespace%__OmniScript__c where %vlocity_namespace%__IsProcedure__c = true",salesforceUrl:{namespace:"vlocity",path:"'/apex/' + namespace + '__integrationproceduredesigner?id=' + id"},groupKey:"Type__c + SubType__c",groupName:"Type__c + '/' + SubType__c",description:"(IsActive__c ? 'Active' : null)",name:"'Version ' + (Version__c || 0)",matchingKey:{fields:["%vlocity_namespace%__SubType__c","%vlocity_namespace%__Type__c","%vlocity_namespace%__Version__c"]}},IntegrationProcedureVersion:{VlocityDataPackType:"IntegrationProcedure",query:"Select Id, %vlocity_namespace%__Type__c, %vlocity_namespace%__SubType__c, %vlocity_namespace%__Version__c from %vlocity_namespace%__OmniScript__c WHERE %vlocity_namespace%__IsProcedure__c = true",versionCompare:!0},IntegrationRetryPolicy:{VlocityDataPackType:"IntegrationRetryPolicy",query:"Select Id, Name, %vlocity_namespace%__GlobalKey__c from %vlocity_namespace%__IntegrationRetryPolicy__c"},InterfaceImplementation:{VlocityDataPackType:"InterfaceImplementation",query:"Select Id, Name from %vlocity_namespace%__InterfaceImplementation__c"},ItemImplementation:{VlocityDataPackType:"ItemImplementation",query:"Select Id, Name from %vlocity_namespace%__ItemImplementation__c"},ManualQueue:{VlocityDataPackType:"ManualQueue",query:"Select Id, Name from %vlocity_namespace%__ManualQueue__c"},ObjectClass:{VlocityDataPackType:"ObjectClass",query:"Select Id, Name, %vlocity_namespace%__GlobalKey__c from %vlocity_namespace%__ObjectClass__c"},ObjectContextRule:{VlocityDataPackType:"ObjectContextRule",query:"Select Id, Name from %vlocity_namespace%__ObjectRuleAssignment__c"},ObjectLayout:{VlocityDataPackType:"ObjectLayout",query:"Select Id, Name, %vlocity_namespace%__GlobalKey__c from %vlocity_namespace%__ObjectLayout__c"},OfferMigrationPlan:{VlocityDataPackType:"OfferMigrationPlan",query:"Select Id, Name, %vlocity_namespace%__Code__c from %vlocity_namespace%__OfferMigrationPlan__c"},OmniScript:{VlocityDataPackType:"OmniScript",query:"Select Id, Name, LastModifiedDate, %vlocity_namespace%__Type__c, %vlocity_namespace%__SubType__c, %vlocity_namespace%__Language__c, %vlocity_namespace%__Version__c, %vlocity_namespace%__IsActive__c from %vlocity_namespace%__OmniScript__c where %vlocity_namespace%__IsProcedure__c = false",salesforceUrl:{namespace:"vlocity",path:"'/apex/' + namespace + '__omniscriptdesigner?id=' + id"},groupKey:"Type__c + SubType__c + Language__c",groupName:"Type__c+'/'+SubType__c+' ('+Language__c+')'",description:"(IsActive__c ? 'Active' : '')",name:"'Version ' + (Version__c || 0)",matchingKey:{fields:["%vlocity_namespace%__SubType__c","%vlocity_namespace%__Type__c","%vlocity_namespace%__Version__c","%vlocity_namespace%__Language__c"]}},OmniScriptVersion:{VlocityDataPackType:"OmniScript",query:"Select Id, %vlocity_namespace%__Type__c, %vlocity_namespace%__SubType__c, %vlocity_namespace%__Language__c, %vlocity_namespace%__Version__c from %vlocity_namespace%__OmniScript__c WHERE %vlocity_namespace%__IsProcedure__c = false",versionCompare:!0},OrchestrationDependencyDefinition:{VlocityDataPackType:"OrchestrationDependencyDefinition",query:"Select Id, Name, %vlocity_namespace%__GlobalKey__c from %vlocity_namespace%__OrchestrationDependencyDefinition__c"},OrchestrationItemDefinition:{VlocityDataPackType:"OrchestrationItemDefinition",query:"Select Id, Name, %vlocity_namespace%__OrchestrationPlanDefinitionId__r.Name from %vlocity_namespace%__OrchestrationItemDefinition__c"},OrchestrationPlanDefinition:{VlocityDataPackType:"OrchestrationPlanDefinition",query:"Select Id, Name from %vlocity_namespace%__OrchestrationPlanDefinition__c"},OrchestrationQueueAssignmentRule:{VlocityDataPackType:"OrchestrationQueueAssignmentRule",query:"Select Id, Name, %vlocity_namespace%__GlobalKey__c from %vlocity_namespace%__OrchestrationQueueAssignmentRule__c"},PriceList:{VlocityDataPackType:"PriceList",query:"Select Id, Name, %vlocity_namespace%__Code__c from %vlocity_namespace%__PriceList__c"},Pricebook2:{VlocityDataPackType:"Pricebook2",query:"Select Id, Name from Pricebook2"},PricingPlan:{VlocityDataPackType:"PricingPlan",query:"Select Id, Name from %vlocity_namespace%__PricingPlan__c"},PricingVariable:{VlocityDataPackType:"PricingVariable",query:"Select Id, Name, %vlocity_namespace%__Code__c from %vlocity_namespace%__PricingVariable__c"},Product2:{VlocityDataPackType:"Product2",query:"Select Id, Name, ProductCode, %vlocity_namespace%__GlobalKey__c from Product2"},Project:{VlocityDataPackType:"Project",query:"Select Id, Name, %vlocity_namespace%__GlobalKey__c from %vlocity_namespace%__Project__c"},Promotion:{VlocityDataPackType:"Promotion",query:"Select Id, Name, %vlocity_namespace%__GlobalKey__c from %vlocity_namespace%__Promotion__c"},QueryBuilder:{VlocityDataPackType:"QueryBuilder",query:"Select Id from %vlocity_namespace%__QueryBuilder__c"},RateBand:{VlocityDataPackType:"RateBand",query:"Select Id, Name from %vlocity_namespace%__RateBand__c"},RelationshipGraph:{VlocityDataPackType:"RelationshipGraph",query:"Select Id from %vlocity_namespace%__RelationshipGraph__c"},Rule:{VlocityDataPackType:"Rule",query:"Select Id, Name, %vlocity_namespace%__GlobalKey__c from %vlocity_namespace%__Rule__c"},SpecTemplateMapping:{VlocityDataPackType:"SpecTemplateMapping",query:"Select Id, %vlocity_namespace%__GlobalKey__c from %vlocity_namespace%__SpecTemplateMapping__c"},StoryObjectConfiguration:{VlocityDataPackType:"StoryObjectConfiguration",query:"Select Id, Name from %vlocity_namespace%__StoryObjectConfiguration__c"},String:{VlocityDataPackType:"String",query:"Select Id, Name from %vlocity_namespace%__String__c"},System:{VlocityDataPackType:"System",query:"Select Id, Name from %vlocity_namespace%__System__c"},ThorOrchestrationQueue:{VlocityDataPackType:"ThorOrchestrationQueue",query:"Select Id, Name, %vlocity_namespace%__GlobalKey__c from %vlocity_namespace%__ThorOrchestrationQueue__c"},TimePlan:{VlocityDataPackType:"TimePlan",query:"Select Id, Name, %vlocity_namespace%__GlobalKey__c from %vlocity_namespace%__TimePlan__c"},TimePolicy:{VlocityDataPackType:"TimePolicy",query:"Select Id, Name, %vlocity_namespace%__GlobalKey__c from %vlocity_namespace%__TimePolicy__c"},UIFacet:{VlocityDataPackType:"UIFacet",query:"Select Id, Name, %vlocity_namespace%__GlobalKey__c from %vlocity_namespace%__UIFacet__c"},UISection:{VlocityDataPackType:"UISection",query:"Select Id, Name, %vlocity_namespace%__GlobalKey__c from %vlocity_namespace%__UISection__c"},VlocityAction:{VlocityDataPackType:"VlocityAction",query:"SELECT Id, Name FROM %vlocity_namespace%__VlocityAction__c WHERE %vlocity_namespace%__IsActive__c = true"},VlocityAttachment:{VlocityDataPackType:"VlocityAttachment",query:"SELECT Id, Name, %vlocity_namespace%__GlobalKey__c FROM %vlocity_namespace%__VlocityAttachment__c"},VlocityCard:{VlocityDataPackType:"VlocityCard",query:"SELECT Id, Name, LastModifiedDate, %vlocity_namespace%__Version__c, %vlocity_namespace%__Active__c, %vlocity_namespace%__Author__c FROM %vlocity_namespace%__VlocityCard__c",salesforceUrl:{namespace:"vlocity",path:"'/apex/' + namespace + '__carddesignernew?id=' + id"},groupKey:"Name",groupName:"Name",description:"Author__c + (Active__c ? (Author__c ? ' - ' : '') + 'Active' : '')",name:"'Version ' + (Version__c || 0)",matchingKey:{fields:["Name","%vlocity_namespace%__Version__c","%vlocity_namespace%__Author__c"]}},VlocityDataStore:{VlocityDataPackType:"VlocityDataStore",query:"SELECT Id, Name FROM %vlocity_namespace%__Datastore__c"},VlocityFunction:{VlocityDataPackType:"VlocityFunction",query:"Select Id, Name, %vlocity_namespace%__GlobalKey__c from %vlocity_namespace%__VlocityFunction__c"},VlocityPicklist:{VlocityDataPackType:"VlocityPicklist",query:"Select Id, Name, %vlocity_namespace%__GlobalKey__c from %vlocity_namespace%__Picklist__c"},VlocityScheduledJob:{VlocityDataPackType:"VlocityScheduledJob",query:"Select Id, Name, %vlocity_namespace%__GlobalKey__c from %vlocity_namespace%__VlocityScheduledJob__c"},VlocitySearchWidgetSetup:{VlocityDataPackType:"VlocitySearchWidgetSetup",query:"Select Id, Name from %vlocity_namespace%__VlocitySearchWidgetSetup__c"},VlocityStateModel:{VlocityDataPackType:"VlocityStateModel",query:"Select Id, Name from %vlocity_namespace%__VlocityStateModel__c"},VlocityUILayout:{VlocityDataPackType:"VlocityUILayout",query:"Select Id, Name, %vlocity_namespace%__Version__c, %vlocity_namespace%__Author__c, %vlocity_namespace%__Active__c from %vlocity_namespace%__VlocityUILayout__c",salesforceUrl:{namespace:"vlocity",path:"'/apex/' + namespace + '__carddesignernew?id=' + id"},groupKey:"Name",groupName:"Name",description:"Author__c + (Active__c ? (Author__c ? ' - ' : '') + 'Active' : '')",name:"'Version ' + (Version__c || 0)",matchingKey:{fields:["Name","%vlocity_namespace%__Version__c","%vlocity_namespace%__Author__c"]}},VlocityUITemplate:{VlocityDataPackType:"VlocityUITemplate",query:"Select Id, Name, %vlocity_namespace%__Version__c, %vlocity_namespace%__Author__c, %vlocity_namespace%__Active__c from %vlocity_namespace%__VlocityUITemplate__c",salesforceUrl:{namespace:"vlocity",path:"'/apex/' + namespace + '__uitemplatedesigner?id=' + id"},groupKey:"Name",groupName:"Name",description:"Author__c + (Active__c ? (Author__c ? ' - ' : '') + 'Active' : '')",name:"'Version ' + (Version__c || 0)",matchingKey:{fields:["Name","%vlocity_namespace%__Version__c","%vlocity_namespace%__Author__c"]}},VlocityWebTrackingConfiguration:{VlocityDataPackType:"VlocityWebTrackingConfiguration",query:"Select Id, %vlocity_namespace%__GlobalKey__c from %vlocity_namespace%__VlocityWebTrackingConfiguration__c"},VlocityTrackingGroup:{VlocityDataPackType:"VlocityTrackingGroup",query:"Select Id, %vlocity_namespace%__GlobalKey__c from %vlocity_namespace%____VlocityTrackingGroup__c"},VqMachine:{VlocityDataPackType:"VqMachine",query:"Select Id, Name from %vlocity_namespace%__VqMachine__c"},VqResource:{VlocityDataPackType:"VqResource",query:"Select Id, Name from %vlocity_namespace%__VqResource__c"}})},"./src/newItemTemplates.yaml":module=>{module.exports=Object.freeze({apexClass:{label:"$(file-code) New APEX Class",description:"Create new public APEX class",folderName:"classes",input:{name:{placeholder:"The name of the APEX class to create",type:"text"}},files:[{path:"${name}.cls",template:"public class ${name} {\n    \n}\n"},{path:"${name}.cls-meta.xml",template:'<?xml version="1.0" encoding="UTF-8"?>\n<ApexClass xmlns="urn:metadata.tooling.soap.sforce.com" fqn="${name}">\n    <apiVersion>${apiVersion}</apiVersion>\n    <status>Active</status>\n</ApexClass>\n'}]},apexInterface:{label:"$(file-code) New APEX Interface Class",description:"Create new Interface class",folderName:"classes",input:{name:{placeholder:"The name of the interface class to create",type:"text"}},files:[{path:"${name}.cls",template:"public interface ${name} {\n    \n}\n"},{path:"${name}.cls-meta.xml",template:'<?xml version="1.0" encoding="UTF-8"?>\n<ApexClass xmlns="urn:metadata.tooling.soap.sforce.com" fqn="${name}">\n    <apiVersion>${apiVersion}</apiVersion>\n    <status>Active</status>\n</ApexClass>\n'}]},apexUnitTest:{label:"$(beaker) New APEX Unit Test",description:"Create new APEX unit test class",folderName:"classes",input:{name:{placeholder:"Enter the name of the test class",type:"text"}},files:[{path:"${name}.cls",template:"@isTest\nclass ${name} {\n    \n    @isTest\n    static void methodName_shouldDoSomething() {\n        // Arrange\n        //...\n\n        // Test\n        //...\n\n        // Assert\n        //System.assertEquals(expected, result);\n    }\n}\n"},{path:"${name}.cls-meta.xml",template:'<?xml version="1.0" encoding="UTF-8"?>\n<ApexClass xmlns="urn:metadata.tooling.soap.sforce.com" fqn="${name}">\n    <apiVersion>${apiVersion}</apiVersion>\n    <status>Active</status>\n</ApexClass>\n'}]},lwc:{label:"$(zap) New LWC Component",description:"Create new Lightning Web Component",folderName:"lwc",input:{name:{placeholder:"Name for the new component",type:"text"}},files:[{path:"${name}/${name}.js",template:"import { api, track, LightningElement } from 'lwc';\n\nexport default class ${name} extends LightningElement {\n\n    @api recordId;\n    @api objectApiName;\n\n    // This is an example of a variable tracked by LWC\n    // the layout is rerendered if any tracked variable is changed\n    @track variable = null;\n\n    /**\n     * Executed when the component is added to the DOM.\n     * @returns {Promise<void> | void} \n     */\n    async connectedCallback() {\n        // Todo: remove me or add code\n    }\n\n    /**\n     * Executed by the framework when the LWC component is removed \n     * from the DOM; use this to put any clean-up code when required\n     * @returns {Promise<void> | void} \n     */\n    disconnectedCallback() {\n        // Todo: remove me or add code\n    }\n}\n"},{path:"${name}/${name}.html",template:'<template>\n    <lightning-card title="Hello Vlocode" icon-name="standard:account">\n        <lightning-button label="New" slot="actions"></lightning-button>\n        <p class="slds-p-horizontal_small">Card Body (custom component)</p>\n        <p slot="footer">Card Footer</p>\n    </lightning-card>\n</template>\n'},{path:"${name}/${name}.css",template:":host {\n}\n"},{path:"${name}/${name}.js-meta.xml",template:'<?xml version="1.0" encoding="UTF-8"?>\n<LightningComponentBundle xmlns="http://soap.sforce.com/2006/04/metadata" fqn="${name}">\n    <apiVersion>${apiVersion}</apiVersion>\n    <isExposed>true</isExposed>\n    <masterLabel>${name}</masterLabel>\n</LightningComponentBundle>\n'}]},omniscriptLwc:{label:"$(zap) New OmniScript LWC Component (override)",description:"Create new Vlocity OmniScript/FlexCard compatible Lightning Web Component that overrides an existing element type",folderName:"lwc",input:{name:{placeholder:"Name for the new component",type:"text"}},files:[{path:"${name}/${name}.js",template:"import { api, track, LightningElement } from 'lwc';\nimport { OmniscriptBaseMixin } from '${vlocityNamespace}/omniscriptBaseMixin';\n\nconst VALIDATION_EVENTS = { [false]: 'omniinvalid', [true]: 'omnivalid' };\nconst AGGREGATE_EVENT = 'omniaggregate';\n\n/**\n * Vlocity LWC OmniScript Override component ${name}, you can use this component in an OmniScript to override any existing element.\n * @note auto-generated boiler plate by Vlocode\n */\nexport default class ${name} extends OmniscriptBaseMixin(LightningElement)  {\n\n    @api jsonDef;  \n    @api jsonDataStr;\n    @api jsonData;\n    @api layout;\n    @api resume;\n    @api scriptHeaderDef;\n    @api seedJson;\n    @api runMode;\n\n    // Expose properties\n    get properties() {\n        return this.jsonDef ? this.jsonDef.propSetMap : {};\n    }\n\n    /**\n     * Get the value inside the data response tree (Data JSON) for this element; watch this handle updates in the data JSON\n     */\n    getResponseValue() {\n        if (this.jsonData && this.jsonDef) {\n            return this.jsonDef.JSONPath.split(':').reduce((map, key) => {\n                const keyPath = key.split('|');\n                const value = map && map[keyPath.shift()];\n                return keyPath.reduce((arr, i) => Array.isArray(arr) ? arr[i] : arr, value);\n            }, this.jsonData);\n        }\n    }\n\n   /**\n    * Invoke an APEX method on Salesforce; in order to invoke an APEX method the class should the VlocityController base class\n    * @param {string} apexMethod Name of the method and class to invoke the following format: `<class>.<method>`\n    * @param {any} [input] Request payload/input\n    * @param {Object} [options] Extra options\n    */\n    async invokeApex(apexMethod, input, options) {\n        const [ sClassName, sMethodName ] = apexMethod.split('.');\n        const this.omniRemoteCall({ sClassName, sMethodName,\n            input: input ?? {}, \n            options: options ?? {\n                useContinuation: false\n            } \n        });\n    }\n\n    /**\n     * Update the Data JSON of the OmniScript by dispatching an aggregate JS event; \n     * @note This function is similar to omniUpdateDataJson but working; omniUpdateDataJson from the base mixin doesn't\n     *       work properly as it requires jsonDef to be mapped to omniJsonDef instead it is mapped to jsonDef currently by default.\n     * @param {any} value \n     * @param {string} [elementId] Optionally the element to update\n     */\n    updateResponse(value, elementId) {\n        this.dispatchEvent(new CustomEvent(AGGREGATE_EVENT, {\n            bubbles: true,\n            cancelable: true,\n            composed: true,\n            detail: {\n                elementId: elementId ?? this.jsonDef.name,\n                dataJsonPath: this.jsonDef.JSONPath,\n                index: this.jsonDef.index,\n                show: true,\n                aggregateOverride: false,\n                data: value \n            }\n        }));\n    };\n\n    dispatchValidationEvent(validity, nodeName) {\n        this.dispatchEvent(new CustomEvent(VALIDATION_EVENTS[validity], {\n            bubbles: true,\n            cancelable: true,\n            composed: true,\n            detail: {\n                jsonPath: nodeName ?? this.jsonDef.name\n            }\n        }));\n    };\n\n    /**\n     * Executed when the component is added to the DOM.\n     * @returns {Promise<void> | void} \n     */\n    connectedCallback() {\n        // add classes to container to ensure the correct sizing of this element\n        this.classList.add(\n            'slds-p-right_small', \n            'slds-m-bottom_xx-small', \n            `slds-size_${this.properties.controlWidth ?? 12}-of-12`,\n            `slds-medium-size_${this.properties.controlWidth ?? 12}-of-12`);\n    }\n\n    /**\n     * Executed by the framework when the LWC component is removed \n     * from the DOM; use this to put any clean-up code when required\n     * @returns {Promise<void> | void} \n     */\n    disconnectedCallback() {\n        // Todo: remove me or add code\n    }\n}\n"},{path:"${name}/${name}.html",template:'<template>\n    <lightning-card title="Hello Vlocode" icon-name="standard:account">\n        <lightning-button label="New" slot="actions"></lightning-button>\n        <p class="slds-p-horizontal_small">Card Body (custom component)</p>\n        <p slot="footer">Card Footer</p>\n    </lightning-card>\n</template>\n'},{path:"${name}/${name}.css",template:":host {\n}\n"},{path:"${name}/${name}.js-meta.xml",template:'<?xml version="1.0" encoding="UTF-8"?>\n<LightningComponentBundle xmlns="http://soap.sforce.com/2006/04/metadata" fqn="${name}">\n    <apiVersion>${apiVersion}</apiVersion>\n    <isExposed>true</isExposed>\n    <masterLabel>${name}</masterLabel>\n    <runtimeNamespace>${vlocityNamespace}</runtimeNamespace>\n</LightningComponentBundle>\n'}]}})},"./node_modules/@oclif/command/lib sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@oclif/command/lib sync recursive",module.exports=webpackEmptyContext},"./node_modules/@oclif/config/lib sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@oclif/config/lib sync recursive",module.exports=webpackEmptyContext},"./node_modules/@oclif/config/lib sync recursive ^.*\\/node_modules\\/typescript$":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@oclif/config/lib sync recursive ^.*\\/node_modules\\/typescript$",module.exports=webpackEmptyContext},"./node_modules/@oclif/plugin-help/lib sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@oclif/plugin-help/lib sync recursive",module.exports=webpackEmptyContext},"./node_modules/keyv/src sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/keyv/src sync recursive",module.exports=webpackEmptyContext},"./node_modules/moment/locale sync recursive ^\\.\\/.*$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./af":"./node_modules/moment/locale/af.js","./af.js":"./node_modules/moment/locale/af.js","./ar":"./node_modules/moment/locale/ar.js","./ar-dz":"./node_modules/moment/locale/ar-dz.js","./ar-dz.js":"./node_modules/moment/locale/ar-dz.js","./ar-kw":"./node_modules/moment/locale/ar-kw.js","./ar-kw.js":"./node_modules/moment/locale/ar-kw.js","./ar-ly":"./node_modules/moment/locale/ar-ly.js","./ar-ly.js":"./node_modules/moment/locale/ar-ly.js","./ar-ma":"./node_modules/moment/locale/ar-ma.js","./ar-ma.js":"./node_modules/moment/locale/ar-ma.js","./ar-sa":"./node_modules/moment/locale/ar-sa.js","./ar-sa.js":"./node_modules/moment/locale/ar-sa.js","./ar-tn":"./node_modules/moment/locale/ar-tn.js","./ar-tn.js":"./node_modules/moment/locale/ar-tn.js","./ar.js":"./node_modules/moment/locale/ar.js","./az":"./node_modules/moment/locale/az.js","./az.js":"./node_modules/moment/locale/az.js","./be":"./node_modules/moment/locale/be.js","./be.js":"./node_modules/moment/locale/be.js","./bg":"./node_modules/moment/locale/bg.js","./bg.js":"./node_modules/moment/locale/bg.js","./bm":"./node_modules/moment/locale/bm.js","./bm.js":"./node_modules/moment/locale/bm.js","./bn":"./node_modules/moment/locale/bn.js","./bn-bd":"./node_modules/moment/locale/bn-bd.js","./bn-bd.js":"./node_modules/moment/locale/bn-bd.js","./bn.js":"./node_modules/moment/locale/bn.js","./bo":"./node_modules/moment/locale/bo.js","./bo.js":"./node_modules/moment/locale/bo.js","./br":"./node_modules/moment/locale/br.js","./br.js":"./node_modules/moment/locale/br.js","./bs":"./node_modules/moment/locale/bs.js","./bs.js":"./node_modules/moment/locale/bs.js","./ca":"./node_modules/moment/locale/ca.js","./ca.js":"./node_modules/moment/locale/ca.js","./cs":"./node_modules/moment/locale/cs.js","./cs.js":"./node_modules/moment/locale/cs.js","./cv":"./node_modules/moment/locale/cv.js","./cv.js":"./node_modules/moment/locale/cv.js","./cy":"./node_modules/moment/locale/cy.js","./cy.js":"./node_modules/moment/locale/cy.js","./da":"./node_modules/moment/locale/da.js","./da.js":"./node_modules/moment/locale/da.js","./de":"./node_modules/moment/locale/de.js","./de-at":"./node_modules/moment/locale/de-at.js","./de-at.js":"./node_modules/moment/locale/de-at.js","./de-ch":"./node_modules/moment/locale/de-ch.js","./de-ch.js":"./node_modules/moment/locale/de-ch.js","./de.js":"./node_modules/moment/locale/de.js","./dv":"./node_modules/moment/locale/dv.js","./dv.js":"./node_modules/moment/locale/dv.js","./el":"./node_modules/moment/locale/el.js","./el.js":"./node_modules/moment/locale/el.js","./en-au":"./node_modules/moment/locale/en-au.js","./en-au.js":"./node_modules/moment/locale/en-au.js","./en-ca":"./node_modules/moment/locale/en-ca.js","./en-ca.js":"./node_modules/moment/locale/en-ca.js","./en-gb":"./node_modules/moment/locale/en-gb.js","./en-gb.js":"./node_modules/moment/locale/en-gb.js","./en-ie":"./node_modules/moment/locale/en-ie.js","./en-ie.js":"./node_modules/moment/locale/en-ie.js","./en-il":"./node_modules/moment/locale/en-il.js","./en-il.js":"./node_modules/moment/locale/en-il.js","./en-in":"./node_modules/moment/locale/en-in.js","./en-in.js":"./node_modules/moment/locale/en-in.js","./en-nz":"./node_modules/moment/locale/en-nz.js","./en-nz.js":"./node_modules/moment/locale/en-nz.js","./en-sg":"./node_modules/moment/locale/en-sg.js","./en-sg.js":"./node_modules/moment/locale/en-sg.js","./eo":"./node_modules/moment/locale/eo.js","./eo.js":"./node_modules/moment/locale/eo.js","./es":"./node_modules/moment/locale/es.js","./es-do":"./node_modules/moment/locale/es-do.js","./es-do.js":"./node_modules/moment/locale/es-do.js","./es-mx":"./node_modules/moment/locale/es-mx.js","./es-mx.js":"./node_modules/moment/locale/es-mx.js","./es-us":"./node_modules/moment/locale/es-us.js","./es-us.js":"./node_modules/moment/locale/es-us.js","./es.js":"./node_modules/moment/locale/es.js","./et":"./node_modules/moment/locale/et.js","./et.js":"./node_modules/moment/locale/et.js","./eu":"./node_modules/moment/locale/eu.js","./eu.js":"./node_modules/moment/locale/eu.js","./fa":"./node_modules/moment/locale/fa.js","./fa.js":"./node_modules/moment/locale/fa.js","./fi":"./node_modules/moment/locale/fi.js","./fi.js":"./node_modules/moment/locale/fi.js","./fil":"./node_modules/moment/locale/fil.js","./fil.js":"./node_modules/moment/locale/fil.js","./fo":"./node_modules/moment/locale/fo.js","./fo.js":"./node_modules/moment/locale/fo.js","./fr":"./node_modules/moment/locale/fr.js","./fr-ca":"./node_modules/moment/locale/fr-ca.js","./fr-ca.js":"./node_modules/moment/locale/fr-ca.js","./fr-ch":"./node_modules/moment/locale/fr-ch.js","./fr-ch.js":"./node_modules/moment/locale/fr-ch.js","./fr.js":"./node_modules/moment/locale/fr.js","./fy":"./node_modules/moment/locale/fy.js","./fy.js":"./node_modules/moment/locale/fy.js","./ga":"./node_modules/moment/locale/ga.js","./ga.js":"./node_modules/moment/locale/ga.js","./gd":"./node_modules/moment/locale/gd.js","./gd.js":"./node_modules/moment/locale/gd.js","./gl":"./node_modules/moment/locale/gl.js","./gl.js":"./node_modules/moment/locale/gl.js","./gom-deva":"./node_modules/moment/locale/gom-deva.js","./gom-deva.js":"./node_modules/moment/locale/gom-deva.js","./gom-latn":"./node_modules/moment/locale/gom-latn.js","./gom-latn.js":"./node_modules/moment/locale/gom-latn.js","./gu":"./node_modules/moment/locale/gu.js","./gu.js":"./node_modules/moment/locale/gu.js","./he":"./node_modules/moment/locale/he.js","./he.js":"./node_modules/moment/locale/he.js","./hi":"./node_modules/moment/locale/hi.js","./hi.js":"./node_modules/moment/locale/hi.js","./hr":"./node_modules/moment/locale/hr.js","./hr.js":"./node_modules/moment/locale/hr.js","./hu":"./node_modules/moment/locale/hu.js","./hu.js":"./node_modules/moment/locale/hu.js","./hy-am":"./node_modules/moment/locale/hy-am.js","./hy-am.js":"./node_modules/moment/locale/hy-am.js","./id":"./node_modules/moment/locale/id.js","./id.js":"./node_modules/moment/locale/id.js","./is":"./node_modules/moment/locale/is.js","./is.js":"./node_modules/moment/locale/is.js","./it":"./node_modules/moment/locale/it.js","./it-ch":"./node_modules/moment/locale/it-ch.js","./it-ch.js":"./node_modules/moment/locale/it-ch.js","./it.js":"./node_modules/moment/locale/it.js","./ja":"./node_modules/moment/locale/ja.js","./ja.js":"./node_modules/moment/locale/ja.js","./jv":"./node_modules/moment/locale/jv.js","./jv.js":"./node_modules/moment/locale/jv.js","./ka":"./node_modules/moment/locale/ka.js","./ka.js":"./node_modules/moment/locale/ka.js","./kk":"./node_modules/moment/locale/kk.js","./kk.js":"./node_modules/moment/locale/kk.js","./km":"./node_modules/moment/locale/km.js","./km.js":"./node_modules/moment/locale/km.js","./kn":"./node_modules/moment/locale/kn.js","./kn.js":"./node_modules/moment/locale/kn.js","./ko":"./node_modules/moment/locale/ko.js","./ko.js":"./node_modules/moment/locale/ko.js","./ku":"./node_modules/moment/locale/ku.js","./ku.js":"./node_modules/moment/locale/ku.js","./ky":"./node_modules/moment/locale/ky.js","./ky.js":"./node_modules/moment/locale/ky.js","./lb":"./node_modules/moment/locale/lb.js","./lb.js":"./node_modules/moment/locale/lb.js","./lo":"./node_modules/moment/locale/lo.js","./lo.js":"./node_modules/moment/locale/lo.js","./lt":"./node_modules/moment/locale/lt.js","./lt.js":"./node_modules/moment/locale/lt.js","./lv":"./node_modules/moment/locale/lv.js","./lv.js":"./node_modules/moment/locale/lv.js","./me":"./node_modules/moment/locale/me.js","./me.js":"./node_modules/moment/locale/me.js","./mi":"./node_modules/moment/locale/mi.js","./mi.js":"./node_modules/moment/locale/mi.js","./mk":"./node_modules/moment/locale/mk.js","./mk.js":"./node_modules/moment/locale/mk.js","./ml":"./node_modules/moment/locale/ml.js","./ml.js":"./node_modules/moment/locale/ml.js","./mn":"./node_modules/moment/locale/mn.js","./mn.js":"./node_modules/moment/locale/mn.js","./mr":"./node_modules/moment/locale/mr.js","./mr.js":"./node_modules/moment/locale/mr.js","./ms":"./node_modules/moment/locale/ms.js","./ms-my":"./node_modules/moment/locale/ms-my.js","./ms-my.js":"./node_modules/moment/locale/ms-my.js","./ms.js":"./node_modules/moment/locale/ms.js","./mt":"./node_modules/moment/locale/mt.js","./mt.js":"./node_modules/moment/locale/mt.js","./my":"./node_modules/moment/locale/my.js","./my.js":"./node_modules/moment/locale/my.js","./nb":"./node_modules/moment/locale/nb.js","./nb.js":"./node_modules/moment/locale/nb.js","./ne":"./node_modules/moment/locale/ne.js","./ne.js":"./node_modules/moment/locale/ne.js","./nl":"./node_modules/moment/locale/nl.js","./nl-be":"./node_modules/moment/locale/nl-be.js","./nl-be.js":"./node_modules/moment/locale/nl-be.js","./nl.js":"./node_modules/moment/locale/nl.js","./nn":"./node_modules/moment/locale/nn.js","./nn.js":"./node_modules/moment/locale/nn.js","./oc-lnc":"./node_modules/moment/locale/oc-lnc.js","./oc-lnc.js":"./node_modules/moment/locale/oc-lnc.js","./pa-in":"./node_modules/moment/locale/pa-in.js","./pa-in.js":"./node_modules/moment/locale/pa-in.js","./pl":"./node_modules/moment/locale/pl.js","./pl.js":"./node_modules/moment/locale/pl.js","./pt":"./node_modules/moment/locale/pt.js","./pt-br":"./node_modules/moment/locale/pt-br.js","./pt-br.js":"./node_modules/moment/locale/pt-br.js","./pt.js":"./node_modules/moment/locale/pt.js","./ro":"./node_modules/moment/locale/ro.js","./ro.js":"./node_modules/moment/locale/ro.js","./ru":"./node_modules/moment/locale/ru.js","./ru.js":"./node_modules/moment/locale/ru.js","./sd":"./node_modules/moment/locale/sd.js","./sd.js":"./node_modules/moment/locale/sd.js","./se":"./node_modules/moment/locale/se.js","./se.js":"./node_modules/moment/locale/se.js","./si":"./node_modules/moment/locale/si.js","./si.js":"./node_modules/moment/locale/si.js","./sk":"./node_modules/moment/locale/sk.js","./sk.js":"./node_modules/moment/locale/sk.js","./sl":"./node_modules/moment/locale/sl.js","./sl.js":"./node_modules/moment/locale/sl.js","./sq":"./node_modules/moment/locale/sq.js","./sq.js":"./node_modules/moment/locale/sq.js","./sr":"./node_modules/moment/locale/sr.js","./sr-cyrl":"./node_modules/moment/locale/sr-cyrl.js","./sr-cyrl.js":"./node_modules/moment/locale/sr-cyrl.js","./sr.js":"./node_modules/moment/locale/sr.js","./ss":"./node_modules/moment/locale/ss.js","./ss.js":"./node_modules/moment/locale/ss.js","./sv":"./node_modules/moment/locale/sv.js","./sv.js":"./node_modules/moment/locale/sv.js","./sw":"./node_modules/moment/locale/sw.js","./sw.js":"./node_modules/moment/locale/sw.js","./ta":"./node_modules/moment/locale/ta.js","./ta.js":"./node_modules/moment/locale/ta.js","./te":"./node_modules/moment/locale/te.js","./te.js":"./node_modules/moment/locale/te.js","./tet":"./node_modules/moment/locale/tet.js","./tet.js":"./node_modules/moment/locale/tet.js","./tg":"./node_modules/moment/locale/tg.js","./tg.js":"./node_modules/moment/locale/tg.js","./th":"./node_modules/moment/locale/th.js","./th.js":"./node_modules/moment/locale/th.js","./tk":"./node_modules/moment/locale/tk.js","./tk.js":"./node_modules/moment/locale/tk.js","./tl-ph":"./node_modules/moment/locale/tl-ph.js","./tl-ph.js":"./node_modules/moment/locale/tl-ph.js","./tlh":"./node_modules/moment/locale/tlh.js","./tlh.js":"./node_modules/moment/locale/tlh.js","./tr":"./node_modules/moment/locale/tr.js","./tr.js":"./node_modules/moment/locale/tr.js","./tzl":"./node_modules/moment/locale/tzl.js","./tzl.js":"./node_modules/moment/locale/tzl.js","./tzm":"./node_modules/moment/locale/tzm.js","./tzm-latn":"./node_modules/moment/locale/tzm-latn.js","./tzm-latn.js":"./node_modules/moment/locale/tzm-latn.js","./tzm.js":"./node_modules/moment/locale/tzm.js","./ug-cn":"./node_modules/moment/locale/ug-cn.js","./ug-cn.js":"./node_modules/moment/locale/ug-cn.js","./uk":"./node_modules/moment/locale/uk.js","./uk.js":"./node_modules/moment/locale/uk.js","./ur":"./node_modules/moment/locale/ur.js","./ur.js":"./node_modules/moment/locale/ur.js","./uz":"./node_modules/moment/locale/uz.js","./uz-latn":"./node_modules/moment/locale/uz-latn.js","./uz-latn.js":"./node_modules/moment/locale/uz-latn.js","./uz.js":"./node_modules/moment/locale/uz.js","./vi":"./node_modules/moment/locale/vi.js","./vi.js":"./node_modules/moment/locale/vi.js","./x-pseudo":"./node_modules/moment/locale/x-pseudo.js","./x-pseudo.js":"./node_modules/moment/locale/x-pseudo.js","./yo":"./node_modules/moment/locale/yo.js","./yo.js":"./node_modules/moment/locale/yo.js","./zh-cn":"./node_modules/moment/locale/zh-cn.js","./zh-cn.js":"./node_modules/moment/locale/zh-cn.js","./zh-hk":"./node_modules/moment/locale/zh-hk.js","./zh-hk.js":"./node_modules/moment/locale/zh-hk.js","./zh-mo":"./node_modules/moment/locale/zh-mo.js","./zh-mo.js":"./node_modules/moment/locale/zh-mo.js","./zh-tw":"./node_modules/moment/locale/zh-tw.js","./zh-tw.js":"./node_modules/moment/locale/zh-tw.js"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./node_modules/moment/locale sync recursive ^\\.\\/.*$"},"./node_modules/salesforce-alm/dist/lib/source sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/salesforce-alm/dist/lib/source sync recursive",module.exports=webpackEmptyContext},"./node_modules/shelljs/src sync recursive ^\\.\\/.*$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./cat":"./node_modules/shelljs/src/cat.js","./cat.js":"./node_modules/shelljs/src/cat.js","./cd":"./node_modules/shelljs/src/cd.js","./cd.js":"./node_modules/shelljs/src/cd.js","./chmod":"./node_modules/shelljs/src/chmod.js","./chmod.js":"./node_modules/shelljs/src/chmod.js","./common":"./node_modules/shelljs/src/common.js","./common.js":"./node_modules/shelljs/src/common.js","./cp":"./node_modules/shelljs/src/cp.js","./cp.js":"./node_modules/shelljs/src/cp.js","./dirs":"./node_modules/shelljs/src/dirs.js","./dirs.js":"./node_modules/shelljs/src/dirs.js","./echo":"./node_modules/shelljs/src/echo.js","./echo.js":"./node_modules/shelljs/src/echo.js","./error":"./node_modules/shelljs/src/error.js","./error.js":"./node_modules/shelljs/src/error.js","./exec":"./node_modules/shelljs/src/exec.js","./exec-child":"./node_modules/shelljs/src/exec-child.js","./exec-child.js":"./node_modules/shelljs/src/exec-child.js","./exec.js":"./node_modules/shelljs/src/exec.js","./find":"./node_modules/shelljs/src/find.js","./find.js":"./node_modules/shelljs/src/find.js","./grep":"./node_modules/shelljs/src/grep.js","./grep.js":"./node_modules/shelljs/src/grep.js","./head":"./node_modules/shelljs/src/head.js","./head.js":"./node_modules/shelljs/src/head.js","./ln":"./node_modules/shelljs/src/ln.js","./ln.js":"./node_modules/shelljs/src/ln.js","./ls":"./node_modules/shelljs/src/ls.js","./ls.js":"./node_modules/shelljs/src/ls.js","./mkdir":"./node_modules/shelljs/src/mkdir.js","./mkdir.js":"./node_modules/shelljs/src/mkdir.js","./mv":"./node_modules/shelljs/src/mv.js","./mv.js":"./node_modules/shelljs/src/mv.js","./popd":"./node_modules/shelljs/src/popd.js","./popd.js":"./node_modules/shelljs/src/popd.js","./pushd":"./node_modules/shelljs/src/pushd.js","./pushd.js":"./node_modules/shelljs/src/pushd.js","./pwd":"./node_modules/shelljs/src/pwd.js","./pwd.js":"./node_modules/shelljs/src/pwd.js","./rm":"./node_modules/shelljs/src/rm.js","./rm.js":"./node_modules/shelljs/src/rm.js","./sed":"./node_modules/shelljs/src/sed.js","./sed.js":"./node_modules/shelljs/src/sed.js","./set":"./node_modules/shelljs/src/set.js","./set.js":"./node_modules/shelljs/src/set.js","./sort":"./node_modules/shelljs/src/sort.js","./sort.js":"./node_modules/shelljs/src/sort.js","./tail":"./node_modules/shelljs/src/tail.js","./tail.js":"./node_modules/shelljs/src/tail.js","./tempdir":"./node_modules/shelljs/src/tempdir.js","./tempdir.js":"./node_modules/shelljs/src/tempdir.js","./test":"./node_modules/shelljs/src/test.js","./test.js":"./node_modules/shelljs/src/test.js","./to":"./node_modules/shelljs/src/to.js","./to.js":"./node_modules/shelljs/src/to.js","./toEnd":"./node_modules/shelljs/src/toEnd.js","./toEnd.js":"./node_modules/shelljs/src/toEnd.js","./touch":"./node_modules/shelljs/src/touch.js","./touch.js":"./node_modules/shelljs/src/touch.js","./uniq":"./node_modules/shelljs/src/uniq.js","./uniq.js":"./node_modules/shelljs/src/uniq.js","./which":"./node_modules/shelljs/src/which.js","./which.js":"./node_modules/shelljs/src/which.js"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./node_modules/shelljs/src sync recursive ^\\.\\/.*$"},"./node_modules/simple-git/src/responses sync recursive ^\\.\\/.*$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./BranchDeleteSummary":"./node_modules/simple-git/src/responses/BranchDeleteSummary.js","./BranchDeleteSummary.js":"./node_modules/simple-git/src/responses/BranchDeleteSummary.js","./BranchSummary":"./node_modules/simple-git/src/responses/BranchSummary.js","./BranchSummary.js":"./node_modules/simple-git/src/responses/BranchSummary.js","./CommitSummary":"./node_modules/simple-git/src/responses/CommitSummary.js","./CommitSummary.js":"./node_modules/simple-git/src/responses/CommitSummary.js","./DiffSummary":"./node_modules/simple-git/src/responses/DiffSummary.js","./DiffSummary.js":"./node_modules/simple-git/src/responses/DiffSummary.js","./FetchSummary":"./node_modules/simple-git/src/responses/FetchSummary.js","./FetchSummary.js":"./node_modules/simple-git/src/responses/FetchSummary.js","./FileStatusSummary":"./node_modules/simple-git/src/responses/FileStatusSummary.js","./FileStatusSummary.js":"./node_modules/simple-git/src/responses/FileStatusSummary.js","./ListLogSummary":"./node_modules/simple-git/src/responses/ListLogSummary.js","./ListLogSummary.js":"./node_modules/simple-git/src/responses/ListLogSummary.js","./MergeSummary":"./node_modules/simple-git/src/responses/MergeSummary.js","./MergeSummary.js":"./node_modules/simple-git/src/responses/MergeSummary.js","./MoveSummary":"./node_modules/simple-git/src/responses/MoveSummary.js","./MoveSummary.js":"./node_modules/simple-git/src/responses/MoveSummary.js","./PullSummary":"./node_modules/simple-git/src/responses/PullSummary.js","./PullSummary.js":"./node_modules/simple-git/src/responses/PullSummary.js","./StatusSummary":"./node_modules/simple-git/src/responses/StatusSummary.js","./StatusSummary.js":"./node_modules/simple-git/src/responses/StatusSummary.js","./TagList":"./node_modules/simple-git/src/responses/TagList.js","./TagList.js":"./node_modules/simple-git/src/responses/TagList.js"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./node_modules/simple-git/src/responses sync recursive ^\\.\\/.*$"},"./src/commands/buildParentKeyFiles.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const path=__webpack_require__("path"),vscode=__webpack_require__("vscode"),fs=__webpack_require__("./node_modules/fs-extra/lib/index.js"),util_1=__webpack_require__("./packages/util/lib/index.js"),DatapackUtil=__webpack_require__("./src/lib/vlocity/datapackUtil.ts"),datapackLoader_1=__webpack_require__("./src/lib/vlocity/datapackLoader.ts"),core_1=__webpack_require__("./packages/core/lib/index.js"),datapackCommand_1=__webpack_require__("./src/commands/datapackCommand.ts");class BuildParentKeyFilesCommand extends datapackCommand_1.DatapackCommand{get diagnostics(){return this.vlocode.getDiagnostics("Datapack Dependencies")}constructor(){super()}execute(...args){return this.buildParentKeyFiles()}async loadAllDatapacks(progressToken,cancelToken){const datapackLoader=core_1.container.get(datapackLoader_1.default),datapackHeaders=await DatapackUtil.getDatapackHeadersInWorkspace(),loadedDatapacks=new Array;let progress=0,lastReportedProgress=0;for(const header of datapackHeaders){if(cancelToken.isCancellationRequested)return progressToken.report({message:"cancelled"}),[];loadedDatapacks.push(await datapackLoader.loadFrom(header.fsPath));const newProgress=Math.floor(++progress/datapackHeaders.length*100);newProgress>lastReportedProgress+1&&(progressToken.report({message:"loading datapacks",increment:newProgress-lastReportedProgress}),lastReportedProgress=newProgress)}return loadedDatapacks}async buildParentKeyFiles(){await this.vlocode.withCancelableProgress("Repairing datapack dependencies",(async(progress,token)=>{this.diagnostics.clear();const datapacks=await this.loadAllDatapacks(progress,token);if(token.isCancellationRequested)return;progress.report({message:"resolving keys..."});const resolvedDatapacks=new Map;for(const datapack of datapacks)for(const sourceKey of datapack.getSourceKeys())resolvedDatapacks.set(sourceKey.VlocityRecordSourceKey,datapack);const allUnresolvedParents=new Array;for(const datapack of datapacks){const missingRefs=[],resolvedRefs=[];for(const ref of this.getExternalReferences(datapack)){const sourceKey=ref.VlocityLookupRecordSourceKey||ref.VlocityMatchingRecordSourceKey,resolvedRef=resolvedDatapacks.get(sourceKey);this.datapackService.isGuaranteedParentKey(sourceKey)||(resolvedRef?resolvedRefs.push(resolvedRef):missingRefs.push(ref))}const parentKeyReferences=resolvedRefs.map((dp=>this.datapackService.getDatapackReferenceKey(dp))),missingParents=missingRefs.map((ref=>ref.VlocityLookupRecordSourceKey||ref.VlocityMatchingRecordSourceKey)),missingKeyLocations=await Promise.all(missingParents.map((async parentKey=>await this.findInFiles(path.dirname(datapack.headerFile),parentKey)||this.findInFiles(path.dirname(datapack.headerFile),util_1.substringAfterLast(parentKey,"/")))));for(const[i,[file,range]]of util_1.filterUndefined(missingKeyLocations).entries())this.addWarning(file,range,`Unable to resolve dependency with key '${missingParents[i].replace(/^%vlocity_namespace%__/,"")}'`);allUnresolvedParents.push(...missingParents),parentKeyReferences.length>0&&await this.updateParentKeysFile(datapack.headerFile,parentKeyReferences)}allUnresolvedParents.length>0?vscode.window.showWarningMessage(`Unable to resolve ${allUnresolvedParents.length} dependencies see problems tab for details.`):vscode.window.showInformationMessage("Successfully resolved all datapack dependencies and updated ParentKey files.")}))}*getExternalReferences(datapack){"OmniScript"===datapack.datapackType&&(yield*this.resolveOmniScriptReferences(datapack)[Symbol.iterator]()),yield*datapack.getExternalReferences()}resolveOmniScriptReferences(omniScript){let customTemplateReferences=[...new Set(omniScript.element__c.filter((elem=>elem.propertySet__c&&elem.propertySet__c.HTMLTemplateId)).map((elem=>elem.propertySet__c.HTMLTemplateId)))];return omniScript.TestHTMLTemplates__c&&(customTemplateReferences=customTemplateReferences.filter((templateId=>!omniScript.TestHTMLTemplates__c.includes(templateId)))),customTemplateReferences.map((templateId=>({Name:templateId,VlocityRecordSObjectType:"%vlocity_namespace%__VlocityUITemplate__c",VlocityDataPackType:"VlocityLookupMatchingKeyObject",VlocityLookupRecordSourceKey:`%vlocity_namespace%__VlocityUITemplate__c/${templateId}`})))}async updateParentKeysFile(datapackHeader,parentKeys){const[datapackFilePrefix]=path.basename(datapackHeader).split(/_datapack/i),parentKeyFile=path.join(path.dirname(datapackHeader),`${datapackFilePrefix}_ParentKeys.json`),currentParentKeys=await this.tryReadJson(parentKeyFile),newParentKeys=[...parentKeys];currentParentKeys&&Array.isArray(currentParentKeys)&&newParentKeys.push(...currentParentKeys);try{await fs.writeFile(parentKeyFile,JSON.stringify([...new Set(newParentKeys)].sort(),void 0,4))}catch(err){this.logger.error("Error while writing file:",err),vscode.window.showErrorMessage(`Error while updating parent keys file for ${datapackFilePrefix}`)}}async tryReadJson(file){try{const data=await fs.readFile(file);return JSON.parse(data.toString())}catch{return}}addWarning(file,range,message){this.addMessage(vscode.DiagnosticSeverity.Warning,file,range,message)}addMessage(severity,file,range,message){const currentMessages=this.diagnostics.get(file)||[];this.diagnostics.set(file,[...currentMessages,new vscode.Diagnostic(range,message,severity)])}async findInFiles(folder,needle){const files=await fs.readdir(folder);for(const file of files){const fileData=await util_1.getDocumentBodyAsString(path.join(folder,file)),position=this.findSubstring(fileData,needle);if(position)return[vscode.Uri.file(path.join(folder,file)),position]}}findSubstring(content,needle){const index=content.indexOf(needle);if(index<0)return;let line=0,column=0;for(let i=0;i<index;i++)"\n"==content[i]?(line++,column=0):column++;return new vscode.Range(new vscode.Position(line,column),new vscode.Position(line,column+needle.length))}}exports.default=BuildParentKeyFilesCommand},"./src/commands/cloneDatapackCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const vscode=__webpack_require__("vscode"),datapackCommand_1=__webpack_require__("./src/commands/datapackCommand.ts");class CloneDatapackCommand extends datapackCommand_1.DatapackCommand{constructor(){super()}execute(...args){return this.cloneDatapack(args[1]||[args[0]||this.currentOpenDocument])}async cloneDatapack(selectedFiles){const datapacks=await this.vlocode.withProgress("Loading datapack...",(()=>this.loadDatapacks(selectedFiles)));for(const datapack of datapacks){if(!datapack||void 0===datapack.name){this.logger.warn(`Datapack ${datapack.name} cannot be cloned as it doesn't have a name property`),vscode.window.showWarningMessage("The datapack does not have a Name property");continue}const newName=await vscode.window.showInputBox({prompt:`Name for clone of ${datapack.name}...`,ignoreFocusOut:!0,value:`${datapack.name}-clone`});if(!newName)return;datapack.rename(newName),datapack.regenerateGlobalKey(),await this.vlocode.withProgress(`Cloning ${datapack.name}...`,(()=>this.vlocode.datapackService.expandDatapack(datapack,datapack.projectFolder)))}}}exports.default=CloneDatapackCommand},"./src/commands/commandBase.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CommandBase=exports.ProgressToken=void 0;const vscode=__webpack_require__("vscode"),core_1=__webpack_require__("./packages/core/lib/index.js"),vlocodeContext_1=__webpack_require__("./src/lib/vlocodeContext.ts");class ProgressToken{constructor(progressResolve,progressReject,progress,cancelToken){this.progressResolve=progressResolve,this.progressReject=progressReject,this.progress=progress,this.cancelToken=cancelToken,this.resolved=!1}get cancellationToken(){return this.cancelToken}complete(){this.resolved||(this.progressResolve(),this.resolved=!0)}report(message,progress){this.resolved||this.progress.report({message,increment:progress})}increment(amount){this.resolved||this.progress.report({increment:amount})}}exports.ProgressToken=ProgressToken;exports.CommandBase=class CommandBase{constructor(){this.logger=core_1.LogManager.get(this.getName())}validate(...args){}get currentOpenDocument(){return vscode.window.activeTextEditor?vscode.window.activeTextEditor.document.uri:void 0}get selectedText(){return vscode.window.activeTextEditor&&vscode.window.activeTextEditor.selection?vscode.window.activeTextEditor.document.getText(vscode.window.activeTextEditor.selection):void 0}async startProgress(title,cancellable){return new Promise((progressTokenResolve=>{this.vlocode.withActivity({location:vscode.ProgressLocation.Notification,progressTitle:title,cancellable:1==cancellable},((porgress,cancelToken)=>new Promise(((resolve,reject)=>{progressTokenResolve(new ProgressToken(resolve,reject,porgress,cancelToken))}))))}))}async showProductionWarning(throwException=!0){const productionWarning=await vscode.window.showQuickPick([{continue:!1,label:"$(circle-slash) No",description:"cancel the current operation"},{continue:!0,label:"$(check) Yes",description:"continue and make changes to the connected Production instance"}],{placeHolder:"Make changes to connected Production instance?"});if(!productionWarning||!productionWarning.continue){if(throwException)throw new Error("Operation cancelled by user after making changes to production warning");return!1}return!0}get vlocode(){return vlocodeContext_1.getContext().service}getName(){var _a;return(null===(_a=this.constructor)||void 0===_a?void 0:_a.name)||"Command"}}},"./src/commands/datapackCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.DatapackCommand=void 0;const vscode=__webpack_require__("vscode"),fs=__webpack_require__("./node_modules/fs-extra/lib/index.js"),commandBase_1=__webpack_require__("./src/commands/commandBase.ts"),util_1=__webpack_require__("./packages/util/lib/index.js"),datapackUtil_1=__webpack_require__("./src/lib/vlocity/datapackUtil.ts");class DatapackCommand extends commandBase_1.CommandBase{get datapackService(){return this.vlocode.datapackService}get salesforce(){return this.vlocode.salesforceService}async validate(){const validationMessage=this.vlocode.validateWorkspaceFolder()||await this.vlocode.validateSalesforceConnectivity();if(validationMessage)throw validationMessage}async getDatapackHeaders(files){return(await Promise.all(files.map((async fileUri=>{const fileStat=await fs.lstat(fileUri.fsPath);return datapackUtil_1.getDatapackHeaders(fileUri.fsPath,fileStat.isDirectory())})))).flat().map((header=>vscode.Uri.file(header)))}resolveManifestEntriesForFiles(files){return this.getDatapackHeaders(files).then((headerFiles=>Promise.all(headerFiles.map((header=>datapackUtil_1.getDatapackManifestKey(header.fsPath))))))}async loadDatapacks(files,onProgress){let progressCounter=0;const headerFiles=await this.getDatapackHeaders(files);return util_1.mapAsyncParallel(headerFiles,(header=>(onProgress&&onProgress(header,++progressCounter/headerFiles.length),this.datapackService.loadDatapack(header))),4)}}exports.DatapackCommand=DatapackCommand},"./src/commands/deployDatapackCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const path=__webpack_require__("path"),vscode=__webpack_require__("vscode"),fs=__webpack_require__("./node_modules/fs-extra/lib/index.js"),datapackCommand_1=__webpack_require__("./src/commands/datapackCommand.ts"),util_1=__webpack_require__("./packages/util/lib/index.js"),datapackUtil_1=__webpack_require__("./src/lib/vlocity/datapackUtil.ts"),datapackDeployer_1=__webpack_require__("./src/lib/vlocity/datapackDeployer.ts"),core_1=__webpack_require__("./packages/core/lib/index.js"),chalk=__webpack_require__("./node_modules/chalk/source/index.js");class DeployDatapackCommand extends datapackCommand_1.DatapackCommand{constructor(){super(...arguments),this.savingDocumentsList=new Set}execute(...args){return this.deployDatapacks.apply(this,[args[1]||[args[0]||this.currentOpenDocument],...args.slice(2)])}async saveUnsavedChangesInDatapacks(datapackHeaders){const datapackFolders=datapackHeaders.map((header=>path.dirname(header.fsPath))),datapackFiles=new Set((await Promise.all(datapackFolders.map((folder=>fs.readdir(folder))))).map(((files,i)=>files.map((file=>path.join(datapackFolders[i],file))))).reduce(((arr,readdirResults)=>arr.concat(...readdirResults)),[])),openDocuments=vscode.workspace.textDocuments.filter((d=>d.isDirty&&datapackFiles.has(d.uri.fsPath))),openDocumentPaths=openDocuments.map((doc=>doc.uri.fsPath));return openDocumentPaths.forEach((fsPath=>this.savingDocumentsList.add(fsPath))),setTimeout((()=>openDocumentPaths.forEach((fsPath=>this.savingDocumentsList.delete(fsPath)))),5e3),util_1.forEachAsyncParallel(openDocuments,(doc=>doc.save()))}async deployDatapacks(selectedFiles){try{const filesForDeployment=selectedFiles.filter((file=>!this.savingDocumentsList.has(file.fsPath)||(this.logger.verbose(`Deployment loop detected; skipping deployment requested for: ${file.fsPath}`),this.savingDocumentsList.delete(file.fsPath),!1))),datapackHeaders=await this.getDatapackHeaders(filesForDeployment);if(0==datapackHeaders.length)return;if(await this.vlocode.salesforceService.isProductionOrg()&&!await this.showProductionWarning(!1))return;let progressText=`Deploying: ${datapackHeaders.length} datapacks ...`;if(datapackHeaders.length<4){const datapacks=await this.datapackService.loadAllDatapacks(datapackHeaders);progressText=`Deploying: ${datapacks.map((datapack=>datapackUtil_1.default.getLabel(datapack))).join(", ")} ...`}await this.vlocode.withCancelableProgress(progressText,(async(progress,token)=>{const savedFiles=await this.saveUnsavedChangesInDatapacks(datapackHeaders);this.logger.verbose(`Saved ${savedFiles.length} datapacks before deploying:`,savedFiles.map((s=>path.basename(s.uri.fsPath)))),"compatibility"==this.vlocode.config.deploymentMode?await this.deployUsingBuildTools(datapackHeaders,token):await this.directDeploy(datapackHeaders,token),token.isCancellationRequested&&vscode.window.showWarningMessage("Datapack deployment cancelled")}))}catch(err){throw this.logger.error(err),new Error("Vlocode encountered an error while deploying the selected datapacks, see the log for details.")}}async directDeploy(datapackHeaders,cancellationToken){const datapacks=await this.datapackService.loadAllDatapacks(datapackHeaders,cancellationToken),deployment=await core_1.container.get(datapackDeployer_1.default).createDeployment(datapacks,{cancellationToken});if(await deployment.start(cancellationToken),!cancellationToken.isCancellationRequested)if(deployment.hasErrors){for(const[datapackKey,messages]of deployment.getMessagesByDatapack()){this.logger.error(`Datapack ${chalk.bold(datapackKey)} -- ${deployment.getFailedRecords(datapackKey).length} failed records (${messages.length} messages)`);for(let i=0;i<messages.length;i++)this.logger.error(` ${i+1}. ${chalk.underline(messages[i].record.sourceKey)} -- ${this.formatDirectDeployError(messages[i].message)} (${messages[i].type.toUpperCase()})`)}vscode.window.showWarningMessage(`Datapack deployment completed with errors: unable to update/insert ${deployment.failedRecordCount} records`)}else vscode.window.showInformationMessage(`Successfully deployed ${datapacks.length} datapacks`)}formatDirectDeployError(message){if(!message)return"Salesforce provided no error message";if(message.includes("Script-thrown exception")){const triggerTypeMatch=message.match(/execution of ([\w\d_-]+)/),causedByMatch=message.match(/caused by: ([\w\d_.-]+)/);if(triggerTypeMatch){return`APEX ${triggerTypeMatch[1]} trigger caused exception; try inserting this datapack with triggers disabled`}if(causedByMatch)return`APEX exception caused by (${causedByMatch[1]}); try inserting this datapack with triggers disabled`}return message.split(/\n|\r/g).filter((line=>line.trim().length>0)).join("\n")}async deployUsingBuildTools(datapackHeaders,token){const results=await this.datapackService.deploy(datapackHeaders.map((header=>header.fsPath)),token);token.isCancellationRequested||this.printDatapackDeployResults(results)}printDatapackDeployResults(results){var _a;[...results].forEach(((rec,i)=>this.logger.verbose(`${i}: ${rec.key}: ${rec.success||rec.errorMessage||"No error message"}`)));const resultSummary=1==results.length?[...results][0].label||[...results][0].key:`${results.length} datapacks`;if(results.hasErrors){const errors=results.getErrors(),errorMessage=(null===(_a=errors.find((e=>e.errorMessage)))||void 0===_a?void 0:_a.errorMessage)||"Unknown error";throw errors.forEach((rec=>this.logger.error(`${rec.key}: ${rec.errorMessage||"No error message"}`))),`Failed to deploy ${errors.length} out of ${results.length} datapack${1!=results.length?"s":""}: ${errorMessage}`}vscode.window.showInformationMessage(`Successfully deployed ${resultSummary}`)}}exports.default=DeployDatapackCommand},"./src/commands/exportDatapackCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const vscode=__webpack_require__("vscode"),constants=__webpack_require__("./src/constants.ts"),datapackUtil_1=__webpack_require__("./src/lib/vlocity/datapackUtil.ts"),util_1=__webpack_require__("./packages/util/lib/index.js"),exportQueryDefinitions=__webpack_require__("./src/exportQueryDefinitions.yaml"),datapackCommand_1=__webpack_require__("./src/commands/datapackCommand.ts");class ExportDatapackCommand extends datapackCommand_1.DatapackCommand{constructor(){super()}async execute(...args){return args.length>0?this.exportObjects(args.filter(this.isExportableObjectEntry)):this.exportWizard()}isExportableObjectEntry(obj){return"sobjectType"in obj&&"datapackType"in obj&&"id"in obj}async exportWizard(){const datapackType=await this.showDatapackTypeSelection();if(!datapackType||!exportQueryDefinitions[datapackType])return;const queryDef=exportQueryDefinitions[datapackType];let records=await this.queryExportableRecords(datapackType);if(0==records.length)return void vscode.window.showWarningMessage(`No exportable records for ${datapackType}`);if(queryDef.groupKey){const groupedRecords=await this.showGroupSelection(records,datapackType);if(!groupedRecords)return;records=groupedRecords}const recordToExport=await this.showRecordSelection(records,datapackType);return recordToExport?this.exportObjects({id:recordToExport.Id,sobjectType:recordToExport.attributes.type,datapackType}):void 0}getExportQuery(datapackType,vlocityNamespace){if(exportQueryDefinitions[datapackType])return exportQueryDefinitions[datapackType].query.replace(constants.NAMESPACE_PLACEHOLDER_PATTERN,vlocityNamespace||this.datapackService.vlocityNamespace);throw new Error(`Cannot get export query for unknown datapack type: ${datapackType}`)}async queryExportableRecords(datapackType){const queryProgress=await this.startProgress("Querying salesforce for list of objects to export...");try{return await this.salesforce.query(this.getExportQuery(datapackType))}finally{queryProgress.complete()}}async showDatapackTypeSelection(){const datapackOptions=Object.entries(exportQueryDefinitions).filter((([,queryDef])=>queryDef.query&&!queryDef.requiredSetting)).map((([key,queryDef])=>({label:key,detail:queryDef.query.replace(constants.NAMESPACE_PLACEHOLDER_PATTERN,"vlocity"),datapackType:queryDef.VlocityDataPackType}))),datapackToExport=await vscode.window.showQuickPick(datapackOptions,{matchOnDetail:!0,ignoreFocusOut:!0,placeHolder:"Select datapack types to export"});if(datapackToExport)return datapackToExport.datapackType}async showGroupSelection(records,datapackType){const queryDef=exportQueryDefinitions[datapackType],groupNameFormat=queryDef.groupName,groupKeyormat=queryDef.groupKey;if(!groupNameFormat||!groupKeyormat)return;const groupedRecords=util_1.groupBy(records,(r=>util_1.evalExpr(groupKeyormat,r))),groupOptions=Object.keys(groupedRecords).map((key=>{const groupRecord=util_1.createRecordProxy({count:groupedRecords[key].length,...groupedRecords[key][0]});return{label:util_1.evalExpr(groupNameFormat,groupRecord),description:queryDef.groupDescription?util_1.evalExpr(queryDef.groupDescription,groupRecord):`version(s) ${groupedRecords[key].length}`,records:groupedRecords[key]}})).sort(((a,b)=>a.label.localeCompare(b.label))),objectGroupSelection=await vscode.window.showQuickPick(groupOptions,{placeHolder:"Select datapack object to export",ignoreFocusOut:!0});return objectGroupSelection?objectGroupSelection.records:void 0}async showDependencySelection(){const withDependencies=await vscode.window.showQuickPick([{label:"None",description:"Do not export any dependencies, only export the selected object",maxDepth:0},{label:"Direct",description:"Include only direct dependencies, up to 1 level deep",maxDepth:1},{label:"All",description:"Include all depending objects",maxDepth:-1}],{placeHolder:"Export object dependencies",ignoreFocusOut:!0});if(withDependencies)return withDependencies.maxDepth}async showRecordSelection(records,datapackType){const queryDef=exportQueryDefinitions[datapackType],objectOptions=records.map((r=>({label:queryDef.name?util_1.evalExpr(queryDef.name,r):datapackUtil_1.default.getLabel(r),description:r.attributes.url,record:r}))).sort(((a,b)=>a.record.version__c?b.record.version__c-a.record.version__c:a.label.localeCompare(b.label)));if(queryDef.groupKey){const latestVersion=objectOptions[0].record;objectOptions.unshift({label:"Latest",description:queryDef.name?util_1.evalExpr(queryDef.name,latestVersion):datapackUtil_1.default.getLabel(latestVersion),record:latestVersion});const activeVersion=records.find((r=>r.isActive__c||r.active));activeVersion&&objectOptions.unshift({label:"Active",description:queryDef.name?util_1.evalExpr(queryDef.name,activeVersion):datapackUtil_1.default.getLabel(activeVersion),record:activeVersion})}const objectSelection=await vscode.window.showQuickPick(objectOptions,{placeHolder:queryDef.groupKey?"Select version to export":"Select datapack object to export"});if(objectSelection)return objectSelection.record}async showExportPathSelection(){var _a;const projectFolderSelection=await vscode.window.showQuickPick([{value:2,label:"Configure project folder for export",description:"set the default Vlocity project folder and continue"},{value:1,label:"Set folder just for this export",description:"select a folder only for this export"},{value:0,label:"No, stop the export"}],{placeHolder:"A project folder is required to export datapacks from Salesforce, set one up now?"});if(!projectFolderSelection||!projectFolderSelection.value)return;const firstWorkspace=null===(_a=vscode.workspace.workspaceFolders)||void 0===_a?void 0:_a.slice(0,1)[0],selectedFolder=await vscode.window.showOpenDialog({defaultUri:firstWorkspace?firstWorkspace.uri:void 0,openLabel:"Select Vlocity project folder",canSelectFiles:!1,canSelectFolders:!0,canSelectMany:!1});return selectedFolder?(2==projectFolderSelection.value&&(this.logger.info(`Updating Vlocity project path to: ${selectedFolder[0].fsPath}`),this.vlocode.config.projectPath=selectedFolder[0].fsPath),selectedFolder[0].fsPath):void 0}async exportObjects(exportEntries,maxDepth){const dependencyExportDepth=null!=maxDepth?maxDepth:await this.showDependencySelection();if(void 0===dependencyExportDepth)return;const exportPath=this.vlocode.config.projectPath||await this.showExportPathSelection();if(!exportPath)return void vscode.window.showErrorMessage("No project path selected; export aborted.");this.logger.info(`Exporting to folder: ${exportPath}`);const entries=Array.isArray(exportEntries)?exportEntries:[exportEntries];await this.vlocode.withActivity({progressTitle:1!=entries.length?`Exporting ${entries.length} datapacks...`:`Exporting ${entries[0].name||entries[0].globalKey||entries[0].id}...`,location:vscode.ProgressLocation.Notification,cancellable:!0},(async(progress,token)=>{const results=await this.datapackService.export(entries,exportPath,dependencyExportDepth,token);this.showResultMessage(results)}))}showResultMessage(results){var _a,_b;if([...results].forEach(((rec,i)=>this.logger.verbose(`${i}: ${rec.key}: ${rec.success||rec.errorMessage||"No error message"}`))),results.hasErrors){const errors=results.getErrors(),errorMessage=null!==(_b=null===(_a=errors.find((e=>e.errorMessage)))||void 0===_a?void 0:_a.errorMessage)&&void 0!==_b?_b:"Unknown error";throw errors.forEach((rec=>this.logger.error(`${rec.key}: ${rec.errorMessage||"No error message"}`))),`Failed to export ${errors.length} out of ${results.length} datapack${1!=results.length?"s":""}: ${errorMessage}`}const resultSummary=1==results.length?[...results][0].label||[...results][0].key:`${results.length} datapacks`;vscode.window.showInformationMessage(`Successfully exported ${resultSummary}`)}}exports.default=ExportDatapackCommand},"./src/commands/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const constants_1=__webpack_require__("./src/constants.ts"),refreshDatapackCommand_1=__webpack_require__("./src/commands/refreshDatapackCommand.ts"),deployDatapackCommand_1=__webpack_require__("./src/commands/deployDatapackCommand.ts"),exportDatapackCommand_1=__webpack_require__("./src/commands/exportDatapackCommand.ts"),selectOrgCommand_1=__webpack_require__("./src/commands/selectOrgCommand.ts"),vlocityAdminCommand_1=__webpack_require__("./src/commands/vlocityAdminCommand.ts"),buildParentKeyFiles_1=__webpack_require__("./src/commands/buildParentKeyFiles.ts"),openSalesforceCommand_1=__webpack_require__("./src/commands/openSalesforceCommand.ts"),renameDatapackCommand_1=__webpack_require__("./src/commands/renameDatapackCommand.ts"),cloneDatapackCommand_1=__webpack_require__("./src/commands/cloneDatapackCommand.ts"),salesforce_1=__webpack_require__("./src/commands/salesforce/index.ts");exports.default={[constants_1.VlocodeCommand.refreshDatapack]:refreshDatapackCommand_1.default,[constants_1.VlocodeCommand.deployDatapack]:deployDatapackCommand_1.default,[constants_1.VlocodeCommand.exportDatapack]:exportDatapackCommand_1.default,[constants_1.VlocodeCommand.selectOrg]:selectOrgCommand_1.default,[constants_1.VlocodeCommand.buildParentKeyFiles]:buildParentKeyFiles_1.default,[constants_1.VlocodeCommand.openInSalesforce]:openSalesforceCommand_1.default,[constants_1.VlocodeCommand.renameDatapack]:renameDatapackCommand_1.default,[constants_1.VlocodeCommand.cloneDatapack]:cloneDatapackCommand_1.default,...salesforce_1.default,...vlocityAdminCommand_1.default}},"./src/commands/openSalesforceCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const vscode=__webpack_require__("vscode"),open=__webpack_require__("./node_modules/open/index.js"),util_1=__webpack_require__("./packages/util/lib/index.js"),datapackCommand_1=__webpack_require__("./src/commands/datapackCommand.ts");class OpenSalesforceCommand extends datapackCommand_1.DatapackCommand{constructor(){super(...arguments),this.namespaceResolver={vlocity:()=>this.datapackService.vlocityNamespace}}execute(...args){return this.openInSalesforce(args[0]||this.currentOpenDocument)}openInSalesforce(input){return input instanceof vscode.Uri?this.openFileInSalesforce(input):this.openObjectInSalesforce(input)}async openFileInSalesforce(selectedFile){const datapack=(await this.loadDatapacks([selectedFile])).pop();if(!datapack)throw new Error(`${selectedFile.fsPath} not part of datapack`);const salesforceId=(await this.datapackService.getSalesforceIds([datapack])).pop();return this.openIdInSalesforce(salesforceId,datapack.datapackType)}async openObjectInSalesforce(obj){const salesforceId=obj.id||(await this.datapackService.getSalesforceIds([obj])).pop();return this.openIdInSalesforce(salesforceId,obj.datapackType)}async openIdInSalesforce(objectId,datapackType,extraFields){if(!objectId)return void vscode.window.showErrorMessage("Unable to resolve Salesforce id for the selected item; it might not be deployed on the connected org.");const queryDefinition=await this.datapackService.getQueryDefinition(datapackType);let salesforceUrl=(null==queryDefinition?void 0:queryDefinition.salesforceUrl)||await this.getObjectNativeUrl(objectId);salesforceUrl="string"==typeof salesforceUrl?{path:salesforceUrl}:salesforceUrl;const namespace=this.resolveNamespace(salesforceUrl.namespace),salesforcePath=util_1.evalExpr(salesforceUrl.path,{...extraFields,id:objectId,type:datapackType,namespace}),url=await this.vlocode.salesforceService.getPageUrl(salesforcePath,{useFrontdoor:!0});this.logger.info(`Opening URL: ${salesforcePath}`),open(url)}async getObjectNativeUrl(objectId){if((await this.salesforce.schema.describeSObjectById(objectId)).customSetting){return`'lightning/setup/CustomSettings/page?address=${encodeURIComponent(`/setup/ui/viewCustomSettingsData.apexp?appLayout=setup&id=${objectId}`)}'`}return`'lightning/r/${objectId}/view'`}resolveNamespace(namespace){return namespace&&this.namespaceResolver[namespace.toLowerCase()]?this.namespaceResolver[namespace.toLowerCase()]():namespace||void 0}}exports.default=OpenSalesforceCommand},"./src/commands/refreshDatapackCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const util_1=__webpack_require__("./packages/util/lib/index.js"),datapackUtil_1=__webpack_require__("./src/lib/vlocity/datapackUtil.ts"),exportDatapackCommand_1=__webpack_require__("./src/commands/exportDatapackCommand.ts");class RefreshDatapackCommand extends exportDatapackCommand_1.default{execute(...args){return this.refreshDatapacks(args[1]||[args[0]||this.currentOpenDocument])}async refreshDatapacks(selectedFiles){const dependencyExportDepth=await this.showDependencySelection();if(void 0===dependencyExportDepth)return void this.logger.error("Export cancelled; no dependency depth selected.");const datapacksByProject=await this.vlocode.withStatusBarProgress("Loading datapacks...",(async()=>util_1.groupBy(await this.loadDatapacks(selectedFiles),(pack=>pack.projectFolder)))),flatDatapackList=Object.values(datapacksByProject).flat(),progressTitle=flatDatapackList.length>1?`Refreshing ${flatDatapackList.length} datapacks...`:`Refreshing ${datapackUtil_1.default.getLabel(flatDatapackList[0])}...`;await this.vlocode.withCancelableProgress(progressTitle,(async(progress,cancelToken)=>{const results=await util_1.mapAsync(Object.keys(datapacksByProject),(projectFolder=>this.datapackService.export(datapacksByProject[projectFolder],projectFolder,dependencyExportDepth,cancelToken)));this.showResultMessage(results.reduce(((aggregate,result)=>aggregate.join(result))))}))}}exports.default=RefreshDatapackCommand},"./src/commands/renameDatapackCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const path=__webpack_require__("path"),vscode=__webpack_require__("vscode"),datapackCommand_1=__webpack_require__("./src/commands/datapackCommand.ts");class RenameDatapackCommand extends datapackCommand_1.DatapackCommand{execute(...args){return this.renameDatapack(args[0]||this.currentOpenDocument)}async renameDatapack(selectedFile){const[datapack]=await this.vlocode.withProgress("Loading datapack...",(()=>this.loadDatapacks([selectedFile])));if(!datapack||void 0===datapack.name)return vscode.window.showWarningMessage("The selected datapack does not have a Name property");const newName=await vscode.window.showInputBox({prompt:`Enter new name for ${datapack.name}...`,ignoreFocusOut:!0,value:datapack.name});if(!newName)return;if(datapack.name==newName)return vscode.window.showWarningMessage("The new name cannot be same the old name");datapack.rename(newName),await this.vlocode.withProgress(`Renaming ${datapack.name}...`,(()=>this.vlocode.datapackService.expandDatapack(datapack,datapack.projectFolder)));const changes=new vscode.WorkspaceEdit;changes.deleteFile(vscode.Uri.file(path.dirname(datapack.headerFile)),{recursive:!0,ignoreIfNotExists:!1});await vscode.workspace.applyEdit(changes)}}exports.default=RenameDatapackCommand},"./src/commands/salesforce/clearDeveloperLogsCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const vscode=__webpack_require__("vscode"),metadataCommand_1=__webpack_require__("./src/commands/salesforce/metadataCommand.ts");class ClearDeveloperLogsCommand extends metadataCommand_1.default{async execute(){return this.vlocode.withActivity({cancellable:!0,location:vscode.ProgressLocation.Notification,progressTitle:"Deleting developer logs from server..."},(async(progress,token)=>{const result=await this.vlocode.salesforceService.clearDeveloperLogs(token);(null==token?void 0:token.isCancellationRequested)||vscode.window.showInformationMessage(`Successfully deleted ${result} developer logs from Salesforce`)}))}}exports.default=ClearDeveloperLogsCommand},"./src/commands/salesforce/clearMetadataDeploymentQueueCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const vscode=__webpack_require__("vscode"),deployMetadataCommand_1=__webpack_require__("./src/commands/salesforce/deployMetadataCommand.ts"),metadataCommand_1=__webpack_require__("./src/commands/salesforce/metadataCommand.ts");class ClearMetadataDeploymentQueueCommand extends metadataCommand_1.default{async execute(){this.vlocode.commands.get(deployMetadataCommand_1.default).clearQueue(),vscode.window.showInformationMessage("Cleared files pending deployment")}}exports.default=ClearMetadataDeploymentQueueCommand},"./src/commands/salesforce/createMetadataCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const path=__webpack_require__("path"),vscode=__webpack_require__("vscode"),util_1=__webpack_require__("./packages/util/lib/index.js"),fs=__webpack_require__("./node_modules/fs-extra/lib/index.js"),itemTemplates=__webpack_require__("./src/newItemTemplates.yaml"),globby=__webpack_require__("./node_modules/globby/index.js"),vlocityNamespaceService_1=__webpack_require__("./src/lib/vlocity/vlocityNamespaceService.ts"),core_1=__webpack_require__("./packages/core/lib/index.js"),metadataCommand_1=__webpack_require__("./src/commands/salesforce/metadataCommand.ts");class CreateMetadataCommand extends metadataCommand_1.default{constructor(typeName){super(),this.typeName=typeName}async execute(){var _a,_b;const newItemType=await this.getItemTemplate();if(!newItemType)return;const contextValues={apiVersion:null===(_a=this.vlocode.config.salesforce)||void 0===_a?void 0:_a.apiVersion,vlocityNamespace:core_1.container.get(vlocityNamespaceService_1.VlocityNamespaceService).getNamespace()};for(const[key,input]of Object.entries(null!==(_b=newItemType.input)&&void 0!==_b?_b:{})){const value=await this.getUserValue(input);if(void 0===value)return;contextValues[key]=value}const targetFolder=await this.getTargetFolder(newItemType);if(targetFolder){for(const[index,file]of Object.entries(newItemType.files)){const filePath=util_1.formatString(file.path,contextValues).trim(),fileBody=util_1.formatString(file.template,contextValues).trim(),fileUri=vscode.Uri.file(path.join(targetFolder,filePath));try{await fs.ensureDir(path.dirname(fileUri.fsPath)),await fs.writeFile(fileUri.fsPath,fileBody,{flag:"wx"})}catch(e){vscode.window.showErrorMessage(`Unable to create the specified item; a file with the same name already exists: ${fileUri.fsPath}`)}if("0"==index){const document=await vscode.workspace.openTextDocument(fileUri);vscode.window.showTextDocument(document)}}vscode.window.showInformationMessage(newItemType.successNotification||"Successfully created new item")}}async getItemTemplate(){if(this.typeName){if(itemTemplates[this.typeName])return itemTemplates[this.typeName];this.logger.warn(`The pre-specified template ${this.typeName} does not exist; defaulting to type selection`)}return vscode.window.showQuickPick(Object.values(itemTemplates),{placeHolder:"Select the type of file you want to create"})}async getTargetFolder(newItemType){var _a,_b;if(!vscode.workspace.workspaceFolders){const selectedFolder=await vscode.window.showOpenDialog({defaultUri:void 0,openLabel:"Select folder",canSelectFiles:!1,canSelectFolders:!0,canSelectMany:!1});return null===(_a=null==selectedFolder?void 0:selectedFolder[0])||void 0===_a?void 0:_a.fsPath}const workspaceFolders=vscode.workspace.workspaceFolders.map((ws=>util_1.sanitizePath(ws.uri.fsPath,path.posix.sep))),patterns=workspaceFolders.map((ws=>path.posix.join(ws,"**",newItemType.folderName))),targetFolders=await globby(patterns,{onlyDirectories:!0});if(1==targetFolders.length)return targetFolders[0];if(targetFolders.length){const folderOptions=targetFolders.map((fullPath=>({label:workspaceFolders.reduce(((p,ws)=>p.replace(ws+path.posix.sep,"")),fullPath),fsPath:fullPath})));return null===(_b=await vscode.window.showQuickPick(folderOptions,{placeHolder:`Select the folder in which to create ${newItemType.label}`,ignoreFocusOut:!0}))||void 0===_b?void 0:_b.fsPath}}async getUserValue(input){if("text"===input.type)return vscode.window.showInputBox({prompt:input.prompt,placeHolder:input.placeholder});if("select"===input.type){const value=await vscode.window.showQuickPick(input.options,{placeHolder:input.placeholder});if(!value)return;return value.value||value.label}throw new Error(`The specified input type is not supported: ${input.type}`)}}exports.default=CreateMetadataCommand},"./src/commands/salesforce/deleteMetadataCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const path=__webpack_require__("path"),deploymentPackageBuilder_1=__webpack_require__("./src/lib/salesforce/deploymentPackageBuilder.ts"),vscode=__webpack_require__("vscode"),metadataCommand_1=__webpack_require__("./src/commands/salesforce/metadataCommand.ts");class DeleteMetadataCommand extends metadataCommand_1.default{execute(...args){return this.deleteMetadata.apply(this,[args[1]||[args[0]||this.currentOpenDocument],...args.slice(2)])}async deleteMetadata(selectedFiles){const progressTitle=1==selectedFiles.length?`${path.basename(selectedFiles[0].fsPath)}`:`${selectedFiles.length} files`;await this.vlocode.withActivity({progressTitle:`Destruct ${progressTitle}...`,location:vscode.ProgressLocation.Window,cancellable:!0},(async(progress,token)=>{var _a,_b;const apiVersion=(null===(_a=this.vlocode.config.salesforce)||void 0===_a?void 0:_a.apiVersion)||await this.salesforce.getApiVersion(),packageBuilder=new deploymentPackageBuilder_1.SalesforcePackageBuilder(deploymentPackageBuilder_1.SalesforcePackageType.destruct,apiVersion),sfPackage=(await packageBuilder.addFiles(selectedFiles,token)).getPackage();if(null==token?void 0:token.isCancellationRequested)return;const result=await this.salesforce.deploy.deployPackage(sfPackage,{ignoreWarnings:!0},void 0,token);if(!result.success){if(null===(_b=result.details)||void 0===_b?void 0:_b.componentFailures){await this.logDeployResult(sfPackage,result);const distinctProblems=[...new Set(result.details.componentFailures.map((failure=>failure.problem)))];if(1==distinctProblems.length)throw new Error(distinctProblems[0])}else this.logger.error(`Destruct failed ${result.status}`);throw new Error("Failed to delete one or more components from the org")}const componentNames=sfPackage.getComponentNames();this.logger.info(`Destruct of ${componentNames.join(", ")} succeeded`),vscode.window.showInformationMessage(`Destructed ${progressTitle}`)}))}}exports.default=DeleteMetadataCommand},"./src/commands/salesforce/deployMetadataCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const path=__webpack_require__("path"),vscode=__webpack_require__("vscode"),util_1=__webpack_require__("./packages/util/lib/index.js"),deploymentPackageBuilder_1=__webpack_require__("./src/lib/salesforce/deploymentPackageBuilder.ts"),open=__webpack_require__("./node_modules/open/index.js"),salesforceDeployment_1=__webpack_require__("./src/lib/salesforce/salesforceDeployment.ts"),vlocodeActivity_1=__webpack_require__("./src/lib/vlocodeActivity.ts"),_constants_1=__webpack_require__("./src/constants.ts"),metadataCommand_1=__webpack_require__("./src/commands/salesforce/metadataCommand.ts");class DeployMetadataCommand extends metadataCommand_1.default{constructor(){super(...arguments),this.filesPendingDeployment=new Set,this.enabled=!0}get pendingFiles(){return this.filesPendingDeployment.size}execute(...args){return this.deployMetadata.apply(this,[args[1]||[args[0]||this.currentOpenDocument],...args.slice(2)])}initialize(){this.setEnabled(!0)}popPendingFiles(){const files=[...this.filesPendingDeployment];return this.filesPendingDeployment.clear(),files}setEnabled(state){this.enabled=state,this.vlocode.createUpdateStatusBarItem("metadataDeployStatus",{text:state?"$(debug-pause)":"$(debug-continue)",tooltip:state?"Pause Salesforce deployments":"Resume Salesforce deployments",command:state?_constants_1.VlocodeCommand.pauseDeploymentQueue:_constants_1.VlocodeCommand.resumeDeploymentQueue}),state&&void 0===this.deploymentTaskRef&&this.filesPendingDeployment.size>0&&this.deployMetadata([])}clearQueue(){this.filesPendingDeployment.clear()}saveUnsavedChanges(sfPackage){const filesToSave=new Set(sfPackage.files()),openDocuments=vscode.workspace.textDocuments.filter((d=>d.isDirty&&filesToSave.has(d.uri.fsPath)));return util_1.forEachAsyncParallel(openDocuments,(doc=>doc.save()))}async deployMetadata(selectedFiles){if(!this.enabled||!await this.salesforce.isProductionOrg()||await this.showProductionWarning(!1))if(selectedFiles.forEach(this.filesPendingDeployment.add,this.filesPendingDeployment),void 0===this.deploymentTaskRef&&this.enabled)this.deploymentTaskRef=setImmediate((async()=>{try{for(;this.filesPendingDeployment.size>0;)await this.doDeployMetadata(this.popPendingFiles())}finally{this.deploymentTaskRef=void 0}}));else{const fileNameText=1==selectedFiles.length?path.basename(selectedFiles[0].fsPath):`${selectedFiles.length} files`;this.logger.info(`Deployment queued of ${fileNameText}`),vscode.window.showInformationMessage(`Queued deployment of ${fileNameText} (queue: ${this.filesPendingDeployment.size})...`,...this.enabled?["Cancel"]:[]).then((cancel=>{cancel&&selectedFiles.forEach(this.filesPendingDeployment.delete,this.filesPendingDeployment)}))}}async doDeployMetadata(files){var _a;const apiVersion=(null===(_a=this.vlocode.config.salesforce)||void 0===_a?void 0:_a.apiVersion)||await this.salesforce.getApiVersion(),taskTitle=1==files.length?`Deploy ${util_1.fileName(files[0].fsPath,!0)}`:"Deploy Metadata";await this.vlocode.withActivity({progressTitle:taskTitle,location:vscode.ProgressLocation.Notification,propagateExceptions:!1,cancellable:!0},this.getDeploymentActivity(apiVersion,files))}getDeploymentActivity(apiVersion,files){return async(progress,token)=>{var _a,_b;token.onCancellationRequested((()=>progress.report({message:"cancellation in progress"}))),progress.report({message:"building package"});const packageBuilder=new deploymentPackageBuilder_1.SalesforcePackageBuilder(deploymentPackageBuilder_1.SalesforcePackageType.deploy,apiVersion),sfPackage=(await packageBuilder.addFiles(files,token)).getPackage();if(!sfPackage||(null==token?void 0:token.isCancellationRequested))return;if(0==sfPackage.size())return void vscode.window.showWarningMessage("Selected files are not deployable Salesforce Metadata");const componentNames=sfPackage.getComponentNames(),progressTitle=1==sfPackage.size()?componentNames[0]:`${sfPackage.size()} components`;this.logger.info(`Added ${sfPackage.size()} components from ${sfPackage.files().size} source files`),progress.report({message:`deploying ${sfPackage.size()} components`}),await this.saveUnsavedChanges(sfPackage),this.clearPreviousErrors(sfPackage.files());const deployment=new salesforceDeployment_1.SalesforceDeployment(sfPackage);deployment.on("progress",(status=>{progress.report({message:`${status.status} ${status.total?`${status.deployed}/${status.total}`:""}`,increment:status.increment,total:status.total})})),token.onCancellationRequested((()=>deployment.cancel())),await deployment.start({ignoreWarnings:!0}),this.logger.info(`Deployment details: ${await this.vlocode.salesforceService.getPageUrl(deployment.setupUrl)}`);const result=await deployment.getResult();if(await this.logDeployResult(sfPackage,result),!result.success)return vscode.window.showErrorMessage(`Deployment ${null==result?void 0:result.id} ${result.status}`,"See details").then((async selected=>selected&&void open(await this.vlocode.salesforceService.getPageUrl(deployment.setupUrl,{useFrontdoor:!0})))),void progress.report({status:vlocodeActivity_1.VlocodeActivityStatus.Failed});!!(null===(_b=null===(_a=result.details)||void 0===_a?void 0:_a.componentFailures)||void 0===_b?void 0:_b.length)?(this.logger.warn(`Deployment ${null==result?void 0:result.id} -- partially completed; see log for details`),vscode.window.showWarningMessage(`Partially deployed ${progressTitle}`,"See details").then((async selected=>selected&&void open(await this.vlocode.salesforceService.getPageUrl(deployment.setupUrl,{useFrontdoor:!0}))))):(this.logger.info(`Deployment ${null==result?void 0:result.id} -- successfully deployed ${progressTitle}`),vscode.window.showInformationMessage(`Successfully deployed ${progressTitle}`))}}}exports.default=DeployMetadataCommand},"./src/commands/salesforce/execAnonymousCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const vscode=__webpack_require__("vscode"),debugLogViewer_1=__webpack_require__("./src/lib/salesforce/debugLogViewer.ts"),metadataCommand_1=__webpack_require__("./src/commands/salesforce/metadataCommand.ts");class ExecAnonymousCommand extends metadataCommand_1.default{constructor(){super(...arguments),this.debugLogLevels=[{label:"User Debug",name:"USER_DEBUG",description:"Only log user debug statements",debugHeader:{Apex_code:"DEBUG"}},{label:"User Debug with Limits",description:"User debug statements and details on consumed govern limits",debugHeader:{Apex_code:"DEBUG",Apex_profiling:"INFO"}},{label:"User Debug with DML",description:"User debug statements and executed DML",debugHeader:{Apex_code:"DEBUG",Db:"FINEST"}},{label:"Fine",description:"All log levels set to FINE",debugHeader:{Apex_code:"FINE",Db:"FINE",All:"FINE",Apex_profiling:"FINE"}},{label:"Finest",description:"All log levels set to FINEST",debugHeader:{Apex_code:"FINEST",Db:"FINEST",System:"FINEST",All:"FINEST",Apex_profiling:"FINEST"}}]}getDiagnostics(){return this.vlocode.getDiagnostics("salesforce-anon-apex")}async execute(){var _a;if(!vscode.window.activeTextEditor)return;const selectedDocument=vscode.window.activeTextEditor.document,documentSelection=(null===(_a=vscode.window.activeTextEditor.selection)||void 0===_a?void 0:_a.isEmpty)?void 0:vscode.window.activeTextEditor.selection,documentOffset=(null==documentSelection?void 0:documentSelection.start)||new vscode.Position(0,0);let codeToExecute=selectedDocument.getText(documentSelection).trim();/(}|;)$/m.test(codeToExecute)||(codeToExecute+=";");const logLevel=await vscode.window.showQuickPick(this.debugLogLevels,{placeHolder:"Select the logging level detail to return after execution"});logLevel&&(this.getDiagnostics().clear(),await this.vlocode.withActivity({progressTitle:"Executing anonymous APEX...",propagateExceptions:!0,location:vscode.ProgressLocation.Notification,cancellable:!1},(async()=>{const result=await this.salesforce.executeAnonymous(codeToExecute,logLevel.debugHeader);if(!result.compiled){const problemPosition=documentOffset.translate(result.line,result.column);throw await this.reportProblem(selectedDocument.uri,{problem:result.compileProblem,lineNumber:problemPosition.line,columnNumber:problemPosition.character}),new Error(`Failed to compile APEX: ${result.compileProblem}`)}if(result.debugLog&&new debugLogViewer_1.DebugLogViewer({userDebugOnly:"USER_DEBUG"===logLevel.name}).showExecutionLog(result.debugLog),!result.success)throw new Error(`Execution failed: ${result.exceptionMessage}`);vscode.window.showInformationMessage("Execution successful")})))}}exports.default=ExecAnonymousCommand},"./src/commands/salesforce/execRestApiCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const util_1=__webpack_require__("./packages/util/lib/index.js"),vscode=__webpack_require__("vscode"),metadataCommand_1=__webpack_require__("./src/commands/salesforce/metadataCommand.ts");class ExecuteRestApiCommand extends metadataCommand_1.default{async execute(){let url=await vscode.window.showInputBox({placeHolder:"Enter the Salesforce API endpoint",ignoreFocusOut:!0});if(!url)return;const method=await vscode.window.showQuickPick(["GET","POST"],{placeHolder:"Select HTTP Method",ignoreFocusOut:!0});if(!method)return;let body;if(url.startsWith("/services")||(url=`/services/apexrest/${url}`.replace(/[/]+/g,"/")),"POST"==method&&(body=await vscode.window.showInputBox({placeHolder:"Enter POST body",ignoreFocusOut:!0}),!body))return;this.logger.info(`Invoking ${url} as ${method}`);const timer=new util_1.Timer,connection=await this.salesforce.getJsForceConnection(),response=await this.vlocode.withActivity({progressTitle:`${method} ${url}...`,location:vscode.ProgressLocation.Notification,cancellable:!1},(()=>connection.request({method,url,body})));this.logger.info(`${method} ${url} [${timer.stop()}]`);const responseDocument=await vscode.workspace.openTextDocument({language:"json",content:JSON.stringify(response,null,4)});responseDocument&&vscode.window.showTextDocument(responseDocument)}}exports.default=ExecuteRestApiCommand},"./src/commands/salesforce/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const _constants_1=__webpack_require__("./src/constants.ts"),deployMetadataCommand_1=__webpack_require__("./src/commands/salesforce/deployMetadataCommand.ts"),deleteMetadataCommand_1=__webpack_require__("./src/commands/salesforce/deleteMetadataCommand.ts"),refreshMetadataCommand_1=__webpack_require__("./src/commands/salesforce/refreshMetadataCommand.ts"),selectApiVersionCommand_1=__webpack_require__("./src/commands/salesforce/selectApiVersionCommand.ts"),createMetadataCommand_1=__webpack_require__("./src/commands/salesforce/createMetadataCommand.ts"),execAnonymousCommand_1=__webpack_require__("./src/commands/salesforce/execAnonymousCommand.ts"),viewInSalesforce_1=__webpack_require__("./src/commands/salesforce/viewInSalesforce.ts"),clearDeveloperLogsCommand_1=__webpack_require__("./src/commands/salesforce/clearDeveloperLogsCommand.ts"),setTraceFlagsCommand_1=__webpack_require__("./src/commands/salesforce/setTraceFlagsCommand.ts"),setDeveloperLogVisibilityCommand_1=__webpack_require__("./src/commands/salesforce/setDeveloperLogVisibilityCommand.ts"),execRestApiCommand_1=__webpack_require__("./src/commands/salesforce/execRestApiCommand.ts"),retrieveMetadataCommand_1=__webpack_require__("./src/commands/salesforce/retrieveMetadataCommand.ts"),pauseDeploymentsCommand_1=__webpack_require__("./src/commands/salesforce/pauseDeploymentsCommand.ts"),resumeDeploymentsCommand_1=__webpack_require__("./src/commands/salesforce/resumeDeploymentsCommand.ts"),clearMetadataDeploymentQueueCommand_1=__webpack_require__("./src/commands/salesforce/clearMetadataDeploymentQueueCommand.ts"),updateProfileCommand_1=__webpack_require__("./src/commands/salesforce/updateProfileCommand.ts");exports.default={[_constants_1.VlocodeCommand.deployMetadata]:deployMetadataCommand_1.default,[_constants_1.VlocodeCommand.destroyMetadata]:deleteMetadataCommand_1.default,[_constants_1.VlocodeCommand.refreshMetadata]:refreshMetadataCommand_1.default,[_constants_1.VlocodeCommand.selectApiVersion]:selectApiVersionCommand_1.default,[_constants_1.VlocodeCommand.createMetadataCommand]:createMetadataCommand_1.default,[_constants_1.VlocodeCommand.execAnonymousCommand]:execAnonymousCommand_1.default,[_constants_1.VlocodeCommand.viewInSalesforce]:viewInSalesforce_1.default,[_constants_1.VlocodeCommand.createApexClass]:new createMetadataCommand_1.default("apexClass"),[_constants_1.VlocodeCommand.createLwc]:new createMetadataCommand_1.default("lwc"),[_constants_1.VlocodeCommand.createOmniscriptLwc]:new createMetadataCommand_1.default("omniscriptLwc"),[_constants_1.VlocodeCommand.clearDeveloperLogs]:clearDeveloperLogsCommand_1.default,[_constants_1.VlocodeCommand.setTraceFlags]:setTraceFlagsCommand_1.default,[_constants_1.VlocodeCommand.setLogVisibility]:setDeveloperLogVisibilityCommand_1.default,[_constants_1.VlocodeCommand.execRestApi]:execRestApiCommand_1.default,[_constants_1.VlocodeCommand.retrieveMetadata]:retrieveMetadataCommand_1.default,[_constants_1.VlocodeCommand.pauseDeploymentQueue]:pauseDeploymentsCommand_1.default,[_constants_1.VlocodeCommand.resumeDeploymentQueue]:resumeDeploymentsCommand_1.default,[_constants_1.VlocodeCommand.clearDeploymentQueue]:clearMetadataDeploymentQueueCommand_1.default,[_constants_1.VlocodeCommand.addToProfile]:new updateProfileCommand_1.default("add"),[_constants_1.VlocodeCommand.removeFromProfile]:new updateProfileCommand_1.default("remove")}},"./src/commands/salesforce/metadataCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const vscode=__webpack_require__("vscode"),util_1=__webpack_require__("./packages/util/lib/index.js"),commandBase_1=__webpack_require__("./src/commands/commandBase.ts");class MetadataCommand extends commandBase_1.CommandBase{constructor(){super(...arguments),this.problemMatchers=[{test:/(?<message>.*):\s*(?<token>.*)/,handler:this.tokenProblemHandler.bind(this)},{test:/.+/,handler:this.genericProblemHandler.bind(this)}]}getDiagnostics(){return this.vlocode.getDiagnostics("salesforce")}get salesforce(){return this.vlocode.salesforceService}async validate(){const validationMessage=await this.vlocode.validateSalesforceConnectivity();if(validationMessage)throw validationMessage}async logDeployResult(sfPackage,result){var _a,_b,_c,_d;if(result.success?this.logger.info(`Deployment ${null==result?void 0:result.id} -- ${result.status} (${result.numberComponentsDeployed}/${result.numberComponentsTotal})`):this.logger.error(`Deployment ${null==result?void 0:result.id} -- ${result.status}`),!(null===(_b=null===(_a=result.details)||void 0===_a?void 0:_a.componentFailures)||void 0===_b?void 0:_b.length))return;const filterFailures=null===(_d=null===(_c=result.details)||void 0===_c?void 0:_c.componentFailures)||void 0===_d?void 0:_d.filter((failure=>!failure.problem.startsWith("An unexpected error occurred.")));for(const failure of filterFailures.filter((failure=>failure&&!!failure.fileName))){const info=sfPackage.getSourceFile(failure.fileName.replace(/^src\//i,""));info&&await this.reportProblem(vscode.Uri.file(info),failure)}filterFailures.filter((failure=>failure)).forEach(((failure,i)=>{this.logger.warn(` ${i+1}. ${failure.fullName} -- ${failure.problemType} -- ${failure.problem}`)}))}async reportProblem(localPath,failure){const startPosition=new vscode.Position(parseInt(failure.lineNumber,10)-1,parseInt(failure.columnNumber,10)-1),fileBody=await util_1.getDocumentBodyAsString(localPath.fsPath);for(const matcher of this.problemMatchers){const match=failure.problem.match(matcher.test);if(match)try{const range=matcher.handler(fileBody,failure.problem,startPosition,match);if(range)return void this.addError(localPath,range,failure.problem)}catch(e){this.logger.error(`Problem matcher error: ${e.message||e}`)}}this.logger.warn("All problem matchers failed, falling back to basic single character match"),this.addError(localPath,new vscode.Range(startPosition,startPosition.translate(0,1)),failure.problem)}tokenProblemHandler(content,problem,start,match){if(match.groups)return this.findSubstring(content,start.line,start.character,match.groups.token)||this.findSubstring(content,start.line,0,match.groups.token)}genericProblemHandler(content,problem,start){return this.findTerminator(content,start.line,start.character)}clearPreviousErrors(files){for(const file of files)this.clearMessages("string"==typeof file?vscode.Uri.file(file):file)}clearMessages(file){this.getDiagnostics().get(file)&&this.getDiagnostics().set(file,[])}addError(file,range,message){this.addMessage(vscode.DiagnosticSeverity.Error,file,range,message)}addWarning(file,range,message){this.addMessage(vscode.DiagnosticSeverity.Warning,file,range,message)}addMessage(severity,file,range,message){const currentMessages=this.getDiagnostics().get(file)||[];this.getDiagnostics().set(file,[...currentMessages,new vscode.Diagnostic(range,message,severity)])}findSubstring(content,lineNumber,index,needle){var _a;const column=null===(_a=content.split("\n")[lineNumber])||void 0===_a?void 0:_a.indexOf(needle,index);if(column&&-1!=column)return new vscode.Range(new vscode.Position(lineNumber,column),new vscode.Position(lineNumber,column+needle.length))}findTerminator(content,lineNumber,index,terminationPattern=/\W{1}/i){var _a;const match=null===(_a=content.split("\n")[lineNumber])||void 0===_a?void 0:_a.substr(index).match(terminationPattern);if(match&&void 0!==match.index)return new vscode.Range(new vscode.Position(lineNumber,index),new vscode.Position(lineNumber,index+match.index))}}exports.default=MetadataCommand},"./src/commands/salesforce/pauseDeploymentsCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const _constants_1=__webpack_require__("./src/constants.ts"),vscode=__webpack_require__("vscode"),deployMetadataCommand_1=__webpack_require__("./src/commands/salesforce/deployMetadataCommand.ts"),metadataCommand_1=__webpack_require__("./src/commands/salesforce/metadataCommand.ts");class PauseMetadataDeploymentsCommand extends metadataCommand_1.default{async execute(){this.vlocode.commands.get(deployMetadataCommand_1.default).setEnabled(!1),vscode.window.showInformationMessage("Salesforce deployments paused","Resume").then((resume=>resume&&vscode.commands.executeCommand(_constants_1.VlocodeCommand.resumeDeploymentQueue)))}}exports.default=PauseMetadataDeploymentsCommand},"./src/commands/salesforce/refreshMetadataCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const vscode=__webpack_require__("vscode"),fs=__webpack_require__("./node_modules/fs-extra/lib/index.js"),util_1=__webpack_require__("./packages/util/lib/index.js"),deploymentPackageBuilder_1=__webpack_require__("./src/lib/salesforce/deploymentPackageBuilder.ts"),metadataCommand_1=__webpack_require__("./src/commands/salesforce/metadataCommand.ts");class RefreshMetadataCommand extends metadataCommand_1.default{execute(...args){return this.refreshMetadata.apply(this,[args[1]||[args[0]||this.currentOpenDocument],...args.slice(2)])}async refreshMetadata(selectedFiles){var _a;const apiVersion=(null===(_a=this.vlocode.config.salesforce)||void 0===_a?void 0:_a.apiVersion)||await this.salesforce.getApiVersion(),sfPackage=await vscode.window.withProgress({title:"Building component manifest...",location:vscode.ProgressLocation.Notification},(async(progress,token)=>{const packageBuilder=new deploymentPackageBuilder_1.SalesforcePackageBuilder(deploymentPackageBuilder_1.SalesforcePackageType.retrieve,apiVersion);return(await packageBuilder.addFiles(selectedFiles,token)).getPackage()}));if(this.clearPreviousErrors(sfPackage.files()),0==sfPackage.size())return void vscode.window.showWarningMessage("None of the selected files or folders are refreshable Salesforce Metadata");const componentsRequested=sfPackage.getComponentNames(),progressTitle=1==sfPackage.size()?componentsRequested[0]:`${sfPackage.size()} components`;this.logger.info(`Refresh ${sfPackage.size()} components from ${sfPackage.files().size} source files`),await this.vlocode.withActivity({progressTitle:`Refreshing ${progressTitle}...`,location:vscode.ProgressLocation.Notification,propagateExceptions:!0,cancellable:!0},(async(progress,token)=>{const result=await this.salesforce.deploy.retrieveManifest(sfPackage.manifest,apiVersion,token);if(null==token?void 0:token.isCancellationRequested)return;if(!result.success)throw new Error("Failed to refresh selected metadata.");if(0==result.retrieveCount)throw new Error("None of the requested components could be found in the target org.");for(const component of result.components()){const sourceFolder=sfPackage.getSourceFolder(component.componentType,component.componentName);component.componentType.includes("bundle")&&sourceFolder&&await fs.emptyDir(sourceFolder)}for(const component of result.components()){const sourceFolder=sfPackage.getSourceFolder(component.componentType,component.componentName);if(sourceFolder)for(const file of component.files)await file.unpackToFolder(sourceFolder,!0)}const componentsNotFound=util_1.except(componentsRequested,result.componentNames());componentsNotFound.length>0&&this.logger.warn(`Unable to refresh the following components: ${componentsNotFound.join(", ")}`),componentsNotFound.length>0?vscode.window.showWarningMessage(`Refreshed ${componentsRequested.length-componentsNotFound.length} out of ${componentsNotFound.length} components`):vscode.window.showInformationMessage(`Refreshed ${progressTitle}`)}))}}exports.default=RefreshMetadataCommand},"./src/commands/salesforce/resumeDeploymentsCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const vscode=__webpack_require__("vscode"),deployMetadataCommand_1=__webpack_require__("./src/commands/salesforce/deployMetadataCommand.ts"),metadataCommand_1=__webpack_require__("./src/commands/salesforce/metadataCommand.ts");class ResumeMetadataDeploymentsCommand extends metadataCommand_1.default{async execute(){var _a;null===(_a=this.vlocode.commands.get(deployMetadataCommand_1.default))||void 0===_a||_a.setEnabled(!0),vscode.window.showInformationMessage("Salesforce deployments resumed")}}exports.default=ResumeMetadataDeploymentsCommand},"./src/commands/salesforce/retrieveMetadataCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const path=__webpack_require__("path"),vscode=__webpack_require__("vscode"),util_1=__webpack_require__("./packages/util/lib/index.js"),packageXml_1=__webpack_require__("./src/lib/salesforce/deploy/packageXml.ts"),metadataCommand_1=__webpack_require__("./src/commands/salesforce/metadataCommand.ts");class RetrieveMetadataCommand extends metadataCommand_1.default{async execute(){return this.exportWizard()}async exportWizard(){const metadataType=await this.showMetadataTypeSelection();if(!metadataType)return;const components=await this.vlocode.withProgress(`Query ${metadataType.nameForMsgsPlural}...`,this.getExportableComponents(metadataType));if(0==components.length)return void vscode.window.showWarningMessage(`No exportable records for ${metadataType}`);const componentToExport=await this.showComponentSelection(components);return componentToExport?this.retrieveMetadata(componentToExport.map((item=>({fullname:item.fullName,componentType:metadataType.xmlName})))):void 0}async getExportableObjectLikeTypes(nameFilter){const connection=await this.salesforce.getJsForceConnection();return(await connection.describeGlobal()).sobjects.filter((obj=>"function"==typeof nameFilter?nameFilter(obj):nameFilter.test(obj.name))).map((record=>({label:record.label,fullName:record.name,keyPrefix:record.keyPrefix})))}async getExportableComponents(metadataType){const connection=await this.salesforce.getJsForceConnection(),components=await connection.metadata.list({type:metadataType.xmlName});if("CustomMetadata"===metadataType.xmlName){const getTypeName=fullName=>fullName.split(".")[0];return[...util_1.unique(components,(cmp=>getTypeName(cmp.fullName)),(cmp=>Object.assign(cmp,{label:getTypeName(cmp.fullName),fullName:`${getTypeName(cmp.fullName)}.*`})))]}return components}async showMetadataTypeSelection(){const metadataTypes=this.salesforce.getMetadataTypes().map((type=>{var _a;return{label:null!==(_a=type.nameForMsgsPlural)&&void 0!==_a?_a:type.xmlName,description:type.xmlName,type}})).sort(((a,b)=>a.label.localeCompare(b.label))),metadataToExport=await vscode.window.showQuickPick(metadataTypes,{matchOnDetail:!0,ignoreFocusOut:!0,placeHolder:"Select metadata type to export"});return null==metadataToExport?void 0:metadataToExport.type}async retrieveMetadata(components){var _a;const apiVersion=(null===(_a=this.vlocode.config.salesforce)||void 0===_a?void 0:_a.apiVersion)||await this.salesforce.getApiVersion(),manifest=new packageXml_1.PackageManifest;for(const cmp of components)manifest.add(cmp.componentType,cmp.fullname);this.logger.info(`Retrieving ${manifest.count()} components`),await this.vlocode.withActivity({progressTitle:`Retrieving ${manifest.count()} components...`,location:vscode.ProgressLocation.Notification,propagateExceptions:!0,cancellable:!0},(async(progress,token)=>{var _a,_b;const result=await this.salesforce.deploy.retrieveManifest(manifest,apiVersion,token);if(null==token?void 0:token.isCancellationRequested)return;if(!result.success)throw new Error("Failed to retrieve metadata.");if(!result.retrieveCount)throw new Error("No metadata retrieved from target org.");const unpackedFiles=new Array;for(const file of result.getFiles().filter((f=>"package.xml"!=f.fileName)))try{"sfdx"===this.vlocode.config.salesforce.exportFormat&&vscode.window.showWarningMessage("Decomposing metadata into SFDX format is currently not supported.");const unpackTarget=path.join(null!==(_b=null===(_a=vscode.workspace.workspaceFolders)||void 0===_a?void 0:_a[0].uri.fsPath)&&void 0!==_b?_b:".",this.vlocode.config.salesforce.exportFolder);await file.unpackToFolder(unpackTarget),this.logger.log(`Exported ${file.fullFileName}`),unpackedFiles.push(path.join(unpackTarget,file.fullFileName))}catch(err){this.logger.error(`${file.fullName} -- ${err.message||err}`)}const successMessage=`Successfully retrieved ${unpackedFiles.length} components`;1==unpackedFiles.length?vscode.window.showInformationMessage(successMessage,"Open").then((value=>value?void vscode.window.showTextDocument(vscode.Uri.file(unpackedFiles[0])):void 0)):vscode.window.showInformationMessage(successMessage)}))}async showComponentSelection(records){const objectOptions=records.map((record=>({label:record.fullName,description:`last modified: ${record.lastModifiedByName} (${record.lastModifiedDate})`,record}))).sort(((a,b)=>a.label.localeCompare(b.label))),objectSelection=await vscode.window.showQuickPick(objectOptions,{placeHolder:"Select metadata object to export",canPickMany:!0});if(objectSelection)return objectSelection.map((item=>item.record))}async showExportPathSelection(){var _a;const projectFolderSelection=await vscode.window.showQuickPick([{value:1,label:"Set the Default project folder for retrieving metadata",description:"set the default Salesforce project folder and continue"},{value:0,label:"Set the folder just for this retrieve",description:"select a folder only for this export"}],{placeHolder:"A project folder is required to retrieve metadata from Salesforce, set one up now?"});if(!projectFolderSelection||!projectFolderSelection.value)return;const firstWorkspace=null===(_a=vscode.workspace.workspaceFolders)||void 0===_a?void 0:_a[0],selectedFolder=await vscode.window.showOpenDialog({defaultUri:firstWorkspace?firstWorkspace.uri:void 0,openLabel:"Select Salesforce project folder",canSelectFiles:!1,canSelectFolders:!0,canSelectMany:!1});return selectedFolder?(2==projectFolderSelection.value&&(this.logger.info(`Updating Salesforce project path to: ${selectedFolder[0].fsPath}`),this.vlocode.config.projectPath=selectedFolder[0].fsPath),selectedFolder[0].fsPath):void 0}}exports.default=RetrieveMetadataCommand},"./src/commands/salesforce/selectApiVersionCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const vscode=__webpack_require__("vscode"),commandBase_1=__webpack_require__("./src/commands/commandBase.ts");class SelectApiVersionCommand extends commandBase_1.CommandBase{async validate(){const validationMessage=await this.vlocode.validateSalesforceConnectivity();if(validationMessage)throw validationMessage}async execute(){const versionOptions=await this.getApiVersions(),apiVersion=await vscode.window.showQuickPick(versionOptions,{placeHolder:"Select the API version to use for Salesforce deployments"});if(!apiVersion)return;let newApiVersion=apiVersion.version;(newApiVersion||(newApiVersion=await vscode.window.showInputBox({placeHolder:"Enter the API version number; for example: 35.0",validateInput:input=>{if(!/^\d{2,3}\.\d$/.test(input))return"Salesforce API versions should start wih a 2 digit number followed by a single digit minor version number which is usually 0"},ignoreFocusOut:!0}),newApiVersion))&&(vscode.window.showInformationMessage(`Using Salesforce API version ${newApiVersion}`),this.vlocode.updateApiVersion(newApiVersion))}async getApiVersions(){const currentApiVersion=this.vlocode.config.salesforce.apiVersion;return[...(await this.vlocode.salesforceService.getApiVersions(7)).map((version=>({label:`${currentApiVersion==version?"$(primitive-dot) ":""}Salesforce API Version ${version}`,version}))),{label:"Enter version manually",version:void 0}]}}exports.default=SelectApiVersionCommand},"./src/commands/salesforce/setDeveloperLogVisibilityCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const vscode=__webpack_require__("vscode"),metadataCommand_1=__webpack_require__("./src/commands/salesforce/metadataCommand.ts");class SetDeveloperLogVisibilityCommand extends metadataCommand_1.default{constructor(){super(...arguments),this.logVisibilityOptions=[{label:"Current user only",description:"Display only the Salesforce developer logs for the currently connected user",value:"self"},{label:"All users",description:"Display Salesforce developer logs from all users with active trace flags on the target org",value:"all"}]}async execute(){const developerLogVisibility=await vscode.window.showQuickPick(this.logVisibilityOptions,{placeHolder:"Set log visibility..."});developerLogVisibility&&(this.vlocode.config.salesforce.developerLogsVisibility=developerLogVisibility.value,vscode.window.showInformationMessage(`Set log visibility to: ${developerLogVisibility.label}`))}}exports.default=SetDeveloperLogVisibilityCommand},"./src/commands/salesforce/setTraceFlagsCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const vscode=__webpack_require__("vscode"),metadataCommand_1=__webpack_require__("./src/commands/salesforce/metadataCommand.ts");class SetTraceFlagsCommand extends metadataCommand_1.default{constructor(){super(...arguments),this.logLevelOptions={apexCode:{placeHolder:"APEX Code",default:"Debug",options:["None","Error","Warn","Info","Debug","Fine","Finer","Finest"],description:"The log category level for Apex code. Includes information about Apex code. Can also include log messages generated by data manipulation language (DML) statements, inline SOQL or SOSL queries, the start and completion of triggers, the start and completion of test methods, and so on."},apexProfiling:{placeHolder:"Profiling",default:"None",options:["None","Info","Debug","Fine","Finest"],description:"The log category level for profiling information. Includes cumulative profiling information, such as the limits for your namespace, the number of emails sent, and so on."},callout:{placeHolder:"Callouts",default:"Info",options:["None","Info","Finest"],description:"The log category level for callouts. Includes the request-response XML that the server is sending and receiving from an external Web service. The request-response XML is useful when debugging issues related to SOAP API calls."},database:{placeHolder:"Database/DML",default:"Info",options:["None","Info","Finest"],description:"The log category for database activity. Includes information about database activity, including every DML statement or inline SOQL or SOSL query."},validation:{placeHolder:"Validation",default:"Info",options:["None","Info"],description:"The log category level for validation rules. Includes information about validation rules, such as the name of the rule, or whether the rule evaluated true or false."},visualforce:{placeHolder:"VisualForce",default:"Fine",options:["None","Info","Fine","Finest"],description:"The log category level for Visualforce. Includes information about Visualforce events, including serialization and deserialization of the view state or the evaluation of a formula field in a Visualforce page."},workflow:{placeHolder:"Workflow",default:"The log category level for workflow rules. Includes information for workflow rules, such as the rule name and the actions taken.",options:["None","Error","Warn","Info","Debug","Fine","Finer","Finest"],description:"Tets"},system:{placeHolder:"System",default:"Info",options:["None","Info","Debug","Fine"],description:"The log category level for calls to all system methods, such as the System.debug method."}},this.noneTraceFlags={apexCode:"None",apexProfiling:"None",callout:"None",database:"None",validation:"Info",visualforce:"None",workflow:"None",system:"None"},this.traceFlagOptions=[{label:"User Debug",description:"Only log user debug statements",traceFlags:{...this.noneTraceFlags,apexCode:"Debug"}},{label:"User Debug with Limits",description:"User debug statements and details on consumed govern limits",traceFlags:{...this.noneTraceFlags,apexCode:"Debug",apexProfiling:"Finest"}},{label:"User Debug with DML",description:"User debug statements and executed DML",traceFlags:{...this.noneTraceFlags,apexCode:"Debug",database:"Finest"}},{label:"Fine",description:"All log levels set to FINE",traceFlags:{...this.noneTraceFlags,apexCode:"Fine",apexProfiling:"Fine",system:"Fine",workflow:"Fine",callout:"Info",validation:"Info",visualforce:"Fine"}},{label:"Finest",description:"All log levels set to FINEST",traceFlags:{...this.noneTraceFlags,apexCode:"Finest",apexProfiling:"Finest",system:"Info",workflow:"Finer",callout:"Finest",validation:"Info",visualforce:"Finest"}},{label:"Custom",description:"Set your own trace flags"},{label:"Clear/Disable",description:"Clear trace flags and disable debug logging for the current user",traceFlags:null}],this.traceFlagsDuration=300}async execute(){const traceFlagsSelection=await vscode.window.showQuickPick(this.traceFlagOptions,{placeHolder:"Select Debug Level for logging..."});if(!traceFlagsSelection)return;let traceFlags=traceFlagsSelection.traceFlags;return void 0!==traceFlags||(traceFlags=await this.getCustomTraceFlags(),traceFlags)?(this.traceFlagsWatcherId&&clearInterval(this.traceFlagsWatcherId),this.vlocode.withActivity({progressTitle:`Update log level: ${traceFlagsSelection.label}`,location:vscode.ProgressLocation.Notification,propagateExceptions:!0,cancellable:!1},(async()=>{let debugLevelName=`Vlocode: ${traceFlagsSelection.label}`;const userInfo=await this.salesforce.getConnectedUserInfo();if(traceFlagsSelection.traceFlags||(debugLevelName+=` ${userInfo.id}`),debugLevelName=debugLevelName.replace(/[^0-9a-z_]+/gi,"_"),void 0!==this.traceFlagsWatcherId&&clearInterval(this.traceFlagsWatcherId),await this.salesforce.clearUserTraceFlags(),traceFlags){const debugLevel=await this.salesforce.createDebugLevel(debugLevelName,traceFlags);this.currentTraceFlagsId=await this.salesforce.setTraceFlags(debugLevel,"USER_DEBUG",void 0,this.traceFlagsDuration),vscode.window.showInformationMessage(`Successfully updated Salesforce log levels to: ${traceFlagsSelection.label}`),this.traceFlagsWatcherId=setInterval(this.traceFlagsWatcher.bind(this),1e3*(this.traceFlagsDuration-60))}else vscode.window.showInformationMessage(`Successfully cleared traceflags for ${userInfo.username}`)}))):void 0}async getCustomTraceFlags(){const traceFlags={};for(const[field,info]of Object.entries(this.logLevelOptions)){const options=info.options.map((o=>({label:o,isDefault:info.default===o}))),defaultIndex=options.findIndex((o=>o.isDefault));defaultIndex>=0&&options.unshift(...options.splice(defaultIndex,1)),options[0]={...options[0],description:"(default)"};const selected=await vscode.window.showQuickPick(options,{placeHolder:`Select level for ${info.placeHolder}`});if(!selected)return;traceFlags[field]=selected.label}return traceFlags}async traceFlagsWatcher(){this.currentTraceFlagsId&&(this.logger.debug(`Extending active trace flags (${this.currentTraceFlagsId}) with ${this.traceFlagsDuration} seconds`),await this.salesforce.extendTraceFlags(this.currentTraceFlagsId,this.traceFlagsDuration))}}exports.default=SetTraceFlagsCommand},"./src/commands/salesforce/updateProfileCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const path=__webpack_require__("path"),vscode=__webpack_require__("vscode"),deploymentPackageBuilder_1=__webpack_require__("./src/lib/salesforce/deploymentPackageBuilder.ts"),salesforceProfile_1=__webpack_require__("./src/lib/salesforce/salesforceProfile.ts"),util_1=__webpack_require__("./packages/util/lib/index.js"),metadataCommand_1=__webpack_require__("./src/commands/salesforce/metadataCommand.ts");class UpdateRelatedProfileCommand extends metadataCommand_1.default{constructor(action){super(),this.action=action}execute(...args){return this.updateProfiles([...args[1]||[args[0]||this.currentOpenDocument],...args.slice(2)])}async updateProfiles(selectedFiles){const mdPackage=await this.vlocode.withActivity("Parsing metadata...",(async()=>(await new deploymentPackageBuilder_1.SalesforcePackageBuilder(deploymentPackageBuilder_1.SalesforcePackageType.deploy).addFiles(selectedFiles)).getPackage())),manifest=mdPackage.manifest,classes=manifest.list("ApexClass"),pages=manifest.list("ApexPage"),fields=await Promise.all(manifest.list("CustomField").map((async field=>{const data=await mdPackage.getPackageMetadata("CustomField",field);return{field,metadata:util_1.asArray(data.fields).find((f=>f.fullName==field.split(".").pop()))}}))),addableFields=fields.filter((({metadata})=>this.isProfileCompatibleField(metadata)));if(!manifest.count())return void vscode.window.showErrorMessage("None of the selected files are detected as Salesforce metadata");if(!classes.length&&!fields.length)return void vscode.window.showErrorMessage("None of the selected files can be added to the profiles; currently only APEX classes/pages and CustomFields are supported");const selectedProfiles=await this.showProfileSelection();if(!selectedProfiles)return;const options=await this.showOptionSelection(manifest);if(!options)return;const updatedProfiles=await this.vlocode.withActivity("Updating profiles...",(()=>{for(const{profile}of selectedProfiles)"add"==this.action?(classes.forEach((className=>profile.addClass(className,options.apexAccess))),pages.forEach((pageName=>profile.addPage(pageName,options.apexAccess))),addableFields.forEach((({field})=>profile.addField(field,options.fieldPermission)))):(classes.forEach((className=>profile.removeClass(className))),pages.forEach((pageName=>profile.removePage(pageName))),fields.forEach((({field})=>profile.removeField(field))));return this.applyProfileChanges(selectedProfiles)}));updatedProfiles.length>0?vscode.window.showInformationMessage(`Successfully updated ${updatedProfiles.length} (${this.action}) profile${1==updatedProfiles.length?"":"s"}`):vscode.window.showInformationMessage("Selected profiles already up to date")}isProfileCompatibleField(metadata){return"CheckBox"!==metadata.type&&!metadata.required}async applyProfileChanges(profiles){const profileChanges=new vscode.WorkspaceEdit,updatedProfiles=[];for(const{file,profile}of profiles){if(!profile.hasChanges)continue;const profileDoc=await vscode.workspace.openTextDocument(path.resolve(file)),fullDocumentRange=new vscode.Range(new vscode.Position(0,0),new vscode.Position(profileDoc.lineCount,0));this.logger.info(`Updating profile ${profile.name}`),profileChanges.replace(profileDoc.uri,fullDocumentRange,profile.toXml()),updatedProfiles.push(profile)}return await vscode.workspace.applyEdit(profileChanges),updatedProfiles}async showOptionSelection(manifest){const options={apexAccess:!0,fieldPermission:salesforceProfile_1.SalesforceFieldPermission.editable};if("remove"==this.action)return options;if(manifest.has("ApexClass")||manifest.has("ApexPage")){const access=await vscode.window.showQuickPick([{label:"$(check) Enabled Apex Class/Page",apexAccess:!0},{label:"$(circle-slash) Disabled Apex Class/Page",apexAccess:!1}],{placeHolder:"Select Apex Class and Page access level",ignoreFocusOut:!0});if(!access)return;options.apexAccess=access.apexAccess}if(manifest.has("CustomField")){const access=await vscode.window.showQuickPick([{label:"$(edit) Editable (read-write)",fieldPermission:salesforceProfile_1.SalesforceFieldPermission.editable},{label:"$(eye) Readonly",fieldPermission:salesforceProfile_1.SalesforceFieldPermission.readable},{label:"$(circle-slash) No access",fieldPermission:salesforceProfile_1.SalesforceFieldPermission.none}],{placeHolder:"Select field permissions",ignoreFocusOut:!0});if(!access)return;options.fieldPermission=access.fieldPermission}return options}async showProfileSelection(){const profiles=this.salesforce.loadProfilesFromDisk(),selectionType=await vscode.window.showQuickPick([{label:"$(versions) Update all profiles",selectManually:!1},{label:"$(checklist) Manually select profiles to update",selectManually:!0}],{placeHolder:"Which profiles should be updated?"});if(selectionType){if(selectionType.selectManually){const selectedProfile=await vscode.window.showQuickPick((await profiles).map((profile=>({label:profile.profile.name,profile}))),{canPickMany:!0,ignoreFocusOut:!0,placeHolder:"Which profiles should be updated?"});if(!(null==selectedProfile?void 0:selectedProfile.length))return;return selectedProfile.map((({profile})=>profile))}return profiles}}}exports.default=UpdateRelatedProfileCommand},"./src/commands/salesforce/viewInSalesforce.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const open=__webpack_require__("./node_modules/open/index.js"),metadataCommand_1=__webpack_require__("./src/commands/salesforce/metadataCommand.ts");class ViewInSalesforceCommand extends metadataCommand_1.default{async execute(args){return this.openFileInSalesforce(args[0]||this.currentOpenDocument)}getUrlFormat(metadataType){return"CustomObject"==metadataType.xmlName?"/lightning/setup/ObjectManager/page?address=/${Id}":"/lightning/setup/one/page?address=/${Id}"}async openFileInSalesforce(selectedFile){const setupUrl=await this.salesforce.getMetadataSetupUrl(selectedFile.fsPath);if(!setupUrl)throw`The selected file (${selectedFile.fsPath}) is not a known Salesforce metadata type`;this.logger.info(`Opening URL: ${setupUrl}`),open(await this.vlocode.salesforceService.getPageUrl(setupUrl,{useFrontdoor:!0}))}}exports.default=ViewInSalesforceCommand},"./src/commands/selectOrgCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const vscode=__webpack_require__("vscode"),util_1=__webpack_require__("./packages/util/lib/index.js"),commandBase_1=__webpack_require__("./src/commands/commandBase.ts");class SelectOrgCommand extends commandBase_1.CommandBase{constructor(){super(...arguments),this.newOrgOption={label:"$(key) Authorize new org",description:"You will be prompted for the login url"},this.refreshTokensOption={label:"$(refresh) Refresh OAuth tokens",description:"Refresh the Access and Refresh tokens if expired"},this.salesforceOrgTypes=[{label:"$(microscope) Sandbox",description:"https://test.salesforce.com",instanceUrl:"https://test.salesforce.com"},{label:"$(device-desktop) Production",description:"https://login.salesforce.com",instanceUrl:"https://login.salesforce.com"},{label:"$(settings) Other",description:"Provide a custom instance URL"}],this.salesforceUrlValidator=url=>{if(url&&!/(^http(s){0,1}:\/\/[^/]+\.[a-z]+(:[0-9]+|)$)|(^\s*$)/i.test(url))return"Please specify a valid domain URL starting with https or http"}}validate(){const validationMessage=this.vlocode.validateWorkspaceFolder();if(validationMessage)throw validationMessage}async getAuthorizedOrgs(){return(await util_1.sfdx.getAllKnownOrgDetails()).map((orgInfo=>({label:orgInfo.alias?`${orgInfo.alias} - ${orgInfo.username}`:orgInfo.username,description:orgInfo.instanceUrl,orgInfo})))}async execute(){const knownOrgs=await this.vlocode.withStatusBarProgress("Loading SFDX org details...",this.getAuthorizedOrgs()),selectedOrg=await vscode.window.showQuickPick([this.newOrgOption,this.refreshTokensOption].concat(knownOrgs),{placeHolder:"Select an existing Salesforce org -or- authorize a new one"});if(selectedOrg)if(selectedOrg===this.refreshTokensOption)await this.vlocode.refreshOAuthTokens();else{const selectedOrgInfo=selectedOrg.orgInfo||await this.authorizeNewOrg();selectedOrgInfo&&(this.logger.log(`Set ${selectedOrgInfo.username} as target org for Vlocity deploy/refresh operations`),this.vlocode.config.sfdxUsername!=selectedOrgInfo.username?this.vlocode.config.sfdxUsername=selectedOrgInfo.username:await this.vlocode.initialize())}}async authorizeNewOrg(){const newOrgType=await vscode.window.showQuickPick(this.salesforceOrgTypes,{placeHolder:"Select the type of org you want to authorize"});if(!newOrgType)return;const instanceUrl=newOrgType.instanceUrl||await vscode.window.showInputBox({placeHolder:"Enter the login URL of the instance the org lives on",validateInput:this.salesforceUrlValidator});if(!instanceUrl)return;this.logger.log(`Opening '${instanceUrl}' in a new browser window`);const authInfo=await this.vlocode.withActivity({location:vscode.ProgressLocation.Notification,progressTitle:"Opening browser to authorize new org...",cancellable:!0},(async(_,token)=>{const loginResult=await util_1.sfdx.webLogin({instanceUrl},token);if(loginResult&&loginResult.accessToken)return loginResult}));if(authInfo){const successMessage=`Successfully authorized ${authInfo.username}, you can now close the browser`;return this.logger.log(successMessage),vscode.window.showInformationMessage(successMessage),authInfo}this.logger.error(`Unable to authorize at '${instanceUrl}'`),vscode.window.showErrorMessage("Failed to authorize new org, see the log for more details")}}exports.default=SelectOrgCommand},"./src/commands/vlocityAdminCommand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const vscode=__webpack_require__("vscode"),_constants_1=__webpack_require__("./src/constants.ts"),commandBase_1=__webpack_require__("./src/commands/commandBase.ts");class VlocityAdminCommand extends commandBase_1.CommandBase{constructor(){super(...arguments),this.adminCommands=[{title:"Refresh Pricebook",icon:"mirror",detail:"Runs the refresh pricebook entries command on the currently connected Salesforce org",method:"refreshPriceBook",name:_constants_1.VlocodeCommand.refreshPriceBook},{title:"Refresh Product Hierarchy",icon:"tag",detail:"Refresh the product hierarchy cache for the Vlocity CPQ",method:"startProductHierarchyJob",name:_constants_1.VlocodeCommand.refreshProductHierarchy},{title:"Clear Managed Platform Cache",icon:"trashcan",detail:"Clear the Vlocity platform cache partition",method:"clearPlatformCache",name:_constants_1.VlocodeCommand.clearPlatformCache},{title:"Update Product Attributes (JSON)",icon:"repo-sync",detail:"Refresh the product attribute JSON definitions based on the attribute assignments",batchJob:"%vlocity_namespace%.UpdateAllProdAttribJSONBatchJob",name:_constants_1.VlocodeCommand.updateAllProdAttribCommand}]}get connectionProvider(){return this.vlocode.datapackService}async validate(){const validationMessage=await this.vlocode.validateSalesforceConnectivity();if(validationMessage)throw validationMessage}async execute(commandName){const selectedCommand=commandName?this.adminCommands.find((command=>command.name==commandName)):await vscode.window.showQuickPick(this.adminCommands.map((cmd=>Object.assign(cmd,{label:`$(${cmd.icon}) ${cmd.title}`}))));selectedCommand&&await this.vlocode.withProgress(`Running ${selectedCommand.title}...`,(async()=>{selectedCommand.batchJob&&await this.executeBatch(selectedCommand.batchJob),selectedCommand.method&&await this.executeAdminMethod(selectedCommand.method)}))}executeBatch(batchClass){const apex=`Database.executeBatch(new ${batchClass}());`;return this.executeAnonymous(apex)}executeAdminMethod(...methodNames){let apex="%vlocity_namespace%.TelcoAdminConsoleController ctrl = new %vlocity_namespace%.TelcoAdminConsoleController();\n";return apex+=methodNames.map((method=>`ctrl.setParameters('{"methodName":"${method}"}'); ctrl.invokeMethod();`)).join("\n"),this.executeAnonymous(apex)}async executeAnonymous(apex){this.logger.verbose("Execute Anonymous:",apex);const connection=await this.connectionProvider.getJsForceConnection(),result=await connection.tooling.executeAnonymous(apex.replace(_constants_1.NAMESPACE_PLACEHOLDER_PATTERN,this.vlocode.datapackService.vlocityNamespace));if(!result.compiled)throw new Error(`${result.compileProblem} at ${result.line}:${result.column}`);if(!result.success)throw new Error(`${result.exceptionMessage}\n${result.exceptionStackTrace}`)}}exports.default={[_constants_1.VlocodeCommand.adminCommands]:VlocityAdminCommand,[_constants_1.VlocodeCommand.refreshPriceBookAndProductHierarchy]:async()=>{await vscode.commands.executeCommand(_constants_1.VlocodeCommand.adminCommands,_constants_1.VlocodeCommand.refreshPriceBook),await vscode.commands.executeCommand(_constants_1.VlocodeCommand.adminCommands,_constants_1.VlocodeCommand.refreshProductHierarchy)},...[_constants_1.VlocodeCommand.refreshPriceBook,_constants_1.VlocodeCommand.refreshProductHierarchy,_constants_1.VlocodeCommand.clearPlatformCache,_constants_1.VlocodeCommand.clearPlatformCache].reduce(((map,command)=>Object.assign(map,{[command]:()=>vscode.commands.executeCommand(_constants_1.VlocodeCommand.adminCommands,command)})),{})}},"./src/constants.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.VlocodeCommand=exports.DATAPACK_RESERVED_FIELDS=exports.MD_XML_OPTIONS=exports.CONTEXT_PREFIX=exports.NAMESPACE_PLACEHOLDER_PATTERN=exports.NAMESPACE_PLACEHOLDER=exports.LOG_DATE_FORMAT=exports.NG_APP_NAME=exports.OUTPUT_CHANNEL_NAME=exports.CONFIG_FILE=exports.CONFIG_SECTION=exports.API_CLIENT_NAME=exports.VERSION=void 0;const packageJson=__webpack_require__("./package.json");exports.VERSION=packageJson.version,exports.API_CLIENT_NAME="Vlocode SOAP client",exports.CONFIG_SECTION="vlocity",exports.CONFIG_FILE=".vlocode",exports.OUTPUT_CHANNEL_NAME="Vlocode",exports.NG_APP_NAME="Vlocode",exports.LOG_DATE_FORMAT="HH:mm:ss.SS",exports.NAMESPACE_PLACEHOLDER="%vlocity_namespace%",exports.NAMESPACE_PLACEHOLDER_PATTERN=/(%|)vlocity_namespace(%|)/gi,exports.CONTEXT_PREFIX="vlocode",exports.MD_XML_OPTIONS={xmldec:{version:"1.0",encoding:"UTF-8"},renderOpts:{pretty:!0,indent:"    ",newline:"\n",normalizeTags:!1,normalize:!1}},exports.DATAPACK_RESERVED_FIELDS=["VlocityDataPackType","VlocityMatchingRecordSourceKey","VlocityLookupRecordSourceKey","VlocityRecordSourceKey","VlocityRecordSObjectType"],function(VlocodeCommand){VlocodeCommand.refreshDatapack="vlocode.refreshDatapack",VlocodeCommand.deployDatapack="vlocode.deployDatapack",VlocodeCommand.viewDatapackGeneric="vlocode.viewDatapack.generic",VlocodeCommand.exportDatapack="vlocode.exportDatapack",VlocodeCommand.selectOrg="vlocode.selectOrg",VlocodeCommand.buildDatapack="vlocode.buildDatapack",VlocodeCommand.openInSalesforce="vlocode.openSalesforce",VlocodeCommand.renameDatapack="vlocode.renameDatapack",VlocodeCommand.cloneDatapack="vlocode.cloneDatapack",VlocodeCommand.buildParentKeyFiles="vlocode.buildParentKeyFiles",VlocodeCommand.adminCommands="vlocode.adminCommands",VlocodeCommand.refreshPriceBook="vlocode.admin.refreshPriceBook",VlocodeCommand.refreshProductHierarchy="vlocode.admin.refreshProductHierarchy",VlocodeCommand.refreshPriceBookAndProductHierarchy="vlocode.admin.refreshPriceBookAndProductHierarchy",VlocodeCommand.updateAllProdAttribCommand="vlocode.admin.updateAllProdAttribCommand",VlocodeCommand.clearPlatformCache="vlocode.admin.clearPlatformCache",VlocodeCommand.deployMetadata="vlocode.deployMetadata",VlocodeCommand.destroyMetadata="vlocode.destroyMetadata",VlocodeCommand.refreshMetadata="vlocode.refreshMetadata",VlocodeCommand.selectApiVersion="vlocode.selectApiVersion",VlocodeCommand.createMetadataCommand="vlocode.createMetadataCommand",VlocodeCommand.execAnonymousCommand="vlocode.execAnonymousCommand",VlocodeCommand.viewInSalesforce="vlocode.viewInSalesforce",VlocodeCommand.createApexClass="vlocode.createApexClass",VlocodeCommand.createLwc="vlocode.createLwc",VlocodeCommand.createOmniscriptLwc="vlocode.createOmniscriptLwc",VlocodeCommand.clearDeveloperLogs="vlocode.clearDeveloperLogs",VlocodeCommand.setTraceFlags="vlocode.setTraceFlags",VlocodeCommand.setLogVisibility="vlocode.setLogVisibility",VlocodeCommand.execRestApi="vlocode.execRestApi",VlocodeCommand.retrieveMetadata="vlocode.retrieveMetadata",VlocodeCommand.clearDeploymentQueue="vlocode.clearDeploymentQueue",VlocodeCommand.pauseDeploymentQueue="vlocode.pauseDeploymentQueue",VlocodeCommand.resumeDeploymentQueue="vlocode.resumeDeploymentQueue",VlocodeCommand.addToProfile="vlocode.addToProfile",VlocodeCommand.removeFromProfile="vlocode.removeFromProfile"}(exports.VlocodeCommand||(exports.VlocodeCommand={}))},"./src/events/eventHandlerBase.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.EventHandlerBase=void 0;const core_1=__webpack_require__("./packages/core/lib/index.js");exports.EventHandlerBase=class EventHandlerBase{constructor(event,vloService){this.vloService=vloService,this.eventListner=event(this.handleEventAsync,this)}dispose(){null!=this.eventListner&&(this.eventListner.dispose(),this.eventListner=null)}get logger(){return core_1.LogManager.get(this.constructor.name)}async handleEventAsync(eventObject){this.logger.debug(`Handle event: ${this.constructor.name}`);try{await Promise.resolve(this.handleEvent(eventObject))}catch(err){this.logger.error(err)}}}},"./src/events/onClassCreated.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const eventHandlerBase_1=__webpack_require__("./src/events/eventHandlerBase.ts"),path=__webpack_require__("path"),fs=__webpack_require__("./node_modules/fs-extra/lib/index.js"),xml2js_1=__webpack_require__("./node_modules/xml2js/lib/xml2js.js"),constants=__webpack_require__("./src/constants.ts"),util_1=__webpack_require__("./packages/util/lib/index.js");class default_1 extends eventHandlerBase_1.EventHandlerBase{get enabled(){var _a,_b,_c;const manageMetadata=(null===(_b=null===(_a=this.vloService.config)||void 0===_a?void 0:_a.salesforce)||void 0===_b?void 0:_b.enabled)&&this.vloService.config.salesforce.manageMetaXmlFiles,orgSelected=!!(null===(_c=this.vloService.config)||void 0===_c?void 0:_c.sfdxUsername);return!!manageMetadata&&orgSelected}async handleEvent(document){if(!this.enabled)return;await this.createMetadataFileFor(document);if((await util_1.getDocumentBodyAsString(document.fsPath)).trim())return;const className=path.basename(document.path,".cls"),classBody=this.getClassBody(className);await fs.writeFile(document.fsPath,classBody)}getClassBody(className){return/^I[A-Z]{1}/.test(className)?`public interface ${className} {\n\n\n}`:/Test$/i.test(className)?`@isTest\nclass ${className} {\n\n    @isTest\n    static void test() {\n    }\n}`:`public class ${className} {\n\n\n}`}async createMetadataFileFor(document){var _a;const metaXml=new xml2js_1.Builder(constants.MD_XML_OPTIONS).buildObject({ApexClass:{$:{xmlns:"http://soap.sforce.com/2006/04/metadata"},status:"Active",apiVersion:null===(_a=this.vloService.config.salesforce)||void 0===_a?void 0:_a.apiVersion}});try{await fs.writeFile(`${document.fsPath}-meta.xml`,metaXml,{flag:"wx"})}catch(e){}}}exports.default=default_1},"./src/events/onFileDeleted.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const eventHandlerBase_1=__webpack_require__("./src/events/eventHandlerBase.ts"),vscode=__webpack_require__("vscode");class default_1 extends eventHandlerBase_1.EventHandlerBase{get enabled(){var _a,_b;const manageMetadata=(null===(_a=this.vloService.config)||void 0===_a?void 0:_a.salesforce.enabled)&&this.vloService.config.salesforce.manageMetaXmlFiles,orgSelected=!!(null===(_b=this.vloService.config)||void 0===_b?void 0:_b.sfdxUsername);return!!manageMetadata&&orgSelected}async handleEvent(document){if(!this.enabled)return;const workspaceEdit=new vscode.WorkspaceEdit;workspaceEdit.deleteFile(document.with({path:`${document.path}-meta.xml`}),{ignoreIfNotExists:!0}),await vscode.workspace.applyEdit(workspaceEdit)}}exports.default=default_1},"./src/events/onFileSaved.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const eventHandlerBase_1=__webpack_require__("./src/events/eventHandlerBase.ts"),vscode=__webpack_require__("vscode"),_constants_1=__webpack_require__("./src/constants.ts"),datapackUtil_1=__webpack_require__("./src/lib/vlocity/datapackUtil.ts"),core_1=__webpack_require__("./packages/core/lib/index.js"),metadataDetector_1=__webpack_require__("./src/lib/salesforce/metadataDetector.ts");class default_1 extends eventHandlerBase_1.EventHandlerBase{constructor(){super(...arguments),this.ignoredPaths=["\\.vscode","\\.sfdx","\\.git"],this.metadataDetector=core_1.container.get(metadataDetector_1.MetadataDetector)}get enabled(){var _a;return!!this.vloService.config.sfdxUsername&&(this.vloService.config.deployOnSave||(null===(_a=this.vloService.config.salesforce)||void 0===_a?void 0:_a.deployOnSave))}async handleEvent(document){var _a;if(this.enabled)if(vscode.workspace.getWorkspaceFolder(document.uri)&&!this.ignoredPaths.some((path=>new RegExp(path).test(document.fileName)))){if(!await(null===(_a=this.vloService.salesforceService)||void 0===_a?void 0:_a.isProductionOrg()))return await datapackUtil_1.isPartOfDatapack(document.fileName)?this.deployAsDatapack(document):this.isSalesforceMetadata(document.fileName)?this.deployAsMetadata(document):void 0}else this.logger.debug(`File not in workspace or in ignored directory: ${document.uri.fsPath}`)}isSalesforceMetadata(fileName){if(this.metadataDetector.isMetadataFile(fileName))return!0;const folderParts=fileName.split(/[\\/]+/g);if(folderParts.length>3){const bundleCollectionPath=folderParts.slice(-3).shift();if("lwc"==bundleCollectionPath||"aura"==bundleCollectionPath)return!0}}deployAsDatapack(document){return this.logger.verbose(`Requesting datapack deploy for: ${document.uri.fsPath}`),this.vloService.commands.execute(_constants_1.VlocodeCommand.deployDatapack,document.uri,null,!1)}async deployAsMetadata(document){if(this.vloService.config.salesforce.enabled){if(this.vloService.config.salesforce.deployOnSave)return this.logger.verbose(`Requesting metadata deploy for: ${document.uri.fsPath}`),this.vloService.commands.execute(_constants_1.VlocodeCommand.deployMetadata,document.uri,null,!1)}else this.logger.warn("Skip deployment; enable Salesforce support in Vlocode configuration to deploy Salesforce metadata")}}exports.default=default_1},"./src/events/onMetadataRenamed.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const eventHandlerBase_1=__webpack_require__("./src/events/eventHandlerBase.ts"),vscode=__webpack_require__("vscode"),escapeRegExp=__webpack_require__("./node_modules/escape-string-regexp/index.js");class default_1 extends eventHandlerBase_1.EventHandlerBase{get enabled(){var _a,_b,_c;const manageMetadata=(null===(_b=null===(_a=this.vloService.config)||void 0===_a?void 0:_a.salesforce)||void 0===_b?void 0:_b.enabled)&&this.vloService.config.salesforce.manageMetaXmlFiles,orgSelected=!!(null===(_c=this.vloService.config)||void 0===_c?void 0:_c.sfdxUsername);return!!manageMetadata&&orgSelected}async handleEvent(event){const trx=new vscode.WorkspaceEdit,isBundleSourceFiles=event.files.map((file=>this.getMetadataBundleFolder(file))).filter((f=>"object"==typeof f));for(const bundleInfo of isBundleSourceFiles){if(!bundleInfo||!bundleInfo.nameChanged)continue;"lwc"===bundleInfo.type&&(await this.updateLwcReferences(bundleInfo.oldName,bundleInfo.newName)).forEach((edit=>trx.replace(edit.uri,edit.range,edit.newText,{label:"Update LWC references",needsConfirmation:!0})));const files=await vscode.workspace.fs.readDirectory(bundleInfo.uri);for(const[name]of files){const fileUri=vscode.Uri.joinPath(bundleInfo.uri,name),newName=name.replace(bundleInfo.oldName,bundleInfo.newName);"lwc"==bundleInfo.type&&name.endsWith(".js")&&(await this.updateLwcSourceFile(fileUri,bundleInfo.newName)).forEach((edit=>trx.replace(fileUri,edit.range,edit.newText,{label:"Rename LWC",needsConfirmation:!0}))),name.endsWith("-meta.xml")&&[...this.replace(await this.vloService.readWorkspaceFile(fileUri),bundleInfo.oldName,bundleInfo.newName)].forEach((edit=>trx.replace(fileUri,edit.range,edit.newText,{label:"Rename LWC",needsConfirmation:!0}))),trx.renameFile(fileUri,vscode.Uri.joinPath(bundleInfo.uri,newName),void 0,{label:"Rename LWC",needsConfirmation:!0})}}if(trx.size>0){const shouldRefactor=await vscode.window.showInformationMessage("You renamed Salesforce metadata; do you want Vlocode to update related files to match the new name?\n\nYou will be able to preview the changes before they are applied.",{modal:!0},{title:"Update related files",apply:!0},{title:"No",apply:!1,isCloseAffordance:!0});if(!(null==shouldRefactor?void 0:shouldRefactor.apply))return;vscode.workspace.applyEdit(trx)}}async updateLwcSourceFile(file,newName){const source=await this.vloService.readWorkspaceFile(file),newLwcClassName=newName.substr(0,1).toUpperCase()+newName.substr(1);return[...this.replace(source,/(export\s+default\s+class\s+)[\w]+(\s+extends)/gi,`$1${newLwcClassName}$2`)]}async updateLwcReferences(oldName,newName){const textEdits=new Array,oldTag=this.getLwcTagName(oldName),newTag=this.getLwcTagName(newName);for(const htmlSourceFile of await vscode.workspace.findFiles("**/lwc/**/*.html")){const htmlSource=await this.vloService.readWorkspaceFile(htmlSourceFile);for(const edit of this.replace(htmlSource,`c-${oldTag}`,`c-${newTag}`))textEdits.push(Object.assign(edit,{uri:htmlSourceFile}))}for(const htmlSourceFile of await vscode.workspace.findFiles("**/lwc/**/*.js")){const htmlSource=await this.vloService.readWorkspaceFile(htmlSourceFile);for(const edit of this.replace(htmlSource,new RegExp(`(from\\s+['|"])c\\/${oldName}(['|"]\\s*;)`,"g"),`$1c/${newName}$2`))textEdits.push(Object.assign(edit,{uri:htmlSourceFile}))}return textEdits}getLwcTagName(name){let tagName="";for(let i=0;i<name.length;i++){const char=name[i];0!=i&&char.toUpperCase()==char&&(tagName+="-"),tagName+=char.toLowerCase()}return tagName}*replace(source,searchExpr,replacement){const regExp="string"==typeof searchExpr?new RegExp(escapeRegExp(searchExpr),"g"):searchExpr;for(const match of source.matchAll(regExp)){if(!match||!match.index)return;const newText="function"==typeof replacement?replacement(match):match.slice(1).reduce(((r,m,i)=>r.replaceAll(`$${i+1}`,m)),replacement),range=new vscode.Range(this.getPositionAt(source,match.index),this.getPositionAt(source,match.index+match[0].length));yield new vscode.TextEdit(range,newText)}}getPositionAt(source,pos){var _a;const lineMatches=[...source.substr(0,pos).matchAll(/\r\n|\n/g)],lastMatch=lineMatches[lineMatches.length-1];return lastMatch?new vscode.Position(lineMatches.length,pos-(null!==(_a=lastMatch.index)&&void 0!==_a?_a:0)-lastMatch[0].length):new vscode.Position(0,pos)}getMetadataBundleFolder(file){const bundleMatcher=/(\/|\\)(lwc|aura)(\/|\\)([^/|\\]+$)/,newMatch=bundleMatcher.exec(file.newUri.fsPath),oldMatch=bundleMatcher.exec(file.oldUri.fsPath);return!(!oldMatch||!newMatch)&&{oldName:oldMatch[4],newName:newMatch[4],nameChanged:oldMatch[4]!=newMatch[4],uri:file.newUri,type:newMatch[2]}}}exports.default=default_1},"./src/events/onTriggerCreated.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const eventHandlerBase_1=__webpack_require__("./src/events/eventHandlerBase.ts"),path=__webpack_require__("path"),fs=__webpack_require__("./node_modules/fs-extra/lib/index.js"),xml2js_1=__webpack_require__("./node_modules/xml2js/lib/xml2js.js"),constants=__webpack_require__("./src/constants.ts"),util_1=__webpack_require__("./packages/util/lib/index.js");class default_1 extends eventHandlerBase_1.EventHandlerBase{get enabled(){var _a,_b,_c;const manageMetadata=(null===(_b=null===(_a=this.vloService.config)||void 0===_a?void 0:_a.salesforce)||void 0===_b?void 0:_b.enabled)&&this.vloService.config.salesforce.manageMetaXmlFiles,orgSelected=!!(null===(_c=this.vloService.config)||void 0===_c?void 0:_c.sfdxUsername);return!!manageMetadata&&orgSelected}async handleEvent(document){if(!this.enabled)return;await this.createMetadataFileFor(document);if((await util_1.getDocumentBodyAsString(document.fsPath)).trim())return;const triggerBody=`trigger ${path.basename(document.path,".trigger")} on SObject (after insert) {\n\n\n}`;await fs.writeFile(document.fsPath,triggerBody)}async createMetadataFileFor(document){var _a;const metaXml=new xml2js_1.Builder(constants.MD_XML_OPTIONS).buildObject({ApexTrigger:{$:{xmlns:"http://soap.sforce.com/2006/04/metadata"},status:"Active",apiVersion:null===(_a=this.vloService.config.salesforce)||void 0===_a?void 0:_a.apiVersion}});try{await fs.writeFile(`${document.fsPath}-meta.xml`,metaXml,{flag:"wx"})}catch(e){}}}exports.default=default_1},"./src/extension.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.deactivate=exports.activate=void 0;const startTime=Date.now();__webpack_require__("./node_modules/source-map-support/register.js");const vscode=__webpack_require__("vscode"),vlocityPackageManifest=__webpack_require__("./node_modules/vlocity/package.json"),constants=__webpack_require__("./src/constants.ts"),core_1=__webpack_require__("./packages/core/lib/index.js"),vlocityUtil=__webpack_require__("./src/lib/vlocity/vlocityLogging.ts"),vlocodeContext_1=__webpack_require__("./src/lib/vlocodeContext.ts"),config_1=__webpack_require__("./src/lib/config/index.ts"),vlocodeService_1=__webpack_require__("./src/lib/vlocodeService.ts"),vlocodeConfiguration_1=__webpack_require__("./src/lib/vlocodeConfiguration.ts"),util_1=__webpack_require__("./packages/util/lib/index.js"),workspaceContextDetector_1=__webpack_require__("./src/lib/workspaceContextDetector.ts"),metadataDetector_1=__webpack_require__("./src/lib/salesforce/metadataDetector.ts"),developerLogDataProvider_1=__webpack_require__("./src/treeDataProviders/developerLogDataProvider.ts"),activityDataProvider_1=__webpack_require__("./src/treeDataProviders/activityDataProvider.ts"),jobExplorer_1=__webpack_require__("./src/treeDataProviders/jobExplorer.ts"),datapackDataProvider_1=__webpack_require__("./src/treeDataProviders/datapackDataProvider.ts"),commands_1=__webpack_require__("./src/commands/index.ts"),onClassCreated_1=__webpack_require__("./src/events/onClassCreated.ts"),onTriggerCreated_1=__webpack_require__("./src/events/onTriggerCreated.ts"),onFileDeleted_1=__webpack_require__("./src/events/onFileDeleted.ts"),onFileSaved_1=__webpack_require__("./src/events/onFileSaved.ts"),apexLogSymbolProvider_1=__webpack_require__("./src/symbolProviders/apexLogSymbolProvider.ts"),onMetadataRenamed_1=__webpack_require__("./src/events/onMetadataRenamed.ts");class VlocityLogFilter{constructor(){return this.vlocityLogFilterRegex=[/^(Initializing Project|Using SFDX|Salesforce Org|Continuing Export|Adding to File|Deploy [0-9]* Items).*/i,/^(Success|Remaining|Error).*?[0-9]+$/],this.filter.bind(this)}filter({logger,args}){return core_1.LogManager.getLogLevel(logger.name)>=core_1.LogLevel.verbose||!this.vlocityLogFilterRegex.some((r=>r.test(args.join(" "))))}}class Vlocode{constructor(){return this.isDebug=/--debug|--inspect-brk/.test(process.execArgv.join(" ")),Vlocode.instance||(Vlocode.instance=this),Vlocode.instance}get logger(){return core_1.LogManager.get("vlocode")}setWorkingDirectory(){var _a;(null===(_a=vscode.workspace.workspaceFolders)||void 0===_a?void 0:_a.length)?(this.logger.verbose(`Updating Vlocode workspace folder to: ${vscode.workspace.workspaceFolders[0].uri.fsPath}`),process.chdir(vscode.workspace.workspaceFolders[0].uri.fsPath)):this.logger.warn("No workspace folders detected; Vlocode will not work properly without an active workspace")}startLogger(){const terminalWriter=util_1.lazy((()=>this.service.registerDisposable(new core_1.TerminalWriter("Vlocode")))),outputChannelWriter=util_1.lazy((()=>this.service.registerDisposable(new core_1.OutputChannelWriter("Vlocode"))));let logInTerminal=this.service.config.logInTerminal;core_1.LogManager.registerWriter({write:entry=>logInTerminal?terminalWriter.write(entry):outputChannelWriter.write(entry),focus:()=>logInTerminal?terminalWriter.focus():outputChannelWriter.focus()}),this.isDebug&&core_1.LogManager.registerWriter(new core_1.ConsoleWriter),config_1.ConfigurationManager.watchProperties(this.service.config,["logLevel"],(config=>core_1.LogManager.setGlobalLogLevel(core_1.LogLevel[config.logLevel])),{initial:!0}),config_1.ConfigurationManager.watchProperties(this.service.config,["logInTerminal"],(config=>logInTerminal=config.logInTerminal),{initial:!0}),core_1.LogManager.registerFilter(core_1.LogManager.get("vlocity"),new VlocityLogFilter),vlocityUtil.setLogger(core_1.LogManager.get("vlocity"))}createDeveloperLogView(){const developerLogDataProvider=core_1.container.get(developerLogDataProvider_1.default),developerLogsView=vscode.window.createTreeView("developerLogsView",{treeDataProvider:developerLogDataProvider});return developerLogsView.onDidChangeVisibility((e=>{developerLogDataProvider.pauseAutoRefresh(!e.visible)})),developerLogsView}async activate(context){vscode.workspace.onDidChangeWorkspaceFolders(this.setWorkingDirectory.bind(this)),this.setWorkingDirectory(),core_1.LogManager.registerWriterFor(core_1.Container,new core_1.ConsoleWriter),core_1.LogManager.setLogLevel(core_1.Container,core_1.LogLevel.verbose),core_1.container.registerProvider(core_1.Logger,core_1.LogManager.get.bind(core_1.LogManager)),core_1.container.registerFactory(vlocodeConfiguration_1.default,(()=>config_1.ConfigurationManager.load(constants.CONFIG_SECTION)),core_1.LifecyclePolicy.singleton),this.service=core_1.container.get(vlocodeService_1.default),context.subscriptions.push(this.service),vlocodeContext_1.initializeContext(context,this.service),this.startLogger(),this.logger.info(`Vlocode version ${constants.VERSION} started`),this.logger.info(`Using built tools version ${vlocityPackageManifest.version}`),this.logger.verbose("Verbose logging enabled"),config_1.ConfigurationManager.watchProperties(this.service.config.salesforce,"enabled",(c=>this.service.enableSalesforceSupport(c.enabled))),this.service.config.salesforce.enabled&&this.service.enableSalesforceSupport(!0),this.service.commands.registerAll(commands_1.default),this.service.registerDisposable(vscode.window.createTreeView("datapackExplorer",{treeDataProvider:new datapackDataProvider_1.default(this.service),showCollapseAll:!0})),this.service.registerDisposable(vscode.window.createTreeView("jobExplorer",{treeDataProvider:new jobExplorer_1.default(this.service)})),this.service.registerDisposable(vscode.window.createTreeView("activityView",{treeDataProvider:new activityDataProvider_1.default(this.service)})),this.service.registerDisposable(this.createDeveloperLogView());const apexClassWatcher=this.service.registerDisposable(vscode.workspace.createFileSystemWatcher("**/classes/**/*.cls",!1,!0,!1));this.service.registerDisposable(new onClassCreated_1.default(apexClassWatcher.onDidCreate,this.service)),this.service.registerDisposable(new onFileDeleted_1.default(apexClassWatcher.onDidDelete,this.service));const apexTriggerWatcher=this.service.registerDisposable(vscode.workspace.createFileSystemWatcher("**/triggers/**/*.trigger",!1,!0,!1));this.service.registerDisposable(new onTriggerCreated_1.default(apexTriggerWatcher.onDidCreate,this.service)),this.service.registerDisposable(new onFileDeleted_1.default(apexTriggerWatcher.onDidDelete,this.service)),this.service.registerDisposable(new onFileSaved_1.default(vscode.workspace.onDidSaveTextDocument,this.service)),this.service.registerDisposable(new onMetadataRenamed_1.default(vscode.workspace.onDidRenameFiles,this.service));try{this.service.registerDisposable(vscode.languages.registerDocumentSymbolProvider({language:"apexlog"},new apexLogSymbolProvider_1.ApexLogSymbolProvider))}catch(err){this.logger.warn(`Unable to register symbol provider for APEX logs: ${err}`)}config_1.ConfigurationManager.watchProperties(this.service.config,"conditionalContextMenus",(config=>vscode.commands.executeCommand("setContext",`${constants.CONTEXT_PREFIX}.conditionalContextMenus`,config.conditionalContextMenus)),{initial:!0}),this.service.registerDisposable(core_1.container.create(workspaceContextDetector_1.WorkspaceContextDetector,"datapacks",(file=>file.toLowerCase().endsWith("_datapack.json"))).initialize()),this.service.registerDisposable(core_1.container.create(workspaceContextDetector_1.WorkspaceContextDetector,"metadata",metadataDetector_1.MetadataDetector.filter()).initialize()),this.logger.focus(),this.logger.info(`Vlocode activated in ${Date.now()-startTime}ms`),this.service.initialize()}async deactivate(){this.service.dispose()}static activate(context){return(new Vlocode).activate(context)}static deactivate(){return Vlocode.instance.deactivate()}}exports.activate=function activate(context){return Vlocode.activate(context)},exports.deactivate=function deactivate(){return console.log("deactivate"),Vlocode.deactivate()}},"./src/lib/commandRouter.ts":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0});const core_1=__webpack_require__("./packages/core/lib/index.js"),vlocodeService_1=__webpack_require__("./src/lib/vlocodeService.ts"),vscode=__webpack_require__("vscode"),util_1=__webpack_require__("./packages/util/lib/index.js");class CommandExecutor{constructor(name,command){this.name=name,this.command=command}get logger(){return core_1.LogManager.get(CommandExecutor)}async execute(...args){this.logger.verbose(`Invoke command ${this.name}`);try{await Promise.resolve(this.validate(...args)),await Promise.resolve(this.command.execute.apply(this.command,args)),this.logger.verbose(`Execution of command ${this.name} done`)}catch(err){console.error(err);const message=err.message||err;this.logger.error(`Command error: ${message}`),vscode.window.showErrorMessage(message,"Show Error").then((value=>value&&this.logger.focus()))}}validate(...args){var _a,_b;return null===(_b=(_a=this.command).validate)||void 0===_b?void 0:_b.call(_a,...args)}initialize(){var _a,_b;return null===(_b=(_a=this.command).initialize)||void 0===_b?void 0:_b.call(_a)}}let CommandRouter=class CommandRouter{constructor(vlocode,logger){this.vlocode=vlocode,this.logger=logger,this.commands=new Map,this.commandTypes=new Map}get count(){return this.commands.size}async execute(commandName,...args){const command=this.commands[commandName];return command?command.execute(...args):vscode.commands.executeCommand(commandName,...args)}register(name,commandCtor){const command=new CommandExecutor(name,this.createCommand(commandCtor));return this.initializeCommand(name,command),this.commands.set(name,command),"function"==typeof commandCtor&&commandCtor.name&&this.commandTypes.set(commandCtor.name,name),this.vlocode.registerDisposable(vscode.commands.registerCommand(name,command.execute,command)),command}initializeCommand(id,cmd){const commandInitialize=cmd.initialize;commandInitialize&&setImmediate((async()=>{try{await commandInitialize.call(cmd)}catch(err){this.logger.error(`Failed to initialize command ${id} due to initialization error: ${err}`)}}))}get(type){if("string"==typeof type){const command=this.commands.get(type);if(!command)throw new Error(`No such command with name exists: ${type}`);return command.command}const commandName=this.commandTypes.get(type.name);if(!commandName)throw new Error(`No such command with type exists: ${type.name}`);return this.get(commandName)}registerAll(commands){Object.keys(commands).forEach((key=>{this.register(key,commands[key])}))}createCommand(commandCtor){return"prototype"in commandCtor?new util_1.lazy((()=>new commandCtor)):"execute"in commandCtor?commandCtor:{execute:commandCtor}}};CommandRouter=__decorate([core_1.injectable({lifecycle:core_1.LifecyclePolicy.transient}),__metadata("design:typeinfo",{paramTypes:()=>[vlocodeService_1.default,core_1.Logger]})],CommandRouter),exports.default=CommandRouter},"./src/lib/config/configBase.ts":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.BaseConfiguration=exports.storeAsOverrideMethod=exports.configurationSection=void 0,exports.configurationSection=Symbol("[[section]]"),exports.storeAsOverrideMethod="storeAsOverride";exports.BaseConfiguration=class BaseConfiguration{}},"./src/lib/config/configManager.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConfigurationManager=void 0;const vscode=__webpack_require__("vscode"),_constants_1=__webpack_require__("./src/constants.ts"),core_1=__webpack_require__("./packages/core/lib/index.js"),util_1=__webpack_require__("./packages/util/lib/index.js"),overrideConfiguration_1=__webpack_require__("./src/lib/config/overrideConfiguration.ts"),proxyHandler_1=__webpack_require__("./src/lib/config/proxyHandler.ts"),configBase_1=__webpack_require__("./src/lib/config/configBase.ts");exports.ConfigurationManager=class ConfigurationManager{constructor(){this.overrideConfig=util_1.lazy((()=>this.loadOverrideConfig())),this.loadedConfigSections=new Map,this.watchers=new Map,this.disposables=[]}get logger(){return core_1.LogManager.get("ConfigurationManager")}dispose(){this.disposables.forEach((disposable=>disposable.dispose())),this.disposables=[],this.watchers.clear(),this.loadedConfigSections.clear(),this.overrideConfig.dispose()}loadOverrideConfig(){const overrides=new overrideConfiguration_1.WorkspaceOverrideConfiguration;return overrides.onDidConfigurationChange((event=>{const propertiesBySection=util_1.groupBy(event.getAffectedConfigurationProperties(),(item=>item.split(".").shift()));for(const[section,properties]of Object.entries(propertiesBySection))this.invokeWatchers(this.load(section),properties)})),overrides}load(configSectionName){return new Proxy({},new proxyHandler_1.ConfigProxyHandler(configSectionName,this.overrideConfig,this))}getVscodeConfiguration(configSectionName){let workspaceConfig=this.loadedConfigSections.get(configSectionName);return workspaceConfig||(workspaceConfig=vscode.workspace.getConfiguration(configSectionName),this.loadedConfigSections.set(configSectionName,workspaceConfig),this.disposables.push(vscode.workspace.onDidChangeConfiguration((changeEvent=>{if(changeEvent.affectsConfiguration(configSectionName)){this.loadedConfigSections.set(configSectionName,vscode.workspace.getConfiguration(configSectionName));const config=this.load(configSectionName),changedProperties=this.getChangedProperties(config,configSectionName,changeEvent),overridenProperties=changedProperties.filter((prop=>this.overrideConfig.isSet(prop)));if(overridenProperties.length){const overridesPath=this.overrideConfig.getFilePath();vscode.window.showErrorMessage(`Config hange of ${overridenProperties[0]} is ignored, a value for this is already defined in ${_constants_1.CONFIG_FILE}`,`Open ${_constants_1.CONFIG_FILE}`).then((value=>value&&overridesPath&&void vscode.window.showTextDocument(vscode.Uri.file(overridesPath))))}this.invokeWatchers(config,changedProperties.filter((prop=>!overridenProperties.includes(prop))))}})))),workspaceConfig}getChangedProperties(config,sectionPrefix,changeEvent){const changedProps=new Array,configKeys=new Set(Object.keys(config||{}));for(const key of configKeys){const value=null==config?void 0:config[key],configProperty=`${sectionPrefix}.${key}`;"function"!=typeof value&&"symbol"!=typeof value&&(changeEvent.affectsConfiguration(configProperty)&&(changedProps.push(configProperty),"object"==typeof value&&changedProps.push(...this.getChangedProperties(value,configProperty,changeEvent))))}return changedProps}invokeWatchers(newConfig,properties){var _a,_b;for(const property of properties){const sectionName=property.split(".").shift();let watchers=null!==(_a=this.watchers.get(property))&&void 0!==_a?_a:[];sectionName!=property&&(watchers=(null!==(_b=this.watchers.get(sectionName))&&void 0!==_b?_b:[]).concat(watchers));const affectedConfig=property.split(".").slice(1,-1).reduce(((config,section)=>config[section]),newConfig);this.logger.verbose(`Detected property change for: ${property} (watcher-size: ${watchers.length})`);for(const watcher of watchers)Promise.resolve(watcher(affectedConfig)).catch((err=>{this.logger.error(`Error in config watcher for property ${property}:`,err)}))}}watchProperties(config,properties,watcher,options){const sectionName="string"==typeof config?config:config[configBase_1.configurationSection];return this.registerWatcher(util_1.asArray(properties).map((property=>`${sectionName}.${property}`)),watcher,options)}watch(config,watcher){const sectionName="string"==typeof config?config:config[configBase_1.configurationSection];return this.registerWatcher([sectionName],watcher)}registerWatcher(watchKeys,watcher,options){for(const property of watchKeys)this.logger.verbose(`Register config watcher for: ${property}`),util_1.arrayMapPush(this.watchers,property,watcher);if(null==options?void 0:options.initial){const sections=new Set(watchKeys.map((prop=>prop.split(".")[0])));for(const section of sections){const properties=watchKeys.filter((prop=>prop.startsWith(`${section}.`)));properties.length&&setTimeout((()=>this.invokeWatchers(this.load(section),properties)),0)}}return{dispose:()=>{for(const property of watchKeys){const watchers=this.watchers.get(property);if(watchers){const index=watchers.indexOf(watcher);-1!=index&&watchers.splice(index,1)}}}}}}},"./src/lib/config/index.ts":function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConfigurationManager=void 0;const util_1=__webpack_require__("./packages/util/lib/index.js"),configManager_1=__webpack_require__("./src/lib/config/configManager.ts");exports.ConfigurationManager=util_1.singleton(configManager_1.ConfigurationManager),__exportStar(__webpack_require__("./src/lib/config/configBase.ts"),exports)},"./src/lib/config/overrideConfiguration.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.WorkspaceOverrideConfiguration=void 0;const vscode=__webpack_require__("vscode"),fs=__webpack_require__("./node_modules/fs-extra/lib/index.js"),_constants_1=__webpack_require__("./src/constants.ts"),core_1=__webpack_require__("./packages/core/lib/index.js");exports.WorkspaceOverrideConfiguration=class WorkspaceOverrideConfiguration{constructor(){this.overrideConfigs={},this.configurationChangedEmitter=new vscode.EventEmitter,this.initializeFromWorkspace()}get onDidConfigurationChange(){return this.configurationChangedEmitter.event}get logger(){return core_1.LogManager.get("WorkspaceOverrideConfiguration")}dispose(){for(const override of Object.values(this.overrideConfigs))override.watcher.dispose();this.workspaceFolderChangeListner.dispose(),this.configurationChangedEmitter.dispose()}setValue(propertyPath,value){var _a,_b;const firstWorkspaceFolder=null===(_a=vscode.workspace.workspaceFolders)||void 0===_a?void 0:_a.find((ws=>0==ws.index));if(firstWorkspaceFolder){const overrideConfig=this.overrideConfigs[firstWorkspaceFolder.uri.fsPath],propertyPathParts=propertyPath.split("."),lastProperty=propertyPathParts.pop();if(!lastProperty)throw new Error("propertyPath is empty");const target=propertyPathParts.reduce(((values,prop)=>{var _a;return null!==(_a=values[prop])&&void 0!==_a?_a:values[prop]={}}),null!==(_b=overrideConfig.values)&&void 0!==_b?_b:overrideConfig.values={});target[lastProperty]=value,fs.outputJSONSync(overrideConfig.fsPath,overrideConfig.values)}}getKeys(){var _a,_b,_c;const firstWorkspaceFolder=null===(_a=vscode.workspace.workspaceFolders)||void 0===_a?void 0:_a.find((ws=>0==ws.index));return firstWorkspaceFolder?Object.keys(null!==(_c=null===(_b=this.overrideConfigs[firstWorkspaceFolder.uri.fsPath])||void 0===_b?void 0:_b.values)&&void 0!==_c?_c:{}):[]}getValue(propertyPath){var _a,_b;const firstWorkspaceFolder=null===(_a=vscode.workspace.workspaceFolders)||void 0===_a?void 0:_a.find((ws=>0==ws.index));if(firstWorkspaceFolder)return propertyPath.split(".").reduce(((values,prop)=>values&&values[prop]),null===(_b=this.overrideConfigs[firstWorkspaceFolder.uri.fsPath])||void 0===_b?void 0:_b.values)}isSet(propertyPath){return void 0!==this.getValue(propertyPath)}getFilePath(){var _a;const firstWorkspaceFolder=null===(_a=vscode.workspace.workspaceFolders)||void 0===_a?void 0:_a.find((ws=>0==ws.index));if(firstWorkspaceFolder)return this.overrideConfigs[firstWorkspaceFolder.uri.fsPath].fsPath}initializeFromWorkspace(){var _a;for(const workspacePath of null!==(_a=vscode.workspace.workspaceFolders)&&void 0!==_a?_a:[])this.load(workspacePath.uri.fsPath,vscode.Uri.joinPath(workspacePath.uri,_constants_1.CONFIG_FILE));this.workspaceFolderChangeListner||(this.workspaceFolderChangeListner=vscode.workspace.onDidChangeWorkspaceFolders((event=>{event.removed.forEach((ws=>this.unload(ws.uri.path))),event.added.forEach((ws=>this.load(ws.uri.path,vscode.Uri.joinPath(ws.uri,_constants_1.CONFIG_FILE))))})))}unload(workspace){this.overrideConfigs[workspace]&&(this.overrideConfigs[workspace].watcher.dispose(),delete this.overrideConfigs[workspace])}load(workspace,configPath){var _a;const config=null!==(_a=this.overrideConfigs[workspace])&&void 0!==_a?_a:this.overrideConfigs[workspace]={values:{},fsPath:configPath.fsPath,watcher:this.initializeWatcher(workspace,configPath)};try{this.logger.verbose(`Loading workspace overrides from: ${configPath.fsPath}`);const oldValues=config.values,newValues=fs.existsSync(configPath.fsPath)?fs.readJsonSync(configPath.fsPath):{},changedProperties=new Set(this.getChangedProperties(oldValues,newValues));config.values=newValues,this.configurationChangedEmitter.fire({affectsConfiguration:section=>changedProperties.has(section),getAffectedConfigurationProperties:()=>changedProperties})}catch(err){this.logger.error(`Error while reading override config from ${configPath.fsPath}:`,err.message)}}getChangedProperties(oldConfig,newConfig,propertyPrefix){const changedProps=new Array,configKeys=new Set([...Object.keys(oldConfig||{}),...Object.keys(newConfig||{})]);for(const key of configKeys){const configProperty=propertyPrefix?`${propertyPrefix}.${key}`:key,oldValue=null==oldConfig?void 0:oldConfig[key],newValue=null==newConfig?void 0:newConfig[key];"object"==typeof newValue?changedProps.push(...this.getChangedProperties(oldValue,newValue,configProperty)):oldValue!=newValue&&changedProps.push(configProperty)}return changedProps}initializeWatcher(workspace,configPath){const configFileWatcher=vscode.workspace.createFileSystemWatcher(configPath.fsPath,!1,!1,!1);return configFileWatcher.onDidChange((()=>this.load(workspace,configPath))),configFileWatcher.onDidCreate((()=>this.load(workspace,configPath))),configFileWatcher.onDidDelete((()=>this.overrideConfigs[workspace].values={})),configFileWatcher}}},"./src/lib/config/proxyHandler.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConfigProxyHandler=void 0;const configBase_1=__webpack_require__("./src/lib/config/configBase.ts");exports.ConfigProxyHandler=class ConfigProxyHandler{constructor(configSectionName,workspaceOverrideConfig,configProvider){this.configSectionName=configSectionName,this.workspaceOverrideConfig=workspaceOverrideConfig,this.configProvider=configProvider}get(target,key){if(key==configBase_1.configurationSection)return this.configSectionName;if(key==configBase_1.storeAsOverrideMethod)return this.workspaceOverrideConfig.setValue.bind(this.workspaceOverrideConfig);if("symbol"==typeof key||"function"==typeof target[key])return target[key];const value=this.getWorkspaceConfiguration().get(key.toString());if("object"==typeof value&&null!==value)return this.wrapInProxy(key,value);const override=this.workspaceOverrideConfig.getValue(`${this.configSectionName}.${key}`);return void 0!==override?override:value}set(target,key,value){return"symbol"==typeof key?target[key]=value:this.getWorkspaceConfiguration().update(key.toString(),value,!1),!0}getOwnPropertyDescriptor(target,key){return{value:this.get(target,key),enumerable:!0,configurable:!0}}ownKeys(){var _a;const config=this.getWorkspaceConfiguration(),workspaceConfigKeys=Object.getOwnPropertyNames(config).filter((key=>"function"!=typeof config[key])),overrideKeys=null!==(_a=this.workspaceOverrideConfig.getKeys())&&void 0!==_a?_a:[];return[...new Set([...workspaceConfigKeys,...overrideKeys])]}getWorkspaceConfiguration(){return this.configProvider.getVscodeConfiguration(this.configSectionName)}wrapInProxy(propertyPath,value){return new Proxy(value,{get:(target,key)=>{if(key==configBase_1.configurationSection)return`${this.configSectionName}.${propertyPath.toString()}`;if(key==configBase_1.storeAsOverrideMethod)return this.workspaceOverrideConfig.setValue.bind(this.workspaceOverrideConfig);const value=target[key],fullPropertyPath=`${propertyPath.toString()}.${key.toString()}`;if("object"==typeof value&&null!==value)return this.wrapInProxy(fullPropertyPath,value);const override=this.workspaceOverrideConfig.getValue(`${this.configSectionName}.${fullPropertyPath}`);return void 0!==override?override:value},set:(target,key,newValue)=>this.set(value,`${propertyPath.toString()}.${key.toString()}`,newValue)})}}},"./src/lib/fs/vscodeFileSystemAdapter.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.VSCodeFileSystemAdapter=void 0;const path=__webpack_require__("path"),vscode_1=__webpack_require__("vscode"),core_1=__webpack_require__("./packages/core/lib/index.js");class VSCodeFileSystemAdapter extends core_1.FileSystem{constructor(innerFs){super(),this.innerFs=innerFs}async readFileAsString(fileName,encoding="utf-8"){const doc=vscode_1.workspace.textDocuments.find((doc=>doc.fileName==path.resolve(fileName)));return doc?doc.getText():this.innerFs.readFileAsString(fileName,encoding)}readFile(fileName){return this.innerFs.readFile(fileName)}stat(path,options){return this.innerFs.stat(path,options)}readDirectory(path){return this.innerFs.readDirectory(path)}findFiles(patterns){return this.innerFs.findFiles(patterns)}}exports.VSCodeFileSystemAdapter=VSCodeFileSystemAdapter},"./src/lib/salesforce/connection/jsForceConnectionProvider.ts":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0});exports.default=class JsForceConnectionProvider{}},"./src/lib/salesforce/connection/sfdxConnectionProvider.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const util_1=__webpack_require__("./packages/util/lib/index.js"),core_1=__webpack_require__("./packages/core/lib/index.js");class SfdxConnectionProvider{constructor(username){this.username=username,this.testInterval=6e4}async getJsForceConnection(){if(this.connection){if(Date.now()<this.connection._lastTested+this.testInterval)return this.connection._lastTested=Date.now(),this.connection;if(await this.testConnection(this.connection))return this.connection}return this.connection=await this.createConnection(),this.connection}async createConnection(){const connection=await util_1.sfdx.getJsForceConnection(this.username);return connection._logger=this.createJsForceLogger(core_1.LogManager.get("jsforce.Connection")),connection.tooling._logger=this.createJsForceLogger(core_1.LogManager.get("jsforce.Tooling")),connection._lastTested=Date.now(),connection}async testConnection(connection){try{this.logger.verbose("Testing stored connection...");const userQuery=await connection.query("SELECT Id FROM User LIMIT 1");return this.connection._lastTested=Date.now(),this.logger.verbose(`Success, you are connected! (${userQuery.records[0].Id})`),!0}catch(e){this.logger.error(`Connection test failed with error: ${e}`)}return!1}createJsForceLogger(regularLogger){const redirectTable={1:core_1.LogLevel.debug,2:core_1.LogLevel.info,3:core_1.LogLevel.warn,4:core_1.LogLevel.error,5:core_1.LogLevel.fatal};return regularLogger.log=(level,...args)=>regularLogger.write(redirectTable[level],...args),regularLogger}get logger(){return core_1.LogManager.get(SfdxConnectionProvider)}}exports.default=SfdxConnectionProvider},"./src/lib/salesforce/debugLogViewer.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.DebugLogViewer=void 0;const path=__webpack_require__("path"),vscode=__webpack_require__("vscode"),fs=__webpack_require__("./node_modules/fs-extra/lib/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),vlocodeContext_1=__webpack_require__("./src/lib/vlocodeContext.ts");class DebugLogViewer{constructor(options={}){this.options=options}get developerLogsPath(){const storagePath=vlocodeContext_1.getContext().storagePath;return storagePath?path.join(storagePath,"developerLogs"):void 0}async showDeveloperLog(log){return this.openLog(await log.getBody(),`${moment(log.startTime).format("MM-DD-YYYY_HH-MM-SS")}_${log.id}.log`)}showExecutionLog(log){return this.openLog(this.formatExecutionLog(log),`${moment().format("MM-DD-YYYY_HH-MM-SS")}.log`)}async openLog(logBody,logFileName){const formattedLog=this.formatLog(logBody);if(this.developerLogsPath){const fullLogPath=path.join(this.developerLogsPath,logFileName);await fs.ensureDir(this.developerLogsPath),await fs.writeFile(fullLogPath,formattedLog);const debugLog=await vscode.workspace.openTextDocument(fullLogPath);debugLog&&(vscode.languages.setTextDocumentLanguage(debugLog,"apexlog"),vscode.window.showTextDocument(debugLog))}else{const debugLog=await vscode.workspace.openTextDocument({language:"apexlog",content:logBody});debugLog&&vscode.window.showTextDocument(debugLog)}}formatExecutionLog(log){const startIndex=log.indexOf(DebugLogViewer.START_MARKER),endIndex=log.indexOf(DebugLogViewer.END_MARKER);if(-1==startIndex||-1==endIndex)return log;const executionUnitLog=log.substring(startIndex,endIndex);return executionUnitLog.substring(executionUnitLog.indexOf("\n")+1,executionUnitLog.lastIndexOf("\n"))}formatLog(log){return this.options.userDebugOnly?this.stripNonUserDebug(log):log.replace(/(^[0-9:.() ]+\|ENTERING_MANAGED_PKG\|.*\n)+/gm,"$1")}stripNonUserDebug(log){const strippedLog=new Array;for(const line of log.split("\n"))!line.match(/\|USER_[A-Z]+|EXCEPTION_THROWN|FATAL_ERROR\|/)&&line.match(/^[0-9:.]+ \([0-9]+\)/)||strippedLog.push(line);return strippedLog.join("\n")}}exports.DebugLogViewer=DebugLogViewer,DebugLogViewer.START_MARKER="|CODE_UNIT_STARTED|[EXTERNAL]|execute_anonymous_apex\n",DebugLogViewer.END_MARKER="|CODE_UNIT_FINISHED|execute_anonymous_apex\n"},"./src/lib/salesforce/deploy/packageXml.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.PackageManifest=void 0;const constants=__webpack_require__("./src/constants.ts"),util_1=__webpack_require__("./packages/util/lib/index.js"),xml2js=__webpack_require__("./node_modules/xml2js/lib/xml2js.js");class PackageManifest{constructor(){this.metadataMembers=new Map}types(){return[...this.metadataMembers.keys()]}add(type,member){let members=this.metadataMembers.get(type);null==members&&this.metadataMembers.set(type,members=new Set),members.has("*")||("*"==member&&members.clear(),members.add(member))}list(type){var _a,_b;return type?Array.from(null!==(_b=null===(_a=this.metadataMembers.get(type))||void 0===_a?void 0:_a.values())&&void 0!==_b?_b:[]):util_1.Iterable.reduce(this.metadataMembers.entries(),((arr,[,members])=>arr.concat(Array.from(members))),new Array)}count(type){var _a,_b;return type?null!==(_b=null===(_a=this.metadataMembers.get(type))||void 0===_a?void 0:_a.size)&&void 0!==_b?_b:0:util_1.Iterable.reduce(this.metadataMembers.entries(),((sum,[,members])=>sum+members.size),0)}has(type){return this.count(type)>0}toJson(apiVersion){if(!/^\d{2,3}\.\d$/.test(apiVersion))throw new Error(`Invalid API version: ${apiVersion}`);return{version:apiVersion,types:[...this.metadataMembers.entries()].map((([name,members])=>({name,members:[...members.values()]})))}}toXml(apiVersion){return new xml2js.Builder(constants.MD_XML_OPTIONS).buildObject({Package:{$:{xmlns:"http://soap.sforce.com/2006/04/metadata"},...this.toJson(apiVersion)}})}static from(manifest){const packageXml=new PackageManifest;for(const info of Object.values(manifest.files))info.type&&packageXml.add(info.type,info.name);return packageXml}}exports.PackageManifest=PackageManifest},"./src/lib/salesforce/deploy/retrieveResultPackage.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.RetrieveResultPackage=void 0;const path=__webpack_require__("path"),fs=__webpack_require__("./node_modules/fs-extra/lib/index.js"),util_1=__webpack_require__("./packages/util/lib/index.js");exports.RetrieveResultPackage=class RetrieveResultPackage{constructor(result,singlePackage,zip){this.result=result,this.singlePackage=singlePackage,this.zip=zip}get success(){return!!this.result.zipFile}get retrieveCount(){return this.result.fileProperties?this.result.fileProperties.length-1:0}componentNames(){return[...new Set(this.result.fileProperties.filter((fi=>"Package"!=fi.type)).map((fi=>`${fi.type}/${fi.fullName.split("/").shift()}`)))]}components(){const resultsByType=util_1.groupBy(this.getFiles().filter((fi=>"Package"!=fi.type)),(fi=>`${fi.type}/${fi.componentName}`));return Object.entries(resultsByType).map((([key,files])=>({fullName:key,componentType:key.split("/")[0],componentName:key.split("/")[1],files})))}getFiles(){return this.result.fileProperties.map((file=>{var _a,_b;const fullFileName=file.fileName,fileName=this.singlePackage?file.fileName:file.fileName.split("/").slice(1).join("/"),componentName=file.fullName.split("/").shift(),metaFileName=`${file.fileName}-meta.xml`,metaFile=null===(_a=this.zip)||void 0===_a?void 0:_a.file(metaFileName),sourceFile=null===(_b=this.zip)||void 0===_b?void 0:_b.file(fullFileName);return{...file,componentName,fileName,fullFileName,hasMetaFile:!!metaFile,metaFileName:metaFile?metaFileName:void 0,fullMetaFileName:metaFile?`${fullFileName}-meta.xml`:void 0,unpackToFolder:async(targetFolder,fileOnly)=>{sourceFile&&await this.streamFileToDisk(sourceFile,path.join(targetFolder,fileOnly?path.basename(fileName):fileName)),metaFile&&await this.streamFileToDisk(metaFile,path.join(targetFolder,fileOnly?path.basename(metaFileName):metaFileName))},getBuffer:()=>null==sourceFile?void 0:sourceFile.async("nodebuffer"),getStream:()=>null==sourceFile?void 0:sourceFile.nodeStream(),getMetaBuffer:()=>null==metaFile?void 0:metaFile.async("nodebuffer"),getMetaStream:()=>null==metaFile?void 0:metaFile.nodeStream()}}))}getFileProperties(packageFile){return this.getFiles().find((f=>f.fileName.toLowerCase().endsWith(packageFile.toLowerCase())))}async unpackFolder(packageFolder,targetPath){var _a;const files=null===(_a=this.zip)||void 0===_a?void 0:_a.filter((file=>util_1.directoryName(file).endsWith(packageFolder.toLowerCase())));if(!files)throw new Error(`The specified folder ${packageFolder} was not found in retrieved package or is empty`);for(const file of files)await this.streamFileToDisk(file,path.join(targetPath,util_1.fileName(file.name)))}unpackFile(packageFile,targetPath){var _a;const file=null===(_a=this.zip)||void 0===_a?void 0:_a.filter((file=>file.toLowerCase().endsWith(packageFile.toLowerCase())))[0];if(!file)throw new Error(`The specified file ${packageFile} was not found in retrieved package`);return this.streamFileToDisk(file,targetPath)}unpackFileToFolder(packageFile,targetPath){var _a;const file=null===(_a=this.zip)||void 0===_a?void 0:_a.filter((file=>file.toLowerCase().endsWith(packageFile.toLowerCase())))[0];if(!file)throw new Error(`The specified file ${packageFile} was not found in retrieved package`);return this.streamFileToDisk(file,path.join(targetPath,util_1.fileName(file.name)))}streamFileToDisk(file,targetPath){return new Promise(((resolve,reject)=>{fs.ensureDir(path.dirname(targetPath)).then((()=>{file.nodeStream().pipe(fs.createWriteStream(targetPath,{flags:"w"})).on("finish",resolve).on("error",reject)})).catch(reject)}))}}},"./src/lib/salesforce/deploymentPackage.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SalesforcePackage=void 0;const path=__webpack_require__("path"),constants=__webpack_require__("./src/constants.ts"),xml2js=__webpack_require__("./node_modules/xml2js/lib/xml2js.js"),ZipArchive=__webpack_require__("./node_modules/jszip/lib/index.js"),util_1=__webpack_require__("./packages/util/lib/index.js"),packageXml_1=__webpack_require__("./src/lib/salesforce/deploy/packageXml.ts");exports.SalesforcePackage=class SalesforcePackage{constructor(apiVersion,packageDir,fs){if(this.apiVersion=apiVersion,this.packageDir=packageDir,this.fs=fs,this.manifest=new packageXml_1.PackageManifest,this.destructiveChanges={pre:new packageXml_1.PackageManifest,post:new packageXml_1.PackageManifest},this.packageData=new Map,this.sourceFileMap=new Map,this.packageComponents=new Map,!/^\d{2,3}\.\d$/.test(apiVersion))throw new Error(`Invalid API version: ${apiVersion}`)}add(entry){this.addManifestEntry(entry.xmlName,entry.componentName),this.setPackageData(entry.packagePath,{data:entry.data,fsPath:entry.fsPath}),entry.fsPath&&this.addSourceMap(entry.fsPath,entry)}addSourceMap(fsPath,entry){this.sourceFileMap.set(fsPath,{packagePath:entry.packagePath,name:entry.componentName,componentType:entry.xmlName}),util_1.arrayMapPush(this.packageComponents,`${entry.xmlName}.${entry.componentName}`.toLowerCase(),fsPath)}setPackageData(packagePath,data){this.packageData.set(packagePath.replace(/\/|\\/g,"/"),data)}addManifestEntry(xmlName,componentName){this.manifest.add(xmlName,componentName)}getSourceFolder(componentType,componentName){for(const[fsPath,sourceFileInfo]of this.sourceFileMap.entries())if(sourceFileInfo.componentType==componentType&&sourceFileInfo.name==componentName)return util_1.directoryName(fsPath)}getSourceFile(packagePath){var _a;return null===(_a=this.packageData.get(packagePath))||void 0===_a?void 0:_a.fsPath}getComponentSourceFiles(type,name){return this.packageComponents.get(`${type}.${name}`.toLowerCase())}size(){return this.manifest.count()}files(){return new Set(util_1.Iterable.filter(util_1.Iterable.map(this.packageData.values(),(value=>value.fsPath)),(value=>!!value)))}*sourceFiles(){for(const[packagePath,{fsPath}]of this.packageData)yield{packagePath,fsPath}}getSourceFileInfo(sourceFile){return this.sourceFileMap.get(sourceFile)}addDestructiveChange(xmlName,componentName,type="pre"){this.destructiveChanges[type].add(xmlName,componentName)}async mergeDestructiveChanges(sourceFile,type="pre"){const items=(await xml2js.parseStringPromise(await this.fs.readFileAsString(sourceFile))).Package;for(const packageType of items.types){const xmlName=packageType.name[0];for(const member of packageType.members)this.addDestructiveChange(xmlName,member,type)}}getTestClasses(){var _a,_b;const testClasses=new Array;for(const[packagePath,data]of this.packageData.entries()){if(!packagePath.endsWith(".cls"))continue;const classBody="string"==typeof data?data:data.toString(),testClassName=path.basename(packagePath,".cls"),hasTestAnnotations=(null!==(_b=null===(_a=/@IsTest([(\s]+)/gi.exec(classBody))||void 0===_a?void 0:_a.length)&&void 0!==_b?_b:0)>1;(/\s+testMethod\s+/gi.test(classBody)||hasTestAnnotations)&&testClasses.push(testClassName)}return testClasses}async getPackageData(packagePath){const data=this.packageData.get(packagePath.replace(/\/|\\/g,"/"));if(data)return data.data||(data.data=await this.fs.readFile(data.fsPath)),data.data}hasPackageData(packagePath){return this.packageData.has(packagePath.replace(/\/|\\/g,"/"))}*getPackageTypes(){yield*this.manifest.types()}getComponentNames(){return util_1.Iterable.reduce(this.manifest.types(),((arr,type)=>arr.concat(this.manifest.list(type).map((name=>`${type}/${name}`)))),new Array)}getPackageTypeCount(xmlName){return this.manifest.count(xmlName)}async generateArchive(){const packageZip=new ZipArchive,xmlPackage=this.manifest.toXml(this.apiVersion);packageZip.file(path.posix.join(this.packageDir,"package.xml"),xmlPackage),this.destructiveChanges.pre.count()>0&&packageZip.file(path.posix.join(this.packageDir,"destructiveChangesPre.xml"),this.destructiveChanges.pre.toXml(this.apiVersion)),this.destructiveChanges.post.count()>0&&packageZip.file(path.posix.join(this.packageDir,"destructiveChangesPost.xml"),this.destructiveChanges.post.toXml(this.apiVersion));for(const[packagePath,{data,fsPath}]of this.packageData.entries()){let fileData=null!=data?data:await this.fs.readFile(fsPath);util_1.XML.isXml(fileData)&&(fileData=util_1.XML.normalize(fileData)),packageZip.file(path.posix.join(this.packageDir,packagePath),fileData)}return packageZip}generateMissingMetaFiles(){for(const[packagePath]of this.packageData.entries())packagePath.endsWith(".cls")?this.packageData.has(`${packagePath}-meta.xml`)||this.packageData.set(`${packagePath}-meta.xml`,{data:this.buildClassMetadata(this.apiVersion)}):packagePath.endsWith(".trigger")&&(this.packageData.has(`${packagePath}-meta.xml`)||this.packageData.set(`${packagePath}-meta.xml`,{data:this.buildTriggerMetadata(this.apiVersion)}))}async getPackageMetadata(type,name){const fsPaths=this.getComponentSourceFiles(type,name);if(null==fsPaths?void 0:fsPaths.length){const metaFile=1==fsPaths.length?fsPaths[0]:fsPaths.find((f=>f.toLowerCase().endsWith(".xml"))),metaFileSourceMap=metaFile&&this.sourceFileMap.get(metaFile);if(metaFileSourceMap){const packageData=await this.getPackageData(metaFileSourceMap.packagePath);if(packageData&&util_1.XML.isXml(packageData))return Object.values(util_1.XML.parse(packageData)).pop()}}}buildClassMetadata(apiVersion){return this.buildMetadataXml("ApexClass",{apiVersion,status:"Active"})}buildTriggerMetadata(apiVersion){return this.buildMetadataXml("ApexTrigger",{apiVersion,status:"Active"})}buildMetadataXml(rootName,data){return new xml2js.Builder(constants.MD_XML_OPTIONS).buildObject({[rootName]:{$:{xmlns:"http://soap.sforce.com/2006/04/metadata"},...data||{}}})}async getBuffer(compressionLevel=0){return(await this.generateArchive()).generateAsync({type:"nodebuffer",compression:"DEFLATE",compressionOptions:{level:compressionLevel}})}}},"./src/lib/salesforce/deploymentPackageBuilder.ts":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.SalesforcePackageBuilder=exports.SalesforcePackageType=void 0;const path=__webpack_require__("path"),core_1=__webpack_require__("./packages/core/lib/index.js"),util_1=__webpack_require__("./packages/util/lib/index.js"),chalk=__webpack_require__("./node_modules/chalk/source/index.js"),ZipArchive=__webpack_require__("./node_modules/jszip/lib/index.js"),deploymentPackage_1=__webpack_require__("./src/lib/salesforce/deploymentPackage.ts"),metadataRegistry_1=__webpack_require__("./src/lib/salesforce/metadataRegistry.ts");var SalesforcePackageType;!function(SalesforcePackageType){SalesforcePackageType.deploy="deploy",SalesforcePackageType.retrieve="retrieve",SalesforcePackageType.destruct="destruct"}(SalesforcePackageType=exports.SalesforcePackageType||(exports.SalesforcePackageType={}));let SalesforcePackageBuilder=class SalesforcePackageBuilder{constructor(type,apiVersion,fs){this.type=type,this.apiVersion=apiVersion,this.parsedFiles=new Set,this.fs=new core_1.CachedFileSystemAdapter(fs),this.mdPackage=new deploymentPackage_1.SalesforcePackage(null!=apiVersion?apiVersion:"50.0","",this.fs)}async addFiles(files,token){const childMetadataFiles=new Array;for await(const file of this.getFiles(files,token)){const xmlName=await this.getComponentType(file);if("Package"==xmlName&&path.basename(file).includes("destructive")){const destructiveChangeType=file.toLocaleLowerCase().includes("post")?"post":"pre";await this.mdPackage.mergeDestructiveChanges(file,destructiveChangeType);continue}const metadataType=xmlName&&this.getMetadataType(xmlName);if(xmlName&&metadataType)if(metadataType.xmlName==xmlName){if("staticresource"==metadataType.id&&file.endsWith("-meta.xml")){const folder=this.stripFileExtension(file,2);await this.fs.isDirectory(folder)&&await this.addStaticResourceBundle(folder)}metadataType.isBundle?await this.addBundledSources(path.dirname(file),metadataType):await this.addSingleSourceFile(file,metadataType)}else childMetadataFiles.push([file,xmlName,metadataType]);else{file.split(/\/|\\/).includes("staticresources")||this.logger.warn(`Adding ${file} (xmlName: ${null!=xmlName?xmlName:"?"}) is not a known Salesforce metadata type`)}}for(const[file,xmlName,metadataType]of this.sortXmlFragments(childMetadataFiles))await this.mergeChildSourceWithParent(file,xmlName,metadataType);return this}sortXmlFragments(fragments){return fragments.sort(((a,b)=>{var _a;const metaTypeCompare=a[2].xmlName.localeCompare(b[2].xmlName);if(0!=metaTypeCompare)return metaTypeCompare;const decompositions=null===(_a=a[2].decompositionConfig)||void 0===_a?void 0:_a.decompositions;if(decompositions){return decompositions.findIndex((d=>d.metadataName==a[1]))-decompositions.findIndex((d=>d.metadataName==b[1]))}return a[1].localeCompare(b[1])}))}async*getFiles(files,token){const fileNames=util_1.Iterable.map(files,(file=>"string"!=typeof file?file.fsPath:file));for(const file of util_1.Iterable.filter(fileNames,(file=>this.addParsedFile(file)))){if(token&&token.isCancellationRequested)break;const fileStat=await this.fs.stat(file);if(null==fileStat)throw new Error(`The specified file does not exist or is inaccessible: ${file}`);if(fileStat.isDirectory()){yield*this.getFiles((await this.fs.readDirectory(file)).map((folder=>path.join(file,folder))),token);continue}if(file.endsWith("-meta.xml")){const sourceFile=await this.findContentFile(file);sourceFile&&this.addParsedFile(sourceFile)&&(await this.fs.isDirectory(sourceFile)?yield*this.getFiles((await this.fs.readDirectory(sourceFile)).map((folder=>path.join(sourceFile,folder))),token):yield sourceFile)}else{const metaFile=await this.findMetaFile(file);metaFile&&this.addParsedFile(metaFile)&&(yield metaFile)}yield file}}addParsedFile(file){const normalizedFileName=file.split(/\\|\//g).join("/");return!this.parsedFiles.has(normalizedFileName)&&(this.parsedFiles.add(normalizedFileName),!0)}async addBundledSources(bundleFolder,metadataType){const bundleFiles=await this.fs.readDirectory(bundleFolder),componentName=bundleFolder.split(/\\|\//g).pop();for(const file of bundleFiles.map((fileName=>path.join(bundleFolder,fileName))))await this.fs.isFile(file)&&await this.addSingleSourceFile(file,metadataType,componentName)}async addSingleSourceFile(file,metadataType,componentName){if(componentName||(componentName=this.getPackageComponentName(file,metadataType)),this.type===SalesforcePackageType.destruct)this.mdPackage.addDestructiveChange(metadataType.xmlName,componentName);else{const packagePath=await this.getPackagePath(file,metadataType);this.mdPackage.add({xmlName:metadataType.xmlName,componentName,packagePath,fsPath:file})}this.logger.verbose(`Added ${path.basename(file)} (${componentName}) as [${chalk.green(metadataType.xmlName)}]`)}async addStaticResourceBundle(folder){const componentName=folder.split(/\/|\\/g).pop(),packagePath=`staticresources/${componentName}.resource`;this.type===SalesforcePackageType.destruct?this.mdPackage.addDestructiveChange("StaticResource",componentName):this.type===SalesforcePackageType.retrieve?this.mdPackage.add({xmlName:"StaticResource",componentName,packagePath}):this.mdPackage.add({xmlName:"StaticResource",componentName,packagePath,data:await this.compressFolder(folder)})}async compressFolder(folder){const resourceBundle=new ZipArchive;for await(const file of this.readDirectoryRecursive(folder)){const relativePath=path.relative(folder,file).replace(/\/|\\/g,"/");resourceBundle.file(relativePath,await this.fs.readFile(file)),this.addParsedFile(file)}return resourceBundle.generateAsync({type:"nodebuffer"})}async*readDirectoryRecursive(folder){for(const file of await this.fs.readDirectory(folder)){const fullPath=path.join(folder,file);if(await this.fs.isDirectory(fullPath))return yield*this.readDirectoryRecursive(fullPath);yield fullPath}}async mergeChildSourceWithParent(sourceFile,xmlName,metadataType){var _a;const decomposition=null===(_a=metadataType.decompositionConfig)||void 0===_a?void 0:_a.decompositions.find((d=>d.metadataName==xmlName));if(!decomposition)return void this.logger.error(`No decomposition configuration for: ${chalk.green(sourceFile)} (${xmlName})`);const childComponentName=this.getPackageComponentName(sourceFile,metadataType),folderPerType="folderPerType"==metadataType.strategies.decomposition,parentComponentFolder=path.join(...sourceFile.split(/\\|\//g).slice(0,folderPerType?-2:-1)),parentComponentName=path.basename(parentComponentFolder),parentComponentMetaFile=path.join(parentComponentFolder,`${parentComponentName}.${metadataType.suffix}-meta.xml`),parentPackagePath=await this.getPackagePath(parentComponentMetaFile,metadataType);this.type==SalesforcePackageType.deploy&&await this.mergeMetadataFragment(parentPackagePath,sourceFile,metadataType),this.type==SalesforcePackageType.destruct?this.mdPackage.addDestructiveChange(xmlName,`${parentComponentName}.${childComponentName}`):(decomposition.isAddressable?this.mdPackage.addManifestEntry(xmlName,`${parentComponentName}.${childComponentName}`):this.mdPackage.addManifestEntry(metadataType.xmlName,parentComponentName),this.mdPackage.addSourceMap(sourceFile,{xmlName,componentName:`${parentComponentName}.${childComponentName}`,packagePath:parentPackagePath})),this.logger.verbose(`Adding ${path.basename(sourceFile)} as ${parentComponentName}.${childComponentName}`)}async mergeMetadataFragment(packagePath,fragmentFile,metadataType){var _a;const[[fragmentTag,fragmentMetadata]]=Object.entries(util_1.XML.parse(await this.fs.readFileAsString(fragmentFile),{trimValues:!0})),decomposition=null===(_a=metadataType.decompositionConfig)||void 0===_a?void 0:_a.decompositions.find((d=>d.metadataName==fragmentTag));if(!decomposition)return void this.logger.error(`No decomposition configuration for: ${chalk.green(fragmentFile)} (${fragmentTag})`);let existingPackageData=await this.mdPackage.getPackageData(packagePath);if(!existingPackageData){const parentBaseName=path.posix.basename(packagePath),parentSourceFile=path.posix.join(fragmentFile,"..","..",`${parentBaseName}-meta.xml`);await this.fs.pathExists(parentSourceFile)&&(existingPackageData=await this.fs.readFileAsString(parentSourceFile))}const existingMetadata=existingPackageData?util_1.XML.parse(existingPackageData,{trimValues:!0})[metadataType.xmlName]:{},mergedMetadata=this.mergeMetadata(existingMetadata,{[decomposition.xmlFragmentName]:fragmentMetadata});this.mdPackage.setPackageData(packagePath,{data:this.buildMetadataXml(metadataType.xmlName,mergedMetadata)})}mergeMetadata(targetMetadata,sourceMetadata){for(let[key,value]of Object.entries(sourceMetadata)){if(void 0===value)continue;"object"!=typeof value||Array.isArray(value)||(value=[value]);const existingValue=targetMetadata[key];if(existingValue){if(Array.isArray(value))if(Array.isArray(existingValue))existingValue.push(...value);else{if("object"!=typeof targetMetadata)throw new Error(`Cannot merge metadata; properties of the source and target metadata are incompatible for property ${key}: expected source to be an Object or Array `);targetMetadata[key]=[targetMetadata[key],...value]}}else targetMetadata[key]=value}return targetMetadata}getPackage(){return this.mdPackage.generateMissingMetaFiles(),this.mdPackage}getManifest(){return this.mdPackage.generateMissingMetaFiles(),this.mdPackage.manifest}getMetadataType(xmlName){return this.metadataRegistry.getMetadataTypes().find((type=>{var _a;return type.xmlName==xmlName||(null===(_a=type.childXmlNames)||void 0===_a?void 0:_a.includes(xmlName))}))}async getComponentType(file){var _a,_b;const xmlName=await this.getComponentTypeFromSource(file);if(xmlName)return xmlName;const pathParts=file.split(/\\|\//g).slice(0,-1),folder=pathParts.pop(),parentFolder=pathParts.pop();for(const type of this.metadataRegistry.getMetadataTypes())if(type.strictDirectoryName)if(type.isBundle){if(parentFolder==type.directoryName)return type.xmlName}else if(folder==type.directoryName)return type.xmlName;const fileSuffix=null===(_a=this.getFileSuffix(file))||void 0===_a?void 0:_a.toLocaleLowerCase();return fileSuffix?null===(_b=this.metadataRegistry.getMetadataTypeBySuffix(fileSuffix))||void 0===_b?void 0:_b.xmlName:void 0}getFileSuffix(file){var _a,_b;const metaSuffixMatch=file.match(/\.([^-]+)-meta\.xml$/i);return metaSuffixMatch?metaSuffixMatch[1]:null===(_b=null===(_a=file.split(/\\|\//g).pop())||void 0===_a?void 0:_a.match(/\.([^.]+)$/i))||void 0===_b?void 0:_b[1]}async getComponentTypeFromSource(file){if(!file.endsWith("-meta.xml")){const metaFile=await this.findMetaFile(file);if(metaFile)return this.getComponentTypeFromSource(metaFile)}const metadataTypes=this.metadataRegistry.getMetadataTypes();let xmlName=await this.getRootElementName(file);if("EmailFolder"==xmlName)xmlName="EmailTemplate";else if(xmlName&&xmlName.endsWith("Folder"))xmlName=xmlName.substr(0,xmlName.length-6);else if("Package"==xmlName)return xmlName;if(xmlName&&metadataTypes.find((type=>{var _a;return type.xmlName==xmlName||(null===(_a=type.childXmlNames)||void 0===_a?void 0:_a.includes(xmlName))})))return xmlName}async getRootElementName(file){return util_1.XML.getRootTagName(await this.fs.readFile(file))}getPackageComponentName(metaFile,metadataType){const componentName=path.basename(metaFile).replace(/-meta\.xml$/gi,"").replace(/\.[^.]+$/gi,"");if(metadataType.isBundle)return metaFile.split(/\\|\//g).slice(-2).shift();const packageFolder=this.getPackageFolder(metaFile,metadataType);return packageFolder.includes(path.posix.sep)?packageFolder.split(path.posix.sep).slice(1).concat([componentName]).join(path.posix.sep):componentName}getPackageFolder(fullSourcePath,metadataType){const retainFolderStructure=!!metadataType.inFolder,componentPackageFolder=metadataType.directoryName;if(retainFolderStructure&&componentPackageFolder){const packageParts=path.dirname(fullSourcePath).split(/\/|\\/g),packageFolderIndex=packageParts.indexOf(componentPackageFolder);return packageParts.slice(packageFolderIndex).join(path.posix.sep)}if(metadataType.isBundle&&componentPackageFolder){const componentName=fullSourcePath.split(/\\|\//g).slice(-2).shift();return path.posix.join(componentPackageFolder,componentName)}return null!=componentPackageFolder?componentPackageFolder:util_1.substringAfterLast(path.dirname(fullSourcePath),/\/|\\/g)}async getPackagePath(sourceFile,metadataType){const isMetaFile=sourceFile.endsWith("-meta.xml"),packageFolder=this.getPackageFolder(sourceFile,metadataType),baseName=sourceFile.split(/\\|\//g).pop();if(isMetaFile&&!metadataType.metaFile&&!metadataType.hasContent)return path.posix.join(packageFolder,baseName.slice(0,-9));if("document"==metadataType.id){if(isMetaFile){const contentFile=await this.findContentFile(sourceFile);if(contentFile)return path.posix.join(packageFolder,`${contentFile.split(/\\|\//g).pop()}-meta.xml`)}}else if(!isMetaFile&&metadataType.suffix&&!baseName.endsWith(metadataType.suffix))return path.posix.join(packageFolder,`${this.stripFileExtension(baseName)}.${metadataType.suffix}`);return path.posix.join(packageFolder,baseName)}async findContentFile(metaFile){const metaFileSuggestedContentFile=metaFile.slice(0,-9);if(await this.fs.pathExists(metaFileSuggestedContentFile))return metaFileSuggestedContentFile;const contentFilePattern=`${this.stripFileExtension(metaFile,2)}.*`,contentMatches=(await this.fs.findFiles(contentFilePattern)).filter((f=>f!==metaFile)).filter((file=>!file.endsWith("-meta.xml")));return contentMatches.length?contentMatches[0]:void 0}async findMetaFile(contentFile){const metaFile=`${contentFile}-meta.xml`;if(await this.fs.isFile(metaFile))return metaFile;const genericMetaGlob=`${this.stripFileExtension(contentFile)}.*-meta.xml`,globMetaMatch=await this.fs.findFiles(genericMetaGlob);return globMetaMatch.length?globMetaMatch[0]:void 0}stripFileExtension(fileName,maxCount=1){const extensions=fileName.split(/\\|\//g).pop().split(".");return 1==extensions.length?fileName:fileName.split(".").slice(0,-Math.min(extensions.length-1,maxCount)).join(".")}buildMetadataXml(rootName,data){return util_1.XML.stringify({[rootName]:{$:{xmlns:"http://soap.sforce.com/2006/04/metadata"},...data||{}}},4)}};__decorate([core_1.injectable.property,__metadata("design:typeinfo",{type:()=>metadataRegistry_1.MetadataRegistry})],SalesforcePackageBuilder.prototype,"metadataRegistry",void 0),__decorate([core_1.injectable.property,__metadata("design:typeinfo",{type:()=>core_1.Logger})],SalesforcePackageBuilder.prototype,"logger",void 0),__decorate([util_1.cache(),__metadata("design:typeinfo",{type:()=>Function,paramTypes:()=>[String],returnType:()=>Promise})],SalesforcePackageBuilder.prototype,"findContentFile",null),__decorate([util_1.cache(),__metadata("design:typeinfo",{type:()=>Function,paramTypes:()=>[String],returnType:()=>Promise})],SalesforcePackageBuilder.prototype,"findMetaFile",null),SalesforcePackageBuilder=__decorate([core_1.injectable({lifecycle:core_1.LifecyclePolicy.transient}),__metadata("design:typeinfo",{paramTypes:()=>[String,String,core_1.FileSystem]})],SalesforcePackageBuilder),exports.SalesforcePackageBuilder=SalesforcePackageBuilder},"./src/lib/salesforce/developerLog.ts":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.DeveloperLog=void 0;const util_1=__webpack_require__("./packages/util/lib/index.js");class DeveloperLog{constructor(entry,connectionProvider){this.entry=entry,this.connectionProvider=connectionProvider}get id(){return this.entry.id}get application(){return this.entry.application}get startTime(){return new Date(this.entry.startTime)}get durationMilliseconds(){return this.entry.durationMilliseconds}get location(){return this.entry.application}get size(){return this.entry.LogLength}get user(){return this.entry.logUser.name}get operation(){return this.entry.operation}get request(){return this.entry.request}get status(){return this.entry.status}async getBody(){const connection=await this.connectionProvider.getJsForceConnection();return await connection.request(`/sobjects/ApexLog/${this.entry.id}/Body`)}}__decorate([util_1.cache(),__metadata("design:typeinfo",{type:()=>Function,paramTypes:()=>[],returnType:()=>Promise})],DeveloperLog.prototype,"getBody",null),exports.DeveloperLog=DeveloperLog},"./src/lib/salesforce/metadataDetector.ts":function(__unused_webpack_module,exports,__webpack_require__){var MetadataDetector_1,__decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.MetadataDetector=void 0;const metadataRegistry_1=__webpack_require__("./src/lib/salesforce/metadataRegistry.ts"),core_1=__webpack_require__("./packages/core/lib/index.js"),util_1=__webpack_require__("./packages/util/lib/index.js");let MetadataDetector=MetadataDetector_1=class MetadataDetector{constructor(registry){this.registry=registry}isMetadataFile(fileName){if(fileName.endsWith("-meta.xml"))return!0;const suffix=util_1.fileSuffix(fileName);return!!suffix&&this.registry.isMetadataSuffix(suffix)}static filter(){const detector=core_1.container.get(MetadataDetector_1);return detector.isMetadataFile.bind(detector)}};MetadataDetector=MetadataDetector_1=__decorate([core_1.injectable(),__metadata("design:typeinfo",{paramTypes:()=>[metadataRegistry_1.MetadataRegistry]})],MetadataDetector),exports.MetadataDetector=MetadataDetector},"./src/lib/salesforce/metadataRegistry.ts":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.MetadataRegistry=void 0;const source_deploy_retrieve_1=__webpack_require__("./node_modules/@salesforce/source-deploy-retrieve/lib/src/index.js"),metadataTypeInfos_json_1=__webpack_require__("./node_modules/salesforce-alm/metadata/metadataTypeInfos.json"),describe_json_1=__webpack_require__("./node_modules/salesforce-alm/metadata/describe.json"),util_1=__webpack_require__("./packages/util/lib/index.js"),core_1=__webpack_require__("./packages/core/lib/index.js"),core_2=__webpack_require__("./node_modules/@salesforce/core/lib/exported.js"),urlFormats=__webpack_require__("./src/lib/salesforce/metadataUrls.json");let MetadataRegistry=class MetadataRegistry{constructor(logger){var _a;this.logger=logger,this.registry=new Array,this.types=new Map,this.urlFormats=new Map,this.suffixes=new Map;for(const metadataObject of describe_json_1.metadataObjects.map((md=>Object.assign({},md)))){const sfdxRegistryData=source_deploy_retrieve_1.registry.types[metadataObject.xmlName.toLocaleLowerCase()];sfdxRegistryData?(Object.assign(metadataObject,sfdxRegistryData),metadataObject.isBundle="bundle"==(null===(_a=metadataObject.strategies)||void 0===_a?void 0:_a.adapter)):metadataObject.isBundle=metadataObject.xmlName.endsWith("Bundle");const metadataTypeDef=metadataTypeInfos_json_1.typeDefs[metadataObject.xmlName];metadataTypeDef&&Object.assign(metadataObject,metadataTypeDef),"string"==typeof metadataObject.metaFile&&(metadataObject.metaFile="true"==metadataObject.metaFile),this.registry.push(metadataObject),this.types.has(metadataObject.xmlName.toLowerCase())?this.logger.warn(`XML Name already in-use: ${metadataObject.xmlName.toLowerCase()}`):(this.types.set(metadataObject.xmlName.toLowerCase(),metadataObject),metadataObject.childXmlNames&&metadataObject.childXmlNames.forEach((childType=>{if(this.types.has(childType.toLowerCase()))throw`XML Name already in-use: ${childType.toLowerCase()}`;this.types.set(childType.toLowerCase(),metadataObject)})))}for(const suffix of Object.keys(source_deploy_retrieve_1.registry.suffixes))this.suffixes.set(suffix.toLowerCase(),source_deploy_retrieve_1.registry.suffixes[suffix])}getUrlFormat(type){var _a;return{...urlFormats.$default,...null!==(_a=urlFormats[type])&&void 0!==_a?_a:{}}}getMetadataTypes(){return this.registry}getMetadataSuffixes(){return[...Object.keys(source_deploy_retrieve_1.registry.suffixes)]}isMetadataSuffix(suffix){return this.suffixes.has(suffix.toLowerCase())}getMetadataType(type){return this.types.get(type.toLowerCase())}getMetadataTypeBySuffix(suffix){const metadataType=this.suffixes.get(suffix.toLowerCase());return metadataType?this.getMetadataType(metadataType):void 0}};MetadataRegistry=__decorate([util_1.singletonMixin,core_1.injectable({lifecycle:core_1.LifecyclePolicy.singleton}),__metadata("design:typeinfo",{paramTypes:()=>[core_2.Logger]})],MetadataRegistry),exports.MetadataRegistry=MetadataRegistry},"./src/lib/salesforce/queryService.ts":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0});const core_1=__webpack_require__("./packages/core/lib/index.js"),jsForceConnectionProvider_1=__webpack_require__("./src/lib/salesforce/connection/jsForceConnectionProvider.ts"),util_1=__webpack_require__("./packages/util/lib/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js");let QueryService=class QueryService{constructor(connectionProvider){this.connectionProvider=connectionProvider,this.queryCache=new Map,this.recordFieldNames=new WeakMap,this.queryCacheEnabled=!0,this.queryCacheDefault=!1}disableCache(disabled){return this.queryCacheEnabled=!disabled,this}setCacheDefault(enabled){return this.queryCacheDefault=enabled,this}clearCache(){return this.queryCache.clear(),this}query(query,useCache){const enableCache=this.queryCacheEnabled&&(null!=useCache?useCache:this.queryCacheDefault),cachedResult=enableCache&&this.queryCache.get(query);if(cachedResult)return this.logger.verbose(`Query: ${query} [cache hit]`),cachedResult;const promisedResult=(async()=>{const queryTimer=new util_1.Timer,connection=await this.connectionProvider.getJsForceConnection();let queryResult=await connection.query(query);const records=queryResult.records;for(;queryResult.nextRecordsUrl;)queryResult=await connection.queryMore(queryResult.nextRecordsUrl),records.push(...queryResult.records);return this.logger.verbose(`Query: ${query} [records ${records.length}] [${queryTimer.stop()}]`),records.map((record=>this.wrapRecord(record)))})().catch((err=>{throw new Error(err.message||err)}));return enableCache&&this.queryCache.set(query,promisedResult),promisedResult}bulkQuery(query){var _a;const sobjectType=null===(_a=query.replace(/\([\s\S]+\)/g,"").match(/FROM\s+(\w+)/i))||void 0===_a?void 0:_a[0];if(!sobjectType)throw new Error(`SObject type not detected in query: ${query}`);this.logger.verbose(`Bulk Query: ${query}...`);return(async()=>{const queryTimer=new util_1.Timer,connection=await this.connectionProvider.getJsForceConnection(),records=await new Promise(((resolve,reject)=>{const recordStream=connection.bulk.query(query),data=[];recordStream.once("error",reject),recordStream.on("record",(record=>{const recordAttributes={attributes:{type:sobjectType,url:`/${sobjectType}/${record.Id}`}};data.push(Object.assign(record,recordAttributes))})),recordStream.once("finish",(()=>resolve(data)))}));return this.logger.verbose(`Bulk Query: ${query} records ${records.length}] [${queryTimer.stop()}]`),records.map((record=>this.wrapRecord(record)))})().catch((err=>{throw new Error(err.message||err)}))}wrapRecord(record){return new Proxy(record,new util_1.PropertyTransformHandler(((target,name)=>{var _a;const fieldMap=this.getRecordFieldMap(target),normalizedName=util_1.normalizeSalesforceName(name.toString());return null!==(_a=fieldMap.get(normalizedName))&&void 0!==_a?_a:name})))}getRecordFieldMap(record){let fieldMap=this.recordFieldNames.get(record);return fieldMap||(fieldMap=Object.keys(record).reduce(((map,key)=>map.set(util_1.normalizeSalesforceName(key.toString()),key)),new Map),this.recordFieldNames.set(record,fieldMap)),fieldMap}static formatFieldValue(value,field,options={wrapStrings:!0,escapeStrings:!0}){if(null==value)return"null";if("object"==typeof value&&Array.isArray(value))return`(${value.map((v=>this.formatFieldValue(v,field))).join(",")})`;if("object"==typeof value)throw new Error("Cannot format Object value to a valid Salesforce field value.");if("date"===field.type||"datetime"===field.type){if(!value)return"null";const format="date"===field.type?"YYYY-MM-DD":"YYYY-MM-DDThh:mm:ssZ";if(!moment(value).isValid())throw new Error(`Value is not a valid date: ${value}`);return moment(value).format(format)}return"boolean"===field.type?"string"==typeof value?("true"===value.toLowerCase()).toString():"number"==typeof value?(value>0).toString():(!!value).toString():["double","int","currency","percent"].includes(field.type)?value.toString().replace(/[,.]([0-9]{3})/g,"$1").toString().replace(/[.,]/,"."):(options.escapeStrings&&"string"===field.type&&(value=value.replace("\\","\\\\").replace("'","\\'")),options.wrapStrings?`'${value}'`:`${value}`)}};__decorate([core_1.injectable.property,__metadata("design:typeinfo",{type:()=>core_1.Logger})],QueryService.prototype,"logger",void 0),QueryService=__decorate([core_1.injectable.transient(),__metadata("design:typeinfo",{paramTypes:()=>[jsForceConnectionProvider_1.default]})],QueryService),exports.default=QueryService},"./src/lib/salesforce/recordBatch.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const core_1=__webpack_require__("./packages/core/lib/index.js"),util_1=__webpack_require__("./packages/util/lib/index.js"),recordBatchDefaultOptions={useBulkApi:!1,bulkApiThreshold:500,chunkSize:100};class RecordBatch{constructor(schemaService,options,logger=core_1.LogManager.get(RecordBatch)){if(this.schemaService=schemaService,this.logger=logger,this.insert=new Map,this.update=new Map,this.isExecuting=!1,this.recordCount=0,this.processedCount=0,this.failedCount=0,this.bulkPollInterval=5e3,this.bulkPollTimeout=18e5,this.options={...recordBatchDefaultOptions},options)for(const option of Object.keys(options))void 0!==options[option]&&null!==options[option]&&(this.options[option]=options[option])}size(){return this.recordCount}async*execute(connection,onProgress,cancelToken){if(this.isExecuting)throw new Error("Batch is already executing; you have to wait for the current batch to finish before you can start a new one");const timer=new util_1.Timer;this.isExecuting=!0,this.progressReporter=onProgress;const reporter=onProgress&&setInterval(this.reportProgress.bind(this),this.bulkPollInterval),chunkSize=this.options.useBulkApi?void 0:this.options.chunkSize;try{for(;;){const chunk=await this.getRecords("all",chunkSize);if(!chunk)return;if(null==cancelToken?void 0:cancelToken.isCancellationRequested)break;const executionApiFunc=this.options.useBulkApi&&chunk.records.length>this.options.chunkSize?"executeWithBulkApi":"executeWithCollectionApi",results=await this[executionApiFunc](connection,chunk,cancelToken).catch((err=>{throw this.logger.error(`Failed to ${chunk.operation} ${chunk.records.length} records (${executionApiFunc.substr(11)}):`,err.message),this.logger.verbose(chunk.records),new Error(err.message)}));for(let i=0;i<results.length;i++){const result=results[i];yield{ref:chunk.refs[i],success:result.success,recordId:!0===result.success?result.id:void 0,error:!1===result.success?result.errors.map((err=>err.message||err)).join(","):void 0}}if(null==cancelToken?void 0:cancelToken.isCancellationRequested)break}}finally{reporter&&(this.reportProgress(),clearInterval(reporter)),this.isExecuting=!1,this.progressReporter=void 0}(null==cancelToken?void 0:cancelToken.isCancellationRequested)&&this.logger.warn(`Batch cancelled at ${this.processedCount}/${this.recordCount} records (failed: ${this.failedCount}) [${timer.stop()}]`)}async getRecords(operation,count){const getRecords=async operation=>{for(const[sobjectType,records]of this[operation]){let resultRecords;!count||count>=records.length?(resultRecords=records,this[operation].delete(sobjectType)):resultRecords=records.splice(0,count);const recordData=Promise.all(resultRecords.map((record=>this.validateRecordData(sobjectType,record.data,operation)))),refs=resultRecords.map((record=>record.ref));return{operation,sobjectType,refs,records:await recordData}}};return"insert"===operation||"update"===operation?getRecords(operation):await this.getRecords("insert",count)||this.getRecords("update",count)}async*yieldRecords(operation,count){let records;for(;records=await this.getRecords(operation,count);)yield records}async executeWithCollectionApi(connection,chunk,cancelToken){const timer=new util_1.Timer,results=await connection[chunk.operation](chunk.sobjectType,chunk.records,{allOrNone:!1,allowRecursive:!1});this.logger.info(`Complete ${chunk.operation} of ${chunk.records.length} ${chunk.sobjectType} records (Collections API) [${timer.stop()}]`);const failedCount=results.reduce(((sum,i)=>sum+(i.success?0:1)),0);return this.failedCount+=failedCount,this.processedCount+=results.length-failedCount,results}async executeWithBulkApi(connection,chunk,cancelToken){const bulkJob=connection.bulk.createJob(chunk.sobjectType,chunk.operation),batchJob=bulkJob.createBatch();let processedCount=0,failedCount=0;null==cancelToken||cancelToken.onCancellationRequested((()=>bulkJob.abort())),batchJob.once("queue",(()=>batchJob.poll(this.bulkPollInterval,this.bulkPollTimeout))),batchJob.on("progress",(result=>{this.failedCount-=failedCount,this.processedCount-=processedCount,processedCount=parseInt(result.numberRecordsProcessed,10),failedCount=parseInt(result.numberRecordsFailed,10),this.failedCount+=failedCount,this.processedCount+=processedCount}));try{const timer=new util_1.Timer,results=await new Promise(((resolve,reject)=>{null==cancelToken||cancelToken.onCancellationRequested((()=>resolve([]))),batchJob.execute(chunk.records,((err,result)=>{if(err)return reject(err);resolve(result)}))}));if(null==cancelToken?void 0:cancelToken.isCancellationRequested)return this.logger.warn(`${chunk.sobjectType} bulk cancelled at ${processedCount}/${chunk.records.length} [${timer.stop()}]`),[];this.logger.info(`Complete ${chunk.operation} of ${chunk.records.length} ${chunk.sobjectType} records (Bulk API) [${timer.stop()}]`);const batchFailedCount=results.reduce(((sum,i)=>sum+(i.success?0:1)),0);return this.failedCount+=-failedCount-batchFailedCount,this.processedCount+=-processedCount+(results.length-failedCount),results}finally{this.logger.verbose("Closing bulk job"),bulkJob.close()}}reportProgress(){this.isExecuting&&this.progressReporter&&this.progressReporter({failed:this.failedCount,processed:this.processedCount,total:this.recordCount})}add(type,data,ref){return data.Id||data.id?this.addUpdate(type,data,data.Id,ref):this.addInsert(type,data,ref)}addUpdate(type,data,id,ref){return data.Id=id,util_1.arrayMapPush(this.update,type,{ref,data}),this.recordCount++,this}addInsert(type,data,ref){return delete data.Id,util_1.arrayMapPush(this.insert,type,{ref,data}),this.recordCount++,this}async validateRecordData(sobjectType,values,mode){const recordData={};for(let[field,value]of Object.entries(values)){const fieldInfo=await this.schemaService.describeSObjectField(sobjectType,field);if(("update"!=mode||"id"===fieldInfo.type||fieldInfo.updateable)&&(("insert"!=mode||fieldInfo.createable)&&!fieldInfo.calculated)){if(!fieldInfo.nillable&&null==value){if("update"==mode)continue;null!==fieldInfo.defaultValue&&void 0!==fieldInfo.defaultValue?value=fieldInfo.defaultValue:this.logger.warn(`Field ${field} is not nullable but has no value; insert might fail`)}recordData[fieldInfo.name]=value}}return recordData}}exports.default=RecordBatch},"./src/lib/salesforce/salesforceDeployService.ts":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.SalesforceDeployService=void 0;const ZipArchive=__webpack_require__("./node_modules/jszip/lib/index.js"),core_1=__webpack_require__("./packages/core/lib/index.js"),util_1=__webpack_require__("./packages/util/lib/index.js"),vlocodeConfiguration_1=__webpack_require__("./src/lib/vlocodeConfiguration.ts"),salesforceService_1=__webpack_require__("./src/lib/salesforce/salesforceService.ts"),retrieveResultPackage_1=__webpack_require__("./src/lib/salesforce/deploy/retrieveResultPackage.ts");let SalesforceDeployService=class SalesforceDeployService{constructor(salesforce,config,logger){this.salesforce=salesforce,this.config=config,this.logger=logger}async deployPackage(sfPackage,options,progress,token){return this.deploy(await sfPackage.getBuffer(),options,progress,token)}async deploy(zipInput,options,progress,token){let checkInterval=1e3;options&&options.checkOnly;return(async(progress,cancellationToken)=>{var _a,_b;zipInput instanceof ZipArchive&&(zipInput=await zipInput.generateAsync({type:"nodebuffer",compression:"DEFLATE",compressionOptions:{level:7}}));const deployOptions={singlePackage:!0,performRetrieve:!0,ignoreWarnings:!0,autoUpdatePackage:!1,allowMissingFiles:!1,purgeOnDelete:!0,rollbackOnError:!1,...options};await this.salesforce.isProductionOrg()&&(this.logger.warn("Production deployment detected; running as validate/checkOnly"),deployOptions.rollbackOnError=!0,deployOptions.purgeOnDelete=!1,deployOptions.checkOnly=!0);const connection=await this.salesforce.getJsForceConnection(),deployJob=await connection.metadata.deploy(zipInput,deployOptions);let lastConsoleLog=0,lastProgress=0,pollCount=0;for(;await util_1.wait(checkInterval);){pollCount++>10&&checkInterval<5e3&&(pollCount=0,this.logger.verbose(`Reducing deployment poll interval to ${checkInterval=Math.min(checkInterval+1e3,5e3)}ms`));const status=await connection.metadata.checkDeployStatus(deployJob.id,!0);if(cancellationToken&&cancellationToken.isCancellationRequested)return connection.metadata.cancelDeploy(deployJob.id),status;if(Date.now()-lastConsoleLog>5e3&&(this.logger.info(`Deployment ${status.id} -- ${status.status} (${null!==(_a=status.numberComponentsDeployed)&&void 0!==_a?_a:0}/${null!==(_b=status.numberComponentsTotal)&&void 0!==_b?_b:0})`+(status.numberComponentErrors?` -- Errors ${status.numberComponentErrors}`:"")),status.numberComponentsTotal?(null==progress||progress.report({message:`${status.numberComponentsDeployed}/${status.numberComponentsTotal}`,increment:status.numberComponentsDeployed-lastProgress,total:status.numberComponentsTotal}),lastProgress=status.numberComponentsDeployed):null==progress||progress.report({message:status.status}),lastConsoleLog=Date.now()),status.done){const details=status.details;return details.componentFailures&&!Array.isArray(details.componentFailures)&&(details.componentFailures=[details.componentFailures]),status}}})(progress,token)}async retrieveManifest(manifest,apiVersion,token){return(async cancellationToken=>{var _a;apiVersion=null!==(_a=null!=apiVersion?apiVersion:this.config.salesforce.apiVersion)&&void 0!==_a?_a:await this.salesforce.getApiVersion();const connection=await this.salesforce.getJsForceConnection(),retrieveJob=await connection.metadata.retrieve({singlePackage:true,unpackaged:manifest.toJson(apiVersion)},void 0);for(;await util_1.wait(2e3);){if(cancellationToken&&cancellationToken.isCancellationRequested)throw new Error("Retrieve request cancelled");const status=await connection.metadata.checkRetrieveStatus(retrieveJob.id);if(!0===status.done||"true"===status.done){const retrieveZip=status.zipFile?await(new ZipArchive).loadAsync(Buffer.from(status.zipFile,"base64")):void 0;return new retrieveResultPackage_1.RetrieveResultPackage(status,true,retrieveZip)}}})(token)}};SalesforceDeployService=__decorate([core_1.injectable(),__metadata("design:typeinfo",{paramTypes:()=>[salesforceService_1.default,vlocodeConfiguration_1.default,core_1.Logger]})],SalesforceDeployService),exports.SalesforceDeployService=SalesforceDeployService},"./src/lib/salesforce/salesforceDeployment.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SalesforceDeployment=void 0;const core_1=__webpack_require__("./packages/core/lib/index.js"),util_1=__webpack_require__("./packages/util/lib/index.js"),salesforceService_1=__webpack_require__("./src/lib/salesforce/salesforceService.ts");class SalesforceDeployment extends util_1.AsyncEventEmitter{constructor(sfPackage,salesforce=core_1.container.get(salesforceService_1.default),logger=core_1.LogManager.get(SalesforceDeployment)){super(),this.sfPackage=sfPackage,this.salesforce=salesforce,this.logger=logger,this.checkInterval=1e3,this.lastPrintedLogStamp=0,this.pollCount=0,this.lastProgress=0,this.logInterval=5e3,this.compressionLevel=7}get status(){return this.lastStatus}get hasErrors(){var _a,_b,_c,_d;return(null!==(_b=null===(_a=this.lastStatus)||void 0===_a?void 0:_a.numberComponentErrors)&&void 0!==_b?_b:0)>0||(null!==(_d=null===(_c=this.lastStatus)||void 0===_c?void 0:_c.numberTestErrors)&&void 0!==_d?_d:0)>0}get id(){return this.deploymentId}get setupUrl(){return`lightning/setup/DeployStatus/page?address=${`/changemgmt/monitorDeploymentsDetails.apexp?asyncId=${this.deploymentId}`}`}async start(options){const deployOptions={singlePackage:!0,performRetrieve:!0,ignoreWarnings:!0,autoUpdatePackage:!1,allowMissingFiles:!1,purgeOnDelete:!0,rollbackOnError:!1,...null!=options?options:{}};await this.salesforce.isProductionOrg()&&(this.logger.warn("Production deployment detected; running as validate/checkOnly"),deployOptions.rollbackOnError=!0,deployOptions.purgeOnDelete=!1,deployOptions.checkOnly=!0),this.connection=await this.salesforce.getJsForceConnection();const zipInput=await this.sfPackage.getBuffer(this.compressionLevel),deployJob=await this.connection.metadata.deploy(zipInput,deployOptions);return this.deploymentId=deployJob.id,this.nextProgressTimeoutId=setImmediate((()=>this.checkDeployment())),this}async cancel(){0!=this.nextProgressTimeoutId&&clearTimeout(this.nextProgressTimeoutId);try{await this.connection.metadata.cancelDeploy(this.deploymentId)}catch(err){}try{this.lastStatus=await this.connection.metadata.checkDeployStatus(this.deploymentId,!0)}catch(err){}finally{this.emit("cancel",this.lastStatus)}}getResult(){return new Promise((resolve=>{this.once("complete",resolve),this.once("cancel",resolve)}))}async checkDeployment(){var _a,_b,_c,_d,_e,_f;const status=await this.connection.metadata.checkDeployStatus(this.deploymentId,!0);if(this.pollCount++>10&&this.checkInterval<5e3&&(this.pollCount=0,this.logger.verbose(`Reducing deployment poll interval to ${this.checkInterval=Math.min(this.checkInterval+1e3,5e3)}ms`)),Date.now()-this.lastPrintedLogStamp>this.logInterval&&(this.logger.info(`Deployment ${status.id} -- ${status.status} `+(status.numberComponentsTotal?`(${null!==(_a=status.numberComponentsDeployed)&&void 0!==_a?_a:0}/${null!==(_b=status.numberComponentsTotal)&&void 0!==_b?_b:0})`:"")+(status.numberComponentErrors?` -- Errors ${status.numberComponentErrors}`:"")),void 0!==status.numberComponentsTotal&&(this.emit("progress",{status:status.status,deployed:null!==(_c=status.numberComponentsDeployed)&&void 0!==_c?_c:0,increment:(null!==(_d=status.numberComponentsDeployed)&&void 0!==_d?_d:0)-this.lastProgress,total:status.numberComponentsTotal,errors:null!==(_e=status.numberComponentErrors)&&void 0!==_e?_e:0}),this.lastProgress=null!==(_f=status.numberComponentsDeployed)&&void 0!==_f?_f:0),this.lastPrintedLogStamp=Date.now()),status.done){const details=status.details;details.componentFailures&&!Array.isArray(details.componentFailures)&&(details.componentFailures=[details.componentFailures]),this.emit("complete",status)}else this.nextProgressTimeoutId=setTimeout((()=>this.checkDeployment()),this.checkInterval);this.lastStatus=status}}exports.SalesforceDeployment=SalesforceDeployment},"./src/lib/salesforce/salesforceLookupService.ts":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0});const core_1=__webpack_require__("./packages/core/lib/index.js"),util_1=__webpack_require__("./packages/util/lib/index.js"),queryService_1=__webpack_require__("./src/lib/salesforce/queryService.ts"),salesforceSchemaService_1=__webpack_require__("./src/lib/salesforce/salesforceSchemaService.ts");let SalesforceLookupService=class SalesforceLookupService{constructor(schemaService,queryService){this.schemaService=schemaService,this.queryService=queryService}async lookupSingle(type,filter,lookupFields,useCache){return(await this.lookup(type,filter,lookupFields,1,useCache)).shift()}lookupById(type,ids,lookupFields,useCache){return this.lookup(type,util_1.asArray(ids).map((Id=>({Id}))),lookupFields,void 0,useCache)}async lookup(type,filter,lookupFields,limit,useCache){const filters=await Promise.all(util_1.asArray(filter).map((f=>"string"==typeof f?Promise.resolve(f):this.createWhereClause(type,f)))),results=new Array,filterChunks=util_1.joinLimit(filters.filter((f=>null==f?void 0:f.trim().length)).map((f=>`(${f})`)),8e3," or ");do{results.push(...await this.lookupWhere(type,filterChunks.shift(),lookupFields||"all",limit,useCache))}while(filterChunks.length);return results}async lookupWhere(type,where,selectFields="all",limit,useCache){const fields=new Set(["Id"]);if(selectFields)if("all"===selectFields)for(const field of await this.schemaService.getSObjectFields(type))fields.add(field.name);else for(const field of selectFields){const fieldPath=await this.schemaService.toSalesforceField(type,field.toString());if(null==fieldPath)throw new Error(`Unable to resolve lookup field ${field} on type ${type}`);fields.add(fieldPath)}const realType=(await this.schemaService.describeSObject(type)).name,limitClause=limit?` limit ${limit}`:"",whereClause=(null==where?void 0:where.trim().length)?` where ${where}`:"",queryString=`select ${Array.from(fields).join(",")} from ${realType}${whereClause}${limitClause}`;return this.logger.verbose(`LOOKUP: ${queryString}`),this.queryService.query(queryString,useCache)}async createWhereClause(type,values,relationshipName=""){const lookupFilters=[];for(let[fieldPath,value]of Object.entries(values||{})){if(null==value)continue;const salesforceFields=await this.schemaService.describeSObjectFieldPath(type,fieldPath),salesforceField=util_1.last(salesforceFields),fieldName=[...salesforceFields.slice(0,-1).map((field=>field.relationshipName)),salesforceField.name].join(".");if("object"!=typeof value||Array.isArray(value)){let operator="=";"string"==typeof value?value.startsWith("!=")?(operator="!=",value=value.substring(2)):value.startsWith(">")?(operator=">",value=value.substring(1)):value.startsWith("<")?(operator="<",value=value.substring(1)):value.startsWith("~")&&(operator="like",value=value.substring(1)):"object"==typeof value&&Array.isArray(value)&&(operator="includes");const fieldValue=queryService_1.default.formatFieldValue(value,salesforceField);lookupFilters.push(`${fieldName} ${operator} ${fieldValue}`)}else{if("reference"!=salesforceField.type||!salesforceField.referenceTo||!salesforceField.relationshipName)throw new Error(`Object type set for non-reference field ${fieldPath} on type ${type}`);lookupFilters.push(await this.createWhereClause(type,util_1.transform(value,(key=>`${fieldName}.${String(key)}`))))}}return lookupFilters.join(" and ")}};__decorate([core_1.injectable.property,__metadata("design:typeinfo",{type:()=>core_1.Logger})],SalesforceLookupService.prototype,"logger",void 0),SalesforceLookupService=__decorate([core_1.injectable({lifecycle:core_1.LifecyclePolicy.transient}),__metadata("design:typeinfo",{paramTypes:()=>[salesforceSchemaService_1.default,queryService_1.default]})],SalesforceLookupService),exports.default=SalesforceLookupService},"./src/lib/salesforce/salesforceProfile.ts":function(__unused_webpack_module,exports,__webpack_require__){var _SalesforceProfile_hasChanges,_SalesforceProfile_changeTrackHandler,__classPrivateFieldSet=this&&this.__classPrivateFieldSet||function(receiver,state,value,kind,f){if("m"===kind)throw new TypeError("Private method is not writable");if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===kind?f.call(receiver,value):f?f.value=value:state.set(receiver,value),value},__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.SalesforceProfile=exports.SalesforceFieldPermission=void 0;const xml2js=__webpack_require__("./node_modules/xml2js/lib/xml2js.js"),util_1=__webpack_require__("./packages/util/lib/index.js");var SalesforceFieldPermission;!function(SalesforceFieldPermission){SalesforceFieldPermission.editable="editable",SalesforceFieldPermission.readable="readable",SalesforceFieldPermission.none="none"}(SalesforceFieldPermission=exports.SalesforceFieldPermission||(exports.SalesforceFieldPermission={}));exports.SalesforceProfile=class SalesforceProfile{constructor(name,profileModel){this.name=name,_SalesforceProfile_hasChanges.set(this,!1),_SalesforceProfile_changeTrackHandler.set(this,{set:(t,p,v)=>(t[p]!==v&&(t[p]=v,__classPrivateFieldSet(this,_SalesforceProfile_hasChanges,!0,"f")),!0)}),this.profileModel={classAccesses:[],pageAccess:[],customPermissions:[],fieldPermissions:[],objectPermissions:[]},profileModel&&this.mergeProfileData(profileModel)}get hasChanges(){return __classPrivateFieldGet(this,_SalesforceProfile_hasChanges,"f")}get classes(){return this.profileModel.classAccesses}get fields(){return this.profileModel.fieldPermissions}get objects(){return this.profileModel.objectPermissions}get pages(){return this.profileModel.pageAccess}async loadProfile(profileXmlBody){return this.mergeProfileData(await xml2js.parseStringPromise(profileXmlBody,{explicitRoot:!1,explicitArray:!1,valueProcessors:[value=>/^true|false$/i.test(value)?"true"==value.toLowerCase():/^[0-9]+$/.test(value)?parseInt(value,10):/^[0-9]*\.[0-9]+$/.test(value)?parseFloat(value):value]})),this}mergeProfileData(data){const normalizedKeys=new Map(Object.keys(this.profileModel).map((key=>[key.toLowerCase(),key])));for(const[key,value]of Object.entries(data).filter((([,value])=>!!value))){const modelProp=normalizedKeys.get(key.toLowerCase());modelProp?Array.isArray(value)?this.profileModel[modelProp].push(...value.map((v=>this.trackChanges(v)))):this.profileModel[modelProp].push(this.trackChanges(value)):this.profileModel[key]="object"!=typeof value||Array.isArray(value)||"$"==key||"@"==key||"#"==key?value:[value]}}hasField(...field){return this.fields.some((c=>util_1.stringEquals(c.field,field.join("."))))}getFieldAccess(fieldName){const field=this.fields.find((c=>util_1.stringEquals(c.field,fieldName)));return(null==field?void 0:field.editable)?SalesforceFieldPermission.editable:(null==field?void 0:field.readable)?SalesforceFieldPermission.readable:field?SalesforceFieldPermission.none:void 0}addField(field,access){const existing=this.fields.find((c=>util_1.stringEquals(c.field,field)));existing?(existing.editable="editable"==access,existing.readable="editable"==access||"readable"==access):(this.profileModel.fieldPermissions.push({editable:"editable"==access,field,readable:"editable"==access||"readable"==access}),__classPrivateFieldSet(this,_SalesforceProfile_hasChanges,!0,"f"))}removeField(name){this.removeItem(this.profileModel.fieldPermissions,(c=>c.field==name))}hasPage(name){return this.pages.some((c=>c.apexPage==name))}addPage(name,enabled){const existing=this.pages.find((c=>c.apexPage==name));existing?existing.enabled=enabled:(this.profileModel.pageAccess.push({apexPage:name,enabled}),__classPrivateFieldSet(this,_SalesforceProfile_hasChanges,!0,"f"))}removePage(name){this.removeItem(this.profileModel.pageAccess,(c=>c.apexPage==name))}hasClass(name){var _a;return Array.isArray(this.classes)&&(null===(_a=this.classes)||void 0===_a?void 0:_a.some((c=>(null==c?void 0:c.apexClass)==name)))}getClassAccess(name){const existing=this.classes.find((c=>c.apexClass==name));return existing&&existing.enabled}addClass(name,enabled){const existing=this.classes.find((c=>c.apexClass==name));existing?existing.enabled=enabled:(this.profileModel.classAccesses.push({apexClass:name,enabled}),__classPrivateFieldSet(this,_SalesforceProfile_hasChanges,!0,"f"))}removeClass(name){this.removeItem(this.profileModel.classAccesses,(c=>c.apexClass==name))}toXml(){const xmlBuilder=new xml2js.Builder({xmldec:{version:"1.0",encoding:"UTF-8"},renderOpts:{pretty:!0,indent:" ".repeat(4),newline:"\n"}}),sortedProfileModel=Object.entries(this.profileModel).sort((([a,p1],[b,p2])=>Array.isArray(p1)==Array.isArray(p2)?a.localeCompare(b,"en"):Array.isArray(p1)?1:-1)).reduce(((obj,[key,value])=>Object.assign(obj,{[key]:value})),{$:{xmlns:"http://soap.sforce.com/2006/04/metadata"}});return xmlBuilder.buildObject({Profile:sortedProfileModel})}removeItem(array,predicate){const indexOf=array.findIndex(predicate);return indexOf>=0&&(array.splice(indexOf,1),__classPrivateFieldSet(this,_SalesforceProfile_hasChanges,!0,"f"),this.removeItem(array,predicate))}trackChanges(obj){return obj?new Proxy(obj,__classPrivateFieldGet(this,_SalesforceProfile_changeTrackHandler,"f")):obj}},_SalesforceProfile_hasChanges=new WeakMap,_SalesforceProfile_changeTrackHandler=new WeakMap},"./src/lib/salesforce/salesforceSchemaService.ts":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0});const core_1=__webpack_require__("./packages/core/lib/index.js"),util_1=__webpack_require__("./packages/util/lib/index.js"),salesforceService_1=__webpack_require__("./src/lib/salesforce/salesforceService.ts");let SalesforceSchemaService=class SalesforceSchemaService{constructor(connectionProvider){this.connectionProvider=connectionProvider}async describeSObjects(){const con=await this.connectionProvider.getJsForceConnection(),{sobjects}=await con.describeGlobal();return sobjects}async describeCustomMetadataObjects(){const con=await this.connectionProvider.getJsForceConnection();return(await con.metadata.list({type:"CustomMetadata"})).map((cmp=>cmp.fullName))}async describeSObject(type,throwWhenNotFound=!0){try{return await this.describeSObjectCached(type)}catch(err){if(throwWhenNotFound)throw Error(`No such object with name ${type} exists in this Salesforce instance`)}}async describeSObjectById(id){if(!util_1.isSalesforceId(id))throw Error(`Invalid Salesfoce id: ${id}`);for(const obj of await this.describeSObjects())if(obj.keyPrefix&&id.startsWith(obj.keyPrefix))return this.describeSObject(obj.name);throw Error(`No object found matching the key prefix specified: ${id}`)}async describeSObjectCached(type){const con=await this.connectionProvider.getJsForceConnection(),timer=new util_1.Timer;try{return await con.describe(type)}finally{this.logger.verbose(`Described ${type} [${timer.stop()}]`)}}async describeSObjectField(type,fieldName,throwWhenNotFound=!0){var _a;return null===(_a=await this.describeSObjectFieldPath(type,fieldName,throwWhenNotFound))||void 0===_a?void 0:_a.slice(-1).pop()}async describeSObjectFieldPath(type,fieldPath,throwWhenNotFound=!0){var _a;const resolved=new Array;for(const fieldName of fieldPath.split(".")){const result=await this.describeSObject(type,throwWhenNotFound),normalizedFieldName=util_1.removeNamespacePrefix(fieldName.toLowerCase()),field=null==result?void 0:result.fields.find((field=>[field.name,field.relationshipName].some((name=>name&&util_1.removeNamespacePrefix(name.toLowerCase())==normalizedFieldName))));if(!field){if(throwWhenNotFound)throw new Error(`No such field with name ${fieldName} on SObject ${type}`);return}(null===(_a=field.referenceTo)||void 0===_a?void 0:_a.length)&&(type=field.referenceTo[0]),resolved.push(field)}return resolved}async getSObjectFields(type){return(await this.describeSObject(type)).fields}async sObjectHasField(type,fieldName){return!!this.describeSObjectField(type,fieldName,!1)}async sObjectGetFieldType(type,fieldName,throwWhenNotFound=!0){var _a;return null===(_a=await this.describeSObjectField(type,fieldName,throwWhenNotFound))||void 0===_a?void 0:_a.type}async toSalesforceField(type,path){const salesforcePath=[],pathSplit=path.split(".");for(let i=0;i<pathSplit.length;i++){const propertyName=pathSplit[i],normalizedPropertyName=util_1.normalizeSalesforceName(propertyName),field=(await this.getSObjectFields(type)).find((field=>util_1.normalizeSalesforceName(field.name)===normalizedPropertyName||field.relationshipName&&util_1.normalizeSalesforceName(field.relationshipName)==normalizedPropertyName));if(!field)throw new Error(`Unable to resolve salesforce field path; no such salesforce field: ${type}.${propertyName}`);const isLastField=i==pathSplit.length-1;if("reference"!=field.type||isLastField){if(!isLastField)throw new Error(`Unable to resolve salesforce full field path; unknown property ${propertyName} on type ${type} is not a reference field`);salesforcePath.push(field.name)}else{if(!field.referenceTo)throw new Error(`Reference type information not available for field ${field.name}`);salesforcePath.push(field.relationshipName),type=field.referenceTo[0]}}return salesforcePath.join(".")}};__decorate([core_1.injectable.property,__metadata("design:typeinfo",{type:()=>core_1.Logger})],SalesforceSchemaService.prototype,"logger",void 0),__decorate([util_1.cache(-1),__metadata("design:typeinfo",{type:()=>Function,paramTypes:()=>[],returnType:()=>Promise})],SalesforceSchemaService.prototype,"describeSObjects",null),__decorate([util_1.cache(-1),__metadata("design:typeinfo",{type:()=>Function,paramTypes:()=>[],returnType:()=>Promise})],SalesforceSchemaService.prototype,"describeCustomMetadataObjects",null),__decorate([util_1.cache(-1),__metadata("design:typeinfo",{type:()=>Function,paramTypes:()=>[String],returnType:()=>Promise})],SalesforceSchemaService.prototype,"describeSObjectCached",null),__decorate([util_1.cache(-1),__metadata("design:typeinfo",{type:()=>Function,paramTypes:()=>[String,String,Boolean],returnType:()=>Promise})],SalesforceSchemaService.prototype,"describeSObjectField",null),__decorate([util_1.cache(-1),__metadata("design:typeinfo",{type:()=>Function,paramTypes:()=>[String,String,Boolean],returnType:()=>Promise})],SalesforceSchemaService.prototype,"describeSObjectFieldPath",null),SalesforceSchemaService=__decorate([core_1.injectable.singleton(),__metadata("design:typeinfo",{paramTypes:()=>[salesforceService_1.default]})],SalesforceSchemaService),exports.default=SalesforceSchemaService},"./src/lib/salesforce/salesforceService.ts":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0});const constants=__webpack_require__("./src/constants.ts"),axios_1=__webpack_require__("./node_modules/axios/index.js"),xml2js=__webpack_require__("./node_modules/xml2js/lib/xml2js.js"),core_1=__webpack_require__("./packages/core/lib/index.js"),jsForceConnectionProvider_1=__webpack_require__("./src/lib/salesforce/connection/jsForceConnectionProvider.ts"),util_1=__webpack_require__("./packages/util/lib/index.js"),processors_1=__webpack_require__("./node_modules/xml2js/lib/processors.js"),vlocityNamespaceService_1=__webpack_require__("./src/lib/vlocity/vlocityNamespaceService.ts"),queryService_1=__webpack_require__("./src/lib/salesforce/queryService.ts"),salesforceDeployService_1=__webpack_require__("./src/lib/salesforce/salesforceDeployService.ts"),salesforceLookupService_1=__webpack_require__("./src/lib/salesforce/salesforceLookupService.ts"),salesforceSchemaService_1=__webpack_require__("./src/lib/salesforce/salesforceSchemaService.ts"),developerLog_1=__webpack_require__("./src/lib/salesforce/developerLog.ts"),recordBatch_1=__webpack_require__("./src/lib/salesforce/recordBatch.ts"),deploymentPackageBuilder_1=__webpack_require__("./src/lib/salesforce/deploymentPackageBuilder.ts"),metadataRegistry_1=__webpack_require__("./src/lib/salesforce/metadataRegistry.ts"),salesforceProfile_1=__webpack_require__("./src/lib/salesforce/salesforceProfile.ts"),vscodeFileSystemAdapter_1=__webpack_require__("./src/lib/fs/vscodeFileSystemAdapter.ts");class SoapRequest{constructor(method,namespace,debuggingHeader={}){this.method=method,this.namespace=namespace,this.debuggingHeader=debuggingHeader}toXml(requestBody,sessionId){const soapRequestObject={"soap:Envelope":{$:{"xmlns:soap":"http://schemas.xmlsoap.org/soap/envelope/",xmlns:this.namespace},"soap:Header":{CallOptions:{client:constants.API_CLIENT_NAME},DebuggingHeader:{categories:Object.entries(this.debuggingHeader).map((([category,level])=>({category,level})))},SessionHeader:{sessionId}},"soap:Body":{[this.method]:requestBody}}};return new xml2js.Builder(constants.MD_XML_OPTIONS).buildObject(soapRequestObject)}}let SalesforceService=class SalesforceService{constructor(connectionProvider,namespaceService,queryService,logger,fs){this.connectionProvider=connectionProvider,this.namespaceService=namespaceService,this.queryService=queryService,this.logger=logger,this.fs=fs,this.fs=new vscodeFileSystemAdapter_1.VSCodeFileSystemAdapter(fs)}async isProductionOrg(){return!(await this.getOrganizationDetails()).isSandbox}getJsForceConnection(){return this.connectionProvider.getJsForceConnection()}async isPackageInstalled(packageName){return void 0!==await this.getInstalledPackageDetails(packageName)}async getPageUrl(page,ops){const con=await this.getJsForceConnection();let relativeUrl=page.replace(/^\/+/,"");if(relativeUrl.startsWith("apex/")){const state={componentDef:"one:alohaPage",attributes:{address:`${con.instanceUrl}/${relativeUrl}`},state:{}};relativeUrl=`one/one.app#${Buffer.from(JSON.stringify(state)).toString("base64")}`}(null==ops?void 0:ops.useFrontdoor)&&(relativeUrl=`secur/frontdoor.jsp?sid=${encodeURIComponent(con.accessToken)}&retURL=${encodeURIComponent(relativeUrl)}`);const urlNamespace=(null==ops?void 0:ops.namespacePrefix)?`--${ops.namespacePrefix.replace(/_/i,"-")}`:"";let url=con.instanceUrl.replace(/(http(s|):\/\/)([^.]+)(.*)/i,`$1$3${urlNamespace}$4/${relativeUrl}`);return relativeUrl.startsWith("lightning/")&&url.includes(".my.")&&(url=url.replace(/\.my\.salesforce\.com/i,".lightning.force.com")),url}async getInstalledPackageNamespace(packageName){const installedPackage=await this.getInstalledPackageDetails(packageName);if(!installedPackage)throw new Error(`Package with name ${packageName} is not installed on your Salesforce organization`);return installedPackage.namespacePrefix}async getInstalledPackageDetails(packageName){return(await this.getInstalledPackages()).find((packageInfo=>"string"==typeof packageName?packageName==packageInfo.fullName:packageName.test(packageInfo.fullName)))}async getInstalledPackages(){return(await this.getJsForceConnection()).metadata.list({type:"InstalledPackage"})}async getOrganizationDetails(){return(await this.query("SELECT Id, Name, PrimaryContact, IsSandbox, InstanceName, OrganizationType, NamespacePrefix FROM Organization"))[0]}async query(query,useCache){return this.queryService.query(this.namespaceService.updateNamespace(query),useCache)}async lookup(type,filter,lookupFields,limit,useCache){return this.lookupService.lookup(this.namespaceService.updateNamespace(type),filter,lookupFields,limit,useCache)}async*insert(type,records,cancelToken){const batch=new recordBatch_1.default(this.schema);for(const record of records)batch.addInsert(type,record.values,record.ref);yield*batch.execute(await this.getJsForceConnection(),void 0,cancelToken)}async*update(type,records,cancelToken){const batch=new recordBatch_1.default(this.schema,{useBulkApi:!1,chunkSize:100});for(const record of records)batch.addUpdate(type,record,record.id,record.id);yield*batch.execute(await this.getJsForceConnection(),void 0,cancelToken)}async soapToolingRequest(methodName,request,debuggingHeader){var _a,_b,_c,_d;const connection=await this.getJsForceConnection(),soapRequest=new SoapRequest(methodName,"http://soap.sforce.com/2006/08/apex",debuggingHeader),endpoint=`${connection.instanceUrl}/services/Soap/s/${connection.version}`,result=await axios_1.default({method:"POST",url:endpoint,headers:{SOAPAction:'""',"Content-Type":"text/xml;charset=UTF-8"},transformResponse:data=>xml2js.parseStringPromise(data,{tagNameProcessors:[processors_1.stripPrefix],attrNameProcessors:[processors_1.stripPrefix],valueProcessors:[value=>/^[0-9]+(\.[0-9]+){0,1}$/i.test(value)?parseFloat(value):/^true|false$/i.test(value)?0===value.localeCompare("true",void 0,{sensitivity:"base"}):value],explicitArray:!1}),data:soapRequest.toXml(request,connection.accessToken)}),response=await result.data;if(null===(_a=response.Envelope.Body)||void 0===_a?void 0:_a.Fault)throw new Error(`SOAP API Fault: ${null===(_b=response.Envelope.Body.Fault)||void 0===_b?void 0:_b.faultstring}`);return{body:response.Envelope.Body,debugLog:null===(_d=null===(_c=response.Envelope)||void 0===_c?void 0:_c.Header)||void 0===_d?void 0:_d.DebuggingInfo.debugLog}}async executeAnonymous(apex,logLevels={}){const validDebugCategories=["Db","Workflow","Validation","Callout","Apex_code","Apex_profiling","Visualforce","System","NBA","Wave"];for(const category of validDebugCategories)logLevels[category]||(logLevels[category]="None");const response=await this.soapToolingRequest("executeAnonymous",{String:apex},logLevels);return{...response.body.executeAnonymousResponse.result,debugLog:response.debugLog}}async getMetadataSetupUrl(file){var _a,_b;const metadataInfo=await this.getMetadataInfo(file);(null==metadataInfo?void 0:metadataInfo.fullName.includes("__mdt"))&&(metadataInfo.type=metadataInfo.type.replace("Custom","CustomMetadata"));const metadataUrlFormat=metadataInfo&&this.metadataRegistry.getUrlFormat(metadataInfo.type);if(!metadataInfo||!metadataUrlFormat)throw new Error(`Unable to resolve metadata type (is this a valid Salesforce metadata?) for: ${file}`);const objectData={nameField:metadataUrlFormat.nameField,namespace:null!==(_a=metadataInfo.namespace)&&void 0!==_a?_a:"",type:metadataInfo.type,fullName:metadataInfo.fullName,name:metadataInfo.name,metadata:metadataInfo.metadata};if(metadataUrlFormat.query){const connection=await this.getJsForceConnection(),queryFormat=util_1.evalTemplate(metadataUrlFormat.query,objectData),queryService="tooling"==metadataUrlFormat.strategy?connection.tooling:connection,{records}=await queryService.query(queryFormat);if(!records.length)throw new Error(`Unable to find the metadata record ${metadataInfo.fullName} in the current Salesforce org`);if(1==records.length)Object.assign(objectData,{id:records[0].Id});else{const nameFieldPath=metadataUrlFormat.nameField.split("."),filteredRecord=records.find((r=>nameFieldPath.reduce(((obj,p)=>obj&&obj[p]),r)==metadataInfo.fullName));Object.assign(objectData,{id:(null!=filteredRecord?filteredRecord:records[0]).Id})}Object.assign(objectData,{id:null===(_b=records[0])||void 0===_b?void 0:_b.Id})}return util_1.evalTemplate(metadataUrlFormat.url,objectData)}async getMetadataInfo(input){const files=(Array.isArray(input)?input:[input]).map((filePath=>"string"==typeof filePath?filePath:filePath.fsPath)),sfPackage=(await new deploymentPackageBuilder_1.SalesforcePackageBuilder(deploymentPackageBuilder_1.SalesforcePackageType.retrieve).addFiles(files)).getPackage(),infos=await util_1.mapAsyncParallel(files,(async file=>{var _a,_b;const info=sfPackage.getSourceFileInfo(file);if(info){const metadataInfoFile=null!==(_b=null===(_a=[...sfPackage.sourceFiles()].find((f=>{var _a;return null===(_a=f.fsPath)||void 0===_a?void 0:_a.endsWith(".xml")})))||void 0===_a?void 0:_a.fsPath)&&void 0!==_b?_b:file,metadata=metadataInfoFile?util_1.XML.parse(await this.fs.readFileAsString(metadataInfoFile),{ignoreAttributes:!0}):void 0;return{...this.getNameInfo(info),type:info.componentType,fullName:info.name,metadata:metadata&&Object.values(metadata).pop()}}}));return Array.isArray(input)?infos:infos.pop()}getNameInfo(metadataInfo){let name=metadataInfo.name;"Layout"==metadataInfo.componentType&&(name=util_1.substringAfter(metadataInfo.name,"-"));const nameParts=name.split("__");return nameParts.length>2?{namespace:nameParts.shift(),name:nameParts.join("__")}:{name}}async loadProfilesFromDisk(){const profilesFiles=await this.fs.findFiles(["**/*.profile-meta.xml","**/*.profile"]),profiles=[];for(const file of profilesFiles){const name=decodeURIComponent(util_1.fileName(file).split(".").shift()),data=this.fs.readFileAsString(file,"utf-8");try{profiles.push({file,profile:await new salesforceProfile_1.SalesforceProfile(name).loadProfile(await data)})}catch(err){this.logger.error(`Unable load profile ${name} due a parsing of file system error`,err)}}return profiles}async compileClasses(apexClassBody){return{...(await this.soapToolingRequest("compileClasses",{scripts:apexClassBody})).body.compileClassesResponse}}async getApiVersion(){return(await this.getJsForceConnection()).version}async getApiVersions(count=10){const connection=await this.getJsForceConnection(),version=parseFloat(connection.version),versions=[];for(let i=0;i<count;i++)versions.push((version-i).toFixed(1));return versions}async getDeveloperLogs(from,currentUserOnly=!1){const filters=new Array;if(from&&filters.push(`SystemModstamp >= ${from.toISOString()}`),currentUserOnly){const currentUser=await this.getConnectedUserInfo();filters.push(`LogUserId = '${currentUser.id}'`)}const toolingQuery=`Select ${["Id","Application","DurationMilliseconds","Location","LogLength","LogUser.Name","Operation","Request","StartTime","Status"].join(",")} From ApexLog ${filters.length?`where ${filters.join(" and ")}`:""}`;return(await this.query(toolingQuery)).map((entry=>new developerLog_1.DeveloperLog(entry,this)))}async clearDeveloperLogs(token){const[{logCount}]=await this.query("Select count(Id) logCount From ApexLog");if(0==logCount)return 0;const connection=await this.getJsForceConnection();let logsDeleted=0;for(;1!=(null==token?void 0:token.isCancellationRequested);){const ids=(await this.query("Select Id From ApexLog limit 100")).map((record=>record.id));if(0==ids.length)break;this.logger.info(`Deleting ${logsDeleted+ids.length}/${logCount} debug logs from the server...`),await connection.tooling.delete("ApexLog",ids),logsDeleted+=ids.length}return logsDeleted}async getDebugLevels(){const toolingQuery=`Select ${["Id","DeveloperName","ApexCode","ApexProfiling","Callout","Database","System","Validation","Visualforce","Workflow"].join(",")} From DebugLevel`;return await this.query(toolingQuery)}async createDebugLevel(name,debugLevel){const debugLevelObject={DeveloperName:name,MasterLabel:name},normalizedDebugLevels=new Map(Object.keys(debugLevel).map((key=>[key.toLowerCase(),debugLevel[key]]))),traceFlagFields=["ApexCode","ApexProfiling","Callout","Database","System","Validation","Visualforce","Workflow"];for(const field of traceFlagFields)debugLevelObject[field]=normalizedDebugLevels.get(field.toLocaleLowerCase());debugLevel.developerName=name;const connection=await this.getJsForceConnection(),existing=await connection.tooling.query(`Select Id From DebugLevel where DeveloperName = '${name}' limit 1`);if(existing.totalSize>0&&(debugLevelObject.Id=existing.records[0].Id,debugLevel.id=debugLevelObject.Id),debugLevelObject.Id)await connection.tooling.update("DebugLevel",debugLevelObject);else{const result=await connection.tooling.create("DebugLevel",debugLevelObject);debugLevel.id=result.id}return debugLevel}async setTraceFlags(debugLevel,type,trackedEntityId,durationInSeconds=3600){const traceFlag={DebugLevelId:debugLevel.id,LogType:type,TracedEntityId:trackedEntityId,StartDate:new Date,ExpirationDate:new Date(Date.now()+1e3*durationInSeconds)};"USER_DEBUG"!==type||trackedEntityId||(traceFlag.TracedEntityId=(await this.getConnectedUserInfo()).id);const connection=await this.getJsForceConnection();return(await connection.tooling.create("TraceFlag",traceFlag)).id}async extendTraceFlags(traceFlagsId,durationInSeconds=3600){const traceFlag={Id:traceFlagsId,StartDate:new Date,ExpirationDate:new Date(Date.now()+1e3*durationInSeconds)},connection=await this.getJsForceConnection();await connection.tooling.update("TraceFlag",traceFlag)}async clearTraceFlags(traceFlagsId){const connection=await this.getJsForceConnection();try{await connection.tooling.delete("TraceFlag",[traceFlagsId])}catch(e){this.logger.error(`TraceFlag with id ${traceFlagsId} could not be cleared.`)}}async clearAllTraceFlags(){return this.deleteToolingRecords("Select Id From TraceFlag")}async clearUserTraceFlags(){const userId=(await this.getConnectedUserInfo()).id;return this.deleteToolingRecords(`Select Id From TraceFlag where TracedEntityId = '${userId}'`)}clearApexTestResults(){return this.deleteToolingRecords("Select Id From ApexTestResult")}async deleteToolingRecords(query){var _a,_b;const objectType=null===(_b=null===(_a=query.match(/from (?<objectType>[a-z_0-9]+)/i))||void 0===_a?void 0:_a.groups)||void 0===_b?void 0:_b.objectType;if(!objectType)throw new Error(`No object type found in query: ${query}`);const connection=await this.getJsForceConnection();let result=await connection.tooling.query(query);do{const ids=result.records.map((rec=>rec.Id));if(ids.length>0&&await connection.tooling.delete(`${objectType}`,ids),!result.nextRecordsUrl)break;result=await connection.tooling.queryMore(result.nextRecordsUrl)}while(result.nextRecordsUrl)}async getConnectedUserInfo(){const connection=await this.getJsForceConnection(),identity=await connection.identity();return{id:identity.user_id,username:identity.username,type:identity.user_type}}getMetadataTypes(){return this.metadataRegistry.getMetadataTypes()}getMetadataType(type){return this.metadataRegistry.getMetadataType(type)}async requestApexRemote(page,action,method,data){var _a,_b;const connection=await this.getJsForceConnection(),pageNamespace=null===(_a=this.namespaceService.updateNamespace(page).match(/(^[a-z_]+)__(?!c$)/i))||void 0===_a?void 0:_a[1],body={action:this.namespaceService.updateNamespace(action),method:this.namespaceService.updateNamespace(method),data,type:"rpc",tid:1,ctx:{csrf:"1",vid:"1",ns:null!=pageNamespace?pageNamespace:"",ver:parseInt(connection.version,10)}},request={method:"POST",url:`${connection.instanceUrl}/apexremote`,body:JSON.stringify(body),headers:{"content-type":"application/json",Referer:`${connection.instanceUrl}/apex/${this.namespaceService.updateNamespace(page)}`}},timer=new util_1.Timer;try{const result=null===(_b=await connection.request(request))||void 0===_b?void 0:_b[0];if(!result)throw new Error("No response from Salesforce");if(200!=(null==result?void 0:result.statusCode)){if(result.message)throw new Error(result.message);throw new Error(`Received unexpected ${null==result?void 0:result.statusCode} status code back from Salesforce`)}return result}finally{this.logger.verbose(`APEX remote request ${page}->${method} [${timer.stop()}]`)}}};__decorate([core_1.injectable.property,__metadata("design:typeinfo",{type:()=>metadataRegistry_1.MetadataRegistry})],SalesforceService.prototype,"metadataRegistry",void 0),__decorate([core_1.injectable.property,__metadata("design:typeinfo",{type:()=>salesforceSchemaService_1.default})],SalesforceService.prototype,"schema",void 0),__decorate([core_1.injectable.property,__metadata("design:typeinfo",{type:()=>salesforceLookupService_1.default})],SalesforceService.prototype,"lookupService",void 0),__decorate([core_1.injectable.property,__metadata("design:typeinfo",{type:()=>salesforceDeployService_1.SalesforceDeployService})],SalesforceService.prototype,"deploy",void 0),__decorate([util_1.cache(-1),__metadata("design:typeinfo",{type:()=>Function,paramTypes:()=>[Object],returnType:()=>Promise})],SalesforceService.prototype,"getInstalledPackageNamespace",null),__decorate([util_1.cache(-1),__metadata("design:typeinfo",{type:()=>Function,paramTypes:()=>[Object],returnType:()=>Promise})],SalesforceService.prototype,"getInstalledPackageDetails",null),__decorate([util_1.cache(-1),__metadata("design:typeinfo",{type:()=>Function,paramTypes:()=>[],returnType:()=>Promise})],SalesforceService.prototype,"getInstalledPackages",null),__decorate([util_1.cache(-1),__metadata("design:typeinfo",{type:()=>Function,paramTypes:()=>[],returnType:()=>Promise})],SalesforceService.prototype,"getOrganizationDetails",null),__decorate([util_1.cache(),__metadata("design:typeinfo",{type:()=>Function,paramTypes:()=>[],returnType:()=>Promise})],SalesforceService.prototype,"getConnectedUserInfo",null),SalesforceService=__decorate([core_1.injectable(),__metadata("design:typeinfo",{paramTypes:()=>[jsForceConnectionProvider_1.default,vlocityNamespaceService_1.VlocityNamespaceService,queryService_1.default,core_1.Logger,core_1.FileSystem]})],SalesforceService),exports.default=SalesforceService},"./src/lib/sass/compiler.ts":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SassCompiler=void 0;exports.SassCompiler=class SassCompiler{}},"./src/lib/sass/forked/compiler.ts":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ForkedSassCompiler=void 0;const child_process_1=__webpack_require__("child_process"),path=__webpack_require__("path"),core_1=__webpack_require__("./packages/core/lib/index.js"),compiler_1=__webpack_require__("./src/lib/sass/compiler.ts"),uuid=__webpack_require__("./node_modules/uuid/dist/esm-node/index.js");let ForkedSassCompiler=class ForkedSassCompiler{constructor(logger){this.logger=logger,this.lastMessageTime=0,this.maxIdleTime=60,this.pendingRequests=new Map}compile(sass,options){return new Promise(((resolve,reject)=>{const payload={data:sass,options},message={id:uuid.v4(),type:"compile",payload};this.getCompilerProcess().send(message),this.pendingRequests.set(message.id,{resolve,reject})}))}handleCompilerMessages(msg){switch(this.lastMessageTime=Date.now(),msg.type){case"log":return void this.logger.log(msg.payload)}const pendingRequest=msg.id&&this.pendingRequests.get(msg.id);if(pendingRequest)switch(this.pendingRequests.delete(msg.id),msg.type){case"error":this.logger.debug("Error during SASS compilation"),pendingRequest.reject(msg.payload);break;case"result":this.logger.debug("SASS compiled to CSS without errors"),pendingRequest.resolve(msg.payload);break}else this.logger.error("Received error for unknown request",msg)}handleCompilerExit(code){code&&this.logger.warn(`Sass Compiler exited with non-zero exit code (${code})`);for(const request of this.pendingRequests.values())request.reject("Sass Compiler exited unexpectedly");this.pendingRequests.clear(),delete this.sassCompiler,clearInterval(this.compilerIdleWatch)}getCompilerProcess(){if(this.sassCompiler&&this.sassCompiler.connected)return this.sassCompiler;this.logger.verbose("Starting new SASS compiler");const sassCompilerPath=path.join(__dirname,"sass-compiler.js");return this.sassCompiler=child_process_1.fork(sassCompilerPath),this.sassCompiler.on("message",this.handleCompilerMessages.bind(this)),this.sassCompiler.on("close",this.handleCompilerExit.bind(this)),this.compilerIdleWatch=setTimeout((()=>{var _a;this.sassCompiler&&this.lastMessageTime+this.maxIdleTime<Date.now()&&(this.logger.verbose(`Killing SASS compiler; no requests received for ${this.maxIdleTime}s`),null===(_a=this.sassCompiler)||void 0===_a||_a.kill())}),1e3*this.maxIdleTime),this.sassCompiler}};ForkedSassCompiler=__decorate([core_1.injectable({provides:compiler_1.SassCompiler,lifecycle:core_1.LifecyclePolicy.singleton}),__metadata("design:typeinfo",{paramTypes:()=>[core_1.Logger]})],ForkedSassCompiler),exports.ForkedSassCompiler=ForkedSassCompiler},"./src/lib/sass/index.ts":function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__("./src/lib/sass/compiler.ts"),exports),__exportStar(__webpack_require__("./src/lib/sass/forked/compiler.ts"),exports)},"./src/lib/vlocity/datapack.ts":function(__unused_webpack_module,exports,__webpack_require__){var _VlocityDatapack_dataProxy,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)},__classPrivateFieldSet=this&&this.__classPrivateFieldSet||function(receiver,state,value,kind,f){if("m"===kind)throw new TypeError("Private method is not writable");if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===kind?f.call(receiver,value):f?f.value=value:state.set(receiver,value),value};Object.defineProperty(exports,"__esModule",{value:!0}),exports.VlocityDatapack=void 0;const path_1=__webpack_require__("path"),util_1=__webpack_require__("./packages/util/lib/index.js"),uuid_1=__webpack_require__("./node_modules/uuid/dist/esm-node/index.js"),core_1=__webpack_require__("./packages/core/lib/index.js");class VlocityDatapack{constructor(headerFile,datapackType,key,projectFolder,data){if(this.headerFile=headerFile,this.datapackType=datapackType,this.key=key,this.projectFolder=projectFolder,_VlocityDatapack_dataProxy.set(this,void 0),Buffer.isBuffer(data)&&(data=data.toString()),"string"==typeof data)try{this.data=JSON.parse(data)}catch(err){core_1.LogManager.get(VlocityDatapack).error(`Unable to parse datapack JSON: ${err.message||err}`)}else this.data="object"==typeof data&&null!=data?data:{};return new Proxy(this,{get:(target,name)=>target.getProperty(name),set:(target,name,value)=>target.setProperty(name,value)})}get hasGlobalKey(){return void 0!==this.globalKey&&null!==this.globalKey}get globalKey(){return this.data["%vlocity_namespace%__GlobalKey__c"]}get name(){return this.data.Name}get sobjectType(){return this.data.VlocityRecordSObjectType}get sourceKey(){return this.data.VlocityRecordSourceKey}get manifestEntry(){return{key:this.key,datapackType:this.datapackType}}get datapackFolder(){return path_1.dirname(this.headerFile)}rename(name){const currentName=this.name;this.sourceKey.endsWith(currentName)&&this.updateSourceKey(this.sourceKey.replace(currentName,name));for(const[property,value,owner]of this.getProperties())"string"==typeof value&&(value.endsWith(currentName)||value.startsWith(currentName))&&(owner[property]=value.replace(currentName,name))}updateSourceKey(newKey){const currentSourceKey=this.sourceKey;for(const[property,value,owner]of this.getProperties()){if("string"!=typeof value)return;/^Vlocity(Matching|)RecordSourceKey$/i.test(property)&&value.endsWith(currentSourceKey)&&(owner[property]=newKey)}}regenerateGlobalKey(){this.updateGlobalKey(this.data,uuid_1.v4());for(const child of this.getChildObjects())"SObject"==child.VlocityDataPackType&&child["%vlocity_namespace%__GlobalKey__c"]&&this.updateGlobalKey(child,uuid_1.v4())}updateGlobalKey(object,newGlobalKey){const oldGlobalKey=object["%vlocity_namespace%__GlobalKey__c"];if(object["%vlocity_namespace%__GlobalKey__c"]=newGlobalKey,"string"==typeof oldGlobalKey&&oldGlobalKey.trim())for(const[property,value,owner]of this.getProperties())"string"==typeof value&&value.endsWith(oldGlobalKey)&&(owner[property]=value.replace(oldGlobalKey,newGlobalKey));return object}*getSourceKeys(){for(const child of this.getChildObjects([this.data]))child.VlocityRecordSourceKey&&(yield{VlocityRecordSourceKey:child.VlocityRecordSourceKey,VlocityRecordSObjectType:child.VlocityRecordSObjectType})}*getReferences(){for(const child of this.getChildObjects([this.data])){const type=child.VlocityDataPackType;if(type&&/^Vlocity(LookupMatching|Matching)KeyObject$/i.test(type)){if("RecordType"==child.VlocityRecordSObjectType)continue;yield child}}}getExternalReferences(){const externalReferences=new Map,sourceKeys=new Set([...this.getSourceKeys()].map((sourceKey=>sourceKey.VlocityRecordSourceKey)));for(const reference of this.getReferences()){const referenceKey=reference.VlocityLookupRecordSourceKey||reference.VlocityMatchingRecordSourceKey;sourceKeys.has(referenceKey)||externalReferences.set(referenceKey,reference)}return externalReferences.values()}*getProperties(object=this.data){for(const[key,value]of Object.entries(object))if(Array.isArray(value))for(const arrayValue of value)"object"==typeof arrayValue?yield*this.getProperties(arrayValue):yield[key,arrayValue,value];else"object"==typeof value?yield*this.getProperties(value):yield[key,value,object]}*getChildObjects(object=this.data){for(const value of Object.values(object))"object"==typeof value&&null!=value&&(Array.isArray(value)||(yield value),yield*this.getChildObjects(value))}forEachChildObject(object,executer){return Object.keys(object||{}).forEach((key=>{Array.isArray(object[key])?this.forEachChildObject(object[key],executer):"object"==typeof object[key]&&(executer(object[key]),this.forEachChildObject(object[key],executer))}))}getDataProxy(){if(!__classPrivateFieldGet(this,_VlocityDatapack_dataProxy,"f")){const nameTransformer=name=>util_1.removeNamespacePrefix(name).replace("_","").toLowerCase(),getPropertyKey=(target,name)=>{if("string"!=typeof name&&target.hasOwnProperty(name))return name;const normalizedName=nameTransformer(name.toString());return Object.keys(target).find((key=>nameTransformer(key)==normalizedName))};__classPrivateFieldSet(this,_VlocityDatapack_dataProxy,new Proxy(this.data,new util_1.PropertyTransformHandler(getPropertyKey)),"f")}return __classPrivateFieldGet(this,_VlocityDatapack_dataProxy,"f")}getProperty(name){if(null!=name)return name in this&&void 0!==this[name]?this[name]:this.getDataProxy()[name]}setProperty(name,value){return null!=name&&null!=name&&(name in this&&(this[name]=value),this.getDataProxy()[name]=value,!0)}}exports.VlocityDatapack=VlocityDatapack,_VlocityDatapack_dataProxy=new WeakMap},"./src/lib/vlocity/datapackDeployer.ts":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0});const datapack_1=__webpack_require__("./src/lib/vlocity/datapack.ts"),queryService_1=__webpack_require__("./src/lib/salesforce/queryService.ts"),core_1=__webpack_require__("./packages/core/lib/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),util_1=__webpack_require__("./packages/util/lib/index.js"),_constants_1=__webpack_require__("./src/constants.ts"),salesforceSchemaService_1=__webpack_require__("./src/lib/salesforce/salesforceSchemaService.ts"),uuid=__webpack_require__("./node_modules/uuid/dist/esm-node/index.js"),salesforceLookupService_1=__webpack_require__("./src/lib/salesforce/salesforceLookupService.ts"),jsForceConnectionProvider_1=__webpack_require__("./src/lib/salesforce/connection/jsForceConnectionProvider.ts"),recordBatch_1=__webpack_require__("./src/lib/salesforce/recordBatch.ts"),datapackDeployment_1=__webpack_require__("./src/lib/vlocity/datapackDeployment.ts"),datapackDeploymentRecord_1=__webpack_require__("./src/lib/vlocity/datapackDeploymentRecord.ts"),deploymentSpecs_1=__webpack_require__("./src/lib/vlocity/deploymentSpecs/index.ts"),vlocityNamespaceService_1=__webpack_require__("./src/lib/vlocity/vlocityNamespaceService.ts");let VlocityDatapackDeployer=class VlocityDatapackDeployer{constructor(connectionProvider,objectLookupService,namespaceService,schemaService,logger){this.connectionProvider=connectionProvider,this.objectLookupService=objectLookupService,this.namespaceService=namespaceService,this.schemaService=schemaService,this.logger=logger,this.container=core_1.container.new()}async createDeployment(datapacks,options){var _a;this.container.register(new queryService_1.default(this.connectionProvider).setCacheDefault(!0));const deployment=this.container.create(datapackDeployment_1.default,options);deployment.on("afterDeployGroup",(group=>this.afterDeployRecordGroup(group))),deployment.on("beforeDeployGroup",(group=>this.beforeDeployRecordGroup(group))),deployment.on("afterDeployRecord",(records=>this.afterDeployRecord(records,options))),deployment.on("beforeDeployRecord",(records=>this.beforeDeployRecord(records,options)));const timerStart=new util_1.Timer;this.logger.info("Converting datapacks to Salesforce records...");for(const datapack of datapacks){if(null===(_a=null==options?void 0:options.cancellationToken)||void 0===_a?void 0:_a.isCancellationRequested)break;try{await this.runSpecFunction(datapack.datapackType,"preprocess",datapack);const records=await this.toSalesforceRecords(datapack);await this.runSpecFunction(datapack.datapackType,"afterRecordConversion",records),deployment.add(records)}catch(err){this.logger.error(`Error while converting Datapack '${datapack.headerFile}' to records: ${err.message||err}`)}}return this.logger.info(`Converted ${datapacks.length} datapacks to ${deployment.totalRecordCount} records [${timerStart.stop()}]`),deployment}async setVlocityTriggerState(newTriggerState){const timer=new util_1.Timer,connection=await this.connectionProvider.getJsForceConnection(),triggerSetupObject=await this.schemaService.describeSObject(`${_constants_1.NAMESPACE_PLACEHOLDER}__TriggerSetup__c`),triggerOnField=await this.schemaService.describeSObjectField(triggerSetupObject.name,"IsTriggerOn__c"),allTriggerSetup=await this.objectLookupService.lookupSingle(triggerSetupObject.name,{Name:"AllTriggers"},["Id","Name",triggerOnField.name]);allTriggerSetup?allTriggerSetup[triggerOnField.name]!=newTriggerState&&await connection.update(triggerSetupObject.name,{Id:allTriggerSetup.Id,[triggerOnField.name]:newTriggerState}):await connection.insert(triggerSetupObject.name,{Name:"AllTriggers",[triggerOnField.name]:newTriggerState}),this.logger.verbose(`Update CustomSetting ${triggerSetupObject.name}.${triggerOnField.name} to '${newTriggerState}' [${timer.stop()}]`)}async verifyGlobalKeys(records){var _a;const deployedRecordsByType=util_1.groupBy(util_1.Iterable.filter(records,(r=>r.isDeployed)),(r=>r.sobjectType)),recordBatch=new recordBatch_1.default(this.schemaService,{useBulkApi:!1,chunkSize:100});for(const[sobjectType,records]of Object.entries(deployedRecordsByType)){const field=await this.schemaService.describeSObjectField(sobjectType,"GlobalKey__c",!1);if(!field)continue;const recordsById=new Map(records.map((r=>[r.recordId,r]))),results=await this.objectLookupService.lookupById(sobjectType,recordsById.keys(),["GlobalKey__c"],!1);for(const result of results){const datapackGlobalKey=null===(_a=recordsById.get(result.Id))||void 0===_a?void 0:_a.values[field.name];result.GlobalKey__c!==datapackGlobalKey&&recordBatch.add(sobjectType,{Id:result.Id,[field.name]:datapackGlobalKey})}}if(recordBatch.size()>0){this.logger.info(`Updating ${recordBatch.size()} records with mismatching global keys`),await this.setVlocityTriggerState(!1);try{for await(const result of recordBatch.execute(await this.connectionProvider.getJsForceConnection()))result.error&&this.logger.error(`Global key update failed for ${result.recordId} -- ${result.error}`)}finally{await this.setVlocityTriggerState(!0)}}}async runPreprocessors(datapack){const spec=this.getDeploySpec(datapack.datapackType);if(null==spec?void 0:spec.preprocess){const result=spec.preprocess(datapack);await result}}async beforeDeployRecord(datapackRecords,options){(null==options?void 0:options.disableTriggers)&&await this.setVlocityTriggerState(!1)}async afterDeployRecord(datapackRecords,options){(null==options?void 0:options.disableTriggers)&&await this.setVlocityTriggerState(!0),await this.verifyGlobalKeys(datapackRecords)}async beforeDeployRecordGroup(datapackGroups){return this.runSpecEventFunction("beforeDeploy",datapackGroups)}async afterDeployRecordGroup(datapackGroups){return this.runSpecEventFunction("afterDeploy",datapackGroups)}async runSpecEventFunction(type,datapacks){const datapacksByType=util_1.groupBy(util_1.asArray(datapacks),(dp=>dp.datapackType));for(const[datapackType,recordGroups]of Object.entries(datapacksByType))await this.runSpecFunction(datapackType,type,{recordGroups,getDeployedRecords:type=>this.getDeployedRecords(type,recordGroups)})}async runSpecFunction(datapackType,eventType,...args){var _a;const spec=this.getDeploySpec(datapackType);"function"==typeof(null==spec?void 0:spec[eventType])&&await(null===(_a=spec[eventType])||void 0===_a?void 0:_a.apply(spec,args))}getDeploySpec(datapackType){if(deploymentSpecs_1.default[datapackType])return this.container.get(deploymentSpecs_1.default[datapackType],core_1.LifecyclePolicy.singleton)}*getDeployedRecords(type,groups){for(const group of groups){const record=group.getRecordOfType(type);void 0!==(null==record?void 0:record.recordId)&&(yield record)}}async toSalesforceRecords(datapack){var _a,_b;const sobject=await this.schemaService.describeSObject(datapack.sobjectType,!1);if(!sobject)throw new Error(`Datapack ${datapack.sourceKey} is for an SObject type (${datapack.sobjectType}) which does not exist in the target org.`);const sourceKey=null!==(_a=datapack.sourceKey)&&void 0!==_a?_a:`${sobject.name}/${uuid.v4()}`,record=new datapackDeploymentRecord_1.default(datapack.datapackType,sobject.name,sourceKey,datapack.key),records=[record];for(const[key,value]of Object.entries(datapack.data).filter((([key])=>!key.includes(".")))){const field=await this.schemaService.describeSObjectField(sobject.name,key,!1);if(!_constants_1.DATAPACK_RESERVED_FIELDS.includes(key))if("object"==typeof value&&null!==value)for(const item of Array.isArray(value)?value:[value])if("SObject"===item.VlocityDataPackType){const embeddedDatapack=new datapack_1.VlocityDatapack("",datapack.datapackType,datapack.key,"",item),embeddedRecords=await this.toSalesforceRecords(embeddedDatapack);records.push(...embeddedRecords)}else if(null===(_b=item.VlocityDataPackType)||void 0===_b?void 0:_b.endsWith("MatchingKeyObject")){if(!field){this.logger.warn(`Skipping ${key}; no such field on ${sobject.name}`);continue}if("reference"!==field.type&&"string"!==field.type){this.logger.warn(`Skipping ${key}; cannot use lookup on non-string/reference fields`);continue}record.addLookup(field.name,item)}else if(item.VlocityDataPackType)this.logger.warn(`Unsupported datapack type ${item.VlocityDataPackType}`);else{if(!field){this.logger.warn(`Skipping ${key}; no such field on ${sobject.name}`);continue}record.values[field.name]=this.convertValue(value,field)}else{if(!field){this.logger.warn(`Skipping ${key}; no such field on ${sobject.name}`);continue}record.values[field.name]=this.convertValue(value,field)}}return records}convertValue(value,field){if(null==value)return null;switch(field.type){case"boolean":return"string"==typeof value?value?"true"===value.toLowerCase():null:!!value;case"datetime":case"date":{if(!value)return null;const dateFormat={date:"YYYY-MM-DD",datetime:"YYYY-MM-DDTHH:mm:ssZ"},date=moment(value);if(!date.isValid())throw new Error(`Value is not a valid date: ${value}`);return date.format(dateFormat[field.type])}case"percent":case"currency":case"double":case"int":if("string"==typeof value)return value?parseFloat(value):null;if("number"==typeof value)return value;throw new Error(`Value is not a valid number: ${value}`);case"reference":if("string"==typeof value)return value?util_1.isSalesforceId(value):null;throw new Error(`Value is not a valid Salesforce ID: ${value}`);case"base64":return Buffer.from(value).toString("base64");case"string":default:{let stringValue="object"==typeof value?JSON.stringify(value):`${value}`;if(stringValue=this.namespaceService.updateNamespace(stringValue),stringValue.length>field.length)throw new Error(`Value length (${stringValue.length}) surpassed max length of field ${field.name} (max: ${field.length})`);return stringValue}}}};VlocityDatapackDeployer=__decorate([core_1.injectable.transient(),__metadata("design:typeinfo",{paramTypes:()=>[jsForceConnectionProvider_1.default,salesforceLookupService_1.default,vlocityNamespaceService_1.VlocityNamespaceService,salesforceSchemaService_1.default,core_1.Logger]})],VlocityDatapackDeployer),exports.default=VlocityDatapackDeployer},"./src/lib/vlocity/datapackDeployment.ts":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0});const salesforceSchemaService_1=__webpack_require__("./src/lib/salesforce/salesforceSchemaService.ts"),core_1=__webpack_require__("./packages/core/lib/index.js"),jsForceConnectionProvider_1=__webpack_require__("./src/lib/salesforce/connection/jsForceConnectionProvider.ts"),util_1=__webpack_require__("./packages/util/lib/index.js"),recordBatch_1=__webpack_require__("./src/lib/salesforce/recordBatch.ts"),datapackLookupService_1=__webpack_require__("./src/lib/vlocity/datapackLookupService.ts"),datapackDeploymentRecord_1=__webpack_require__("./src/lib/vlocity/datapackDeploymentRecord.ts"),datapackDeploymentRecordGroup_1=__webpack_require__("./src/lib/vlocity/datapackDeploymentRecordGroup.ts"),datapackDeploymentDefaultOptions={useBulkApi:!1,maxRetries:1,chunkSize:100,retryChunkSize:5};let DatapackDeployment=class DatapackDeployment extends util_1.AsyncEventEmitter{constructor(options,connectionProvider,lookupService,schemaService,logger){super(),this.connectionProvider=connectionProvider,this.lookupService=lookupService,this.schemaService=schemaService,this.logger=logger,this.errors=new Array,this.deployed=new Array,this.records=new Map,this.recordGroups=new Map,this.pendingRetry=new Array,this.options={...datapackDeploymentDefaultOptions,...options||{}}}get deployedRecordCount(){return this.deployed.length}get failedRecordCount(){return this.errors.length}get failedRecords(){return this.errors}get deployedRecords(){return this.deployed}get hasErrors(){return this.errors.length>0}get totalRecordCount(){return this.records.size}add(records){for(const record of Array.isArray(records)?records:[records])this.records.set(record.sourceKey,record),util_1.mapGetOrCreate(this.recordGroups,record.datapackKey,(()=>new datapackDeploymentRecordGroup_1.DatapackDeploymentRecordGroup(record.datapackKey))).push(record);return this}async start(cancelToken){const timer=new util_1.Timer;let deployableRecords;for(;deployableRecords=this.getDeployableRecords();)await this.deployRecords(deployableRecords,cancelToken);this.logger.log(`Deployed ${this.deployedRecordCount}/${this.totalRecordCount} records [${timer.stop()}]`)}getMessagesByDatapack(){const messagesByDatapack=new Map;for(const record of this.records.values()){record.isFailed&&record.statusMessage&&util_1.arrayMapUnshift(messagesByDatapack,record.datapackKey,{record,type:"error",message:record.statusMessage});for(const message of record.warnings)util_1.arrayMapPush(messagesByDatapack,record.datapackKey,{record,type:"warn",message})}return messagesByDatapack}getFailedRecords(datapackKey){return this.errors.filter((r=>r.datapackKey==datapackKey))}getRecordStatus(sourceKey){var _a;return null===(_a=this.records.get(sourceKey))||void 0===_a?void 0:_a.status}getDeployableRecords(){const records=new Map;if(this.pendingRetry.length>0)return this.getRetryableRecords(this.options.retryChunkSize);for(const record of this.records.values())record.isPending&&!this.hasPendingDependencies(record)&&records.set(record.sourceKey,record);return records.size>0?records:void 0}getRetryableRecords(batchSize){return new Map(this.pendingRetry.splice(0,batchSize).map((record=>[record.sourceKey,record])))}hasPendingDependencies(record){for(const key of record.getDependencySourceKeys()){const dependency=this.records.get(key);if(dependency&&dependency.isPending)return!0}return!1}async resolveDependency(dependency){var _a;const lookupKey=null!==(_a=dependency.VlocityLookupRecordSourceKey)&&void 0!==_a?_a:dependency.VlocityMatchingRecordSourceKey,deployRecord=this.records.get(lookupKey);if(null==deployRecord?void 0:deployRecord.isDeployed)return deployRecord.recordId;const resolved=await this.lookupService.resolveDependency(dependency);return resolved||this.logger.warn(`Unable to resolve dependency ${lookupKey}`),resolved}hasPendingRecords(datapackKey){var _a,_b;return null!==(_b=null===(_a=this.recordGroups.get(datapackKey))||void 0===_a?void 0:_a.hasPendingRecords())&&void 0!==_b&&_b}getRecords(datapackKey){var _a;return[...null!==(_a=this.recordGroups.get(datapackKey))&&void 0!==_a?_a:[]]}async createDeploymentBatch(datapacks,cancelToken){const batch=new recordBatch_1.default(this.schemaService,this.options),records=[...datapacks.values()];this.logger.verbose(`Resolving existing IDs for ${datapacks.size} records`);const ids=await this.lookupService.lookupIds(records,50,cancelToken);for(const[i,datapack]of records.entries()){const existingId=ids[i];if(existingId?(datapack.setExistingId(existingId),batch.addUpdate(datapack.sobjectType,datapack.values,existingId,datapack.sourceKey)):batch.addInsert(datapack.sobjectType,datapack.values,datapack.sourceKey),null==cancelToken?void 0:cancelToken.isCancellationRequested)break}return batch}async resolveDependencies(datapacks,cancelToken){this.logger.verbose(`Resolving record dependencies for ${datapacks.size} records`);for(const datapack of datapacks.values()){if(null==cancelToken?void 0:cancelToken.isCancellationRequested)return;if(datapack.hasUnresolvedDependencies&&(await datapack.resolveDependencies(this),datapack.hasUnresolvedDependencies)){const deps=datapack.getDependencies().map((dp=>dp.VlocityMatchingRecordSourceKey||dp.VlocityLookupRecordSourceKey));this.logger.warn(`Record ${datapack.sourceKey} has ${datapack.getDependencies().length} unresolvable dependencies: ${deps.join(", ")}`);for(const dependency of deps)datapack.addWarning(`Unresolved dependency: ${dependency}`)}}}async deployRecords(datapackRecords,cancelToken){const recordGroupsInDeployment=new Map;for(const datapackRecord of datapackRecords.values()){if(!datapackRecord.isPending)throw new Error(`Datapack record is already deployed, failed or started: ${datapackRecord.sourceKey}`);datapackRecord.updateStatus(datapackDeploymentRecord_1.DeploymentStatus.InProgress);const recordGroup=this.recordGroups.get(datapackRecord.datapackKey);if(null==recordGroup)throw new Error(`Record "${datapackRecord.sourceKey}", requested for deployment is not associated to any record group`);recordGroupsInDeployment.set(datapackRecord.datapackKey,recordGroup)}await this.resolveDependencies(datapackRecords,cancelToken);const batch=await this.createDeploymentBatch(datapackRecords,cancelToken);if(null==cancelToken?void 0:cancelToken.isCancellationRequested)return void await this.emit("onCancel",this,{hideExceptions:!0,async:!0});const connection=await this.connectionProvider.getJsForceConnection(),newGroups=util_1.Iterable.filter(recordGroupsInDeployment.values(),(group=>!group.isStarted()));await this.emit("beforeDeployRecord",datapackRecords.values(),{hideExceptions:!0}),await this.emit("beforeDeployGroup",newGroups,{hideExceptions:!0});try{this.logger.log(`Deploying ${datapackRecords.size} records...`);for await(const result of batch.execute(connection,this.handleProgressReport.bind(this),cancelToken)){const datapackRecord=datapackRecords.get(result.ref);if(!datapackRecord)throw new Error(`Deployment for datapack ${result.ref} was never requested`);result.success?(datapackRecord.updateStatus(datapackDeploymentRecord_1.DeploymentStatus.Deployed,result.recordId),this.logger.verbose(`Deployed ${datapackRecord.sourceKey}`),this.deployed.push(datapackRecord)):result.success||(this.isRetryable(result.error)&&datapackRecord.retryCount<this.options.maxRetries?(datapackRecord.retry(),this.logger.warn(`Retry ${datapackRecord.sourceKey}`),this.pendingRetry.push(datapackRecord)):(datapackRecord.updateStatus(datapackDeploymentRecord_1.DeploymentStatus.Failed,result.error),this.logger.error(`Failed ${datapackRecord.sourceKey} - ${datapackRecord.statusMessage}`),await this.emit("onError",datapackRecord),this.errors.push(datapackRecord)))}}finally{const completedGroups=util_1.Iterable.filter(recordGroupsInDeployment.values(),(group=>!group.hasPendingRecords()));await this.emit("afterDeployRecord",datapackRecords.values(),{hideExceptions:!0}),await this.emit("afterDeployGroup",[...completedGroups],{hideExceptions:!0,async:!1})}}isRetryable(error){return!0}handleProgressReport({processed,total}){this.logger.verbose(`Deployment in progress ${processed}/${total}...`)}};DatapackDeployment=__decorate([core_1.injectable({lifecycle:core_1.LifecyclePolicy.transient}),__metadata("design:typeinfo",{paramTypes:()=>[Object,jsForceConnectionProvider_1.default,datapackLookupService_1.DatapackLookupService,salesforceSchemaService_1.default,core_1.Logger]})],DatapackDeployment),exports.default=DatapackDeployment},"./src/lib/vlocity/datapackDeploymentRecord.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.DeploymentStatus=void 0;const util_1=__webpack_require__("./packages/util/lib/index.js");var DeploymentStatus;!function(DeploymentStatus){DeploymentStatus[DeploymentStatus.Pending=0]="Pending",DeploymentStatus[DeploymentStatus.InProgress=1]="InProgress",DeploymentStatus[DeploymentStatus.Deployed=2]="Deployed",DeploymentStatus[DeploymentStatus.Failed=3]="Failed"}(DeploymentStatus=exports.DeploymentStatus||(exports.DeploymentStatus={}));class DatapackDeploymentRecord{constructor(datapackType,sobjectType,sourceKey,datapackKey,values={}){this.datapackType=datapackType,this.sobjectType=sobjectType,this.sourceKey=sourceKey,this.datapackKey=datapackKey,this.values=values,this._warnings=new Array,this._dependencies=new Map,this._deployTimer=new util_1.Timer,this._status=DeploymentStatus.Pending,this._retryCount=0}get status(){return this._status}get isDeployed(){return this._status===DeploymentStatus.Deployed}get isPending(){return this._status===DeploymentStatus.Pending}get isStarted(){return this._status===DeploymentStatus.InProgress}get isFailed(){return this._status===DeploymentStatus.Failed}get hasWarnings(){return this._warnings.length>0}get recordId(){return this._status===DeploymentStatus.Deployed?this._statusDetail:this._existingId}get statusMessage(){return this._status!==DeploymentStatus.Deployed?this._statusDetail:void 0}get warnings(){return this._warnings}get deployTime(){return this._deployTimer.elapsed}get hasUnresolvedDependencies(){return this._dependencies.size>0}get retryCount(){return this._retryCount}updateStatus(status,detail){status===DeploymentStatus.InProgress?this._deployTimer.reset():status!==DeploymentStatus.Failed&&status!==DeploymentStatus.Deployed||this._deployTimer.stop(),this._status=status,this._statusDetail=detail}retry(){this._retryCount++,this._status=DeploymentStatus.Pending}addWarning(message){this._warnings.push(message)}setExistingId(value){this._existingId=value}setField(field,value){this.values[field]=value}addLookup(field,dependency){this._dependencies.set(field,dependency)}getLookup(field){return this._dependencies.get(field)}addDependency(dependency){var _a;if(dependency instanceof DatapackDeploymentRecord)return this.addDependency({VlocityRecordSObjectType:dependency.sobjectType,VlocityDataPackType:"VlocityMatchingKeyObject",VlocityMatchingRecordSourceKey:dependency.sourceKey,VlocityLookupRecordSourceKey:void 0});const dependencyGuid=`$${null!==(_a=dependency.VlocityMatchingRecordSourceKey)&&void 0!==_a?_a:dependency.VlocityLookupRecordSourceKey}`;this._dependencies.set(dependencyGuid,dependency)}getDependencySourceKeys(){return util_1.Iterable.map(this._dependencies.values(),(d=>{var _a;return null!==(_a=d.VlocityMatchingRecordSourceKey)&&void 0!==_a?_a:d.VlocityLookupRecordSourceKey}))}getDependencies(){return[...this._dependencies.values()]}async resolveDependencies(resolver){const depArray=[...this._dependencies.entries()];for(const[field,dependency]of depArray){const resolution=await resolver.resolveDependency(dependency);resolution&&(field.startsWith("$")||(this.values[field]=resolution),this._dependencies.delete(field))}}}exports.default=DatapackDeploymentRecord},"./src/lib/vlocity/datapackDeploymentRecordGroup.ts":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.DatapackDeploymentRecordGroup=void 0;class DatapackDeploymentRecordGroup{constructor(key,records=new Array){this.key=key,this.records=records}get datapackType(){var _a,_b;return null===(_b=null===(_a=this.records)||void 0===_a?void 0:_a[0])||void 0===_b?void 0:_b.datapackType}[Symbol.iterator](){return this.records.values()}push(record){this.records.push(record)}hasPendingRecords(){return this.records.some((record=>record.isPending||record.isStarted))}isStarted(){return this.records.some((record=>record.isStarted||record.isDeployed||record.isFailed))}hasErrors(){return this.records.some((record=>record.isFailed))}getRecordOfType(sobjectType){return this.records.find((record=>record.sobjectType==sobjectType||record.sobjectType.endsWith(`__${sobjectType}`)))}}exports.DatapackDeploymentRecordGroup=DatapackDeploymentRecordGroup},"./src/lib/vlocity/datapackInfoService.ts":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0});const core_1=__webpack_require__("./packages/core/lib/index.js"),salesforceService_1=__webpack_require__("./src/lib/salesforce/salesforceService.ts"),util_1=__webpack_require__("./packages/util/lib/index.js");let DatapackInfoService=class DatapackInfoService{constructor(logger,salesforce){this.logger=logger,this.salesforce=salesforce}async getDatapacks(){this.logger.verbose("Querying DataPack configuration from Salesforce");const configurationRecords=await this.salesforce.lookup("vlocity_namespace__VlocityDataPackConfiguration__mdt",void 0,"all");if(0==configurationRecords.length)throw new Error("No DataPack configuration found in Salesforce");this.logger.verbose(`Loaded ${configurationRecords.length} DataPack configurations`);const standardConfiguration=configurationRecords.filter((f=>null!=f.NamespacePrefix)),datapackInfos=[...configurationRecords.filter((f=>null==f.NamespacePrefix)),...standardConfiguration].map((record=>[record.DeveloperName.toLowerCase(),{sobjectType:record.PrimarySObjectType,datapackType:record.DeveloperName}]));return[...new Map(datapackInfos).values()]}async getDatapackType(sobjectType){const regex=new RegExp(`${util_1.removeNamespacePrefix(sobjectType)}`,"ig"),datapackInfo=(await this.getDatapacks()).find((dataPack=>dataPack.sobjectType&&regex.test(util_1.removeNamespacePrefix(dataPack.sobjectType))));return datapackInfo||this.logger.verbose(`No Datapack with SObject '${sobjectType}' configured in Salesforce (see VlocityDataPackConfiguration object)`),null==datapackInfo?void 0:datapackInfo.datapackType}async getSObjectType(datapackType){const regex=new RegExp(`${datapackType}`,"i"),datapackInfo=(await this.getDatapacks()).find((dataPack=>regex.test(dataPack.datapackType)));if(!datapackInfo)throw new Error(`No Datapack with name '${datapackType}' is not configured in Salesforce (see VlocityDataPackConfiguration object)`);if(!(null==datapackInfo?void 0:datapackInfo.sobjectType))throw new Error(`No primary SObject set datapack for datapack '${datapackType}' in VlocityDataPackConfiguration`);return(await this.salesforce.schema.describeSObject(datapackInfo.sobjectType)).name}};__decorate([util_1.cache(-1),__metadata("design:typeinfo",{type:()=>Function,paramTypes:()=>[],returnType:()=>Promise})],DatapackInfoService.prototype,"getDatapacks",null),DatapackInfoService=__decorate([core_1.injectable(),__metadata("design:typeinfo",{paramTypes:()=>[core_1.Logger,salesforceService_1.default]})],DatapackInfoService),exports.default=DatapackInfoService},"./src/lib/vlocity/datapackLoader.ts":function(__unused_webpack_module,exports,__webpack_require__){var DatapackLoader_1,__decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0});const path=__webpack_require__("path"),core_1=__webpack_require__("./packages/core/lib/index.js"),util_1=__webpack_require__("./packages/util/lib/index.js"),datapack_1=__webpack_require__("./src/lib/vlocity/datapack.ts"),datapackUtil_1=__webpack_require__("./src/lib/vlocity/datapackUtil.ts");let DatapackLoader=DatapackLoader_1=class DatapackLoader{constructor(fileSystem,logger=core_1.LogManager.get(DatapackLoader_1)){this.fileSystem=fileSystem,this.logger=logger,this.loaders=[{test:/\.json$/i,load:file=>this.loadJson(file)},{test:/\.png|jpeg|jpg|doc|docx|xls|xlsx|zip$/i,load:file=>this.loadBinary(file)},{test:/\.js|html|csv|txt|css|scss|sass\S+$/i,load:file=>this.loadText(file)},{test:/\.\S+$/i,load:file=>this.loadText(file)}]}addLoader(test,loader){this.loaders.push({test,load:loader})}async loadFrom(datapackHeader,bubbleExceptions=!0){try{const manifestEntry=datapackUtil_1.getDatapackManifestKey(datapackHeader);this.logger.info(`Loading datapack: ${manifestEntry.key}`);const datapackJson=await this.loadJson(datapackHeader);return new datapack_1.VlocityDatapack(datapackHeader,manifestEntry.datapackType,manifestEntry.key,datapackUtil_1.getExportProjectFolder(datapackHeader),datapackJson)}catch(err){if(this.logger.error(`Error loading datapack: ${path.basename(datapackHeader)} -- ${err.message||err}`),bubbleExceptions)throw err}}async loadAll(datapackHeaders,cancellationToken){const datapacks=await util_1.mapAsyncParallel(datapackHeaders,(async header=>{if(!(null==cancellationToken?void 0:cancellationToken.isCancellationRequested))return this.loadFrom(header,!1)}),4);return util_1.filterUndefined(datapacks)}async loadJson(fileName){if(!await this.fileSystem.pathExists(fileName))return;const datapackJson=await this.fileSystem.readFile(fileName),baseDir=path.dirname(fileName),datapack=JSON.parse(datapackJson.toString());for(const[key,value]of Object.entries(datapack))try{datapack[key]=await this.resolveValue(baseDir,value)}catch(err){this.logger.error(`Failed to load datapack property ${key}: ${err}`)}return datapack}async loadText(fileName){if(await this.fileSystem.pathExists(fileName))return(await this.fileSystem.readFile(fileName)).toString("utf-8")}async loadBinary(fileName){if(await this.fileSystem.pathExists(fileName))return this.fileSystem.readFile(fileName)}async resolveValue(baseDir,fieldValue){if("string"==typeof fieldValue){const loader=this.loaders.find((candidateLoader=>!candidateLoader.test||candidateLoader.test.test(fieldValue)));if(loader)try{const value=await loader.load(path.join(baseDir,fieldValue));if(void 0!==value)return value}catch(err){}}else{if(Array.isArray(fieldValue))return Promise.all(fieldValue.map((value=>this.resolveValue(baseDir,value))));null!==fieldValue&&"object"==typeof fieldValue&&await Promise.all(Object.keys(fieldValue).map((async key=>fieldValue[key]=await this.resolveValue(baseDir,fieldValue[key]))))}return fieldValue}};DatapackLoader=DatapackLoader_1=__decorate([core_1.injectable(),__metadata("design:typeinfo",{paramTypes:()=>[core_1.FileSystem,core_1.Logger]})],DatapackLoader),exports.default=DatapackLoader},"./src/lib/vlocity/datapackLookupService.ts":function(__unused_webpack_module,exports,__webpack_require__){var DatapackLookupService_1,__decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.DatapackLookupService=void 0;const vlocityMatchingKeyService_1=__webpack_require__("./src/lib/vlocity/vlocityMatchingKeyService.ts"),salesforceLookupService_1=__webpack_require__("./src/lib/salesforce/salesforceLookupService.ts"),core_1=__webpack_require__("./packages/core/lib/index.js"),constants=__webpack_require__("./src/constants.ts"),util_1=__webpack_require__("./packages/util/lib/index.js"),salesforceSchemaService_1=__webpack_require__("./src/lib/salesforce/salesforceSchemaService.ts"),vlocityNamespaceService_1=__webpack_require__("./src/lib/vlocity/vlocityNamespaceService.ts");let DatapackLookupService=DatapackLookupService_1=class DatapackLookupService{constructor(vlocityNamespaceService,matchingKeyService,lookupService,schema,logger=core_1.LogManager.get(DatapackLookupService_1)){this.vlocityNamespaceService=vlocityNamespaceService,this.matchingKeyService=matchingKeyService,this.lookupService=lookupService,this.schema=schema,this.logger=logger,this.lookupCache=new Map,this.lastRefresh=new Date(0)}async resolveDependency(dependency){const lookupKey=this.getLookupKey(dependency),filter={};for(const field of Object.keys(dependency))constants.DATAPACK_RESERVED_FIELDS.includes(field)||(filter[field]=dependency[field]);if(0!=Object.keys(filter).length)return this.getCachedEntry(dependency.VlocityRecordSObjectType,lookupKey,(async()=>{var _a;return null===(_a=await this.lookupService.lookupSingle(dependency.VlocityRecordSObjectType,filter,["Id"],!1))||void 0===_a?void 0:_a.Id}));this.logger.warn("None of the dependencies lookup fields have values; skipping lookup as it will fail")}async refreshCache(sobjectType){const timer=new util_1.Timer,cache=this.getCache(sobjectType),beforeSize=cache.entries.size,filter={lastModifiedDate:`>${new Date(cache.refreshed).toISOString()}`};await this.lookupAll(sobjectType,filter),this.logger.log(`Refreshed ${sobjectType} lookup cache with ${cache.entries.size-beforeSize} new records [${timer.stop()}]`),cache.refreshed=Date.now()-timer.elapsed}async lookupAll(sobjectType,filter){const matchingKey=await this.matchingKeyService.getMatchingKeyDefinition(sobjectType),matchingKeyFields=await this.getMatchingFields(sobjectType,filter),lookupMap=new Map,results=await this.lookupService.lookup(sobjectType,filter,[...matchingKeyFields,matchingKey.returnField],void 0,!1);for(const record of results){const lookupKey=this.buildLookupKey(sobjectType,matchingKeyFields,record);lookupKey&&void 0!==record.Id&&lookupMap.set(lookupKey,this.updateCachedEntry(sobjectType,lookupKey,record.Id))}return lookupMap}async lookupIdFromCache(sobjectType,data){return this.lookupId(sobjectType,data,!0)}async lookupId(sobjectType,data,cacheOnly){const matchingKey=await this.matchingKeyService.getMatchingKeyDefinition(sobjectType),matchingFields=await this.getMatchingFields(sobjectType,data),filter=this.buildFilter(data,matchingFields);if(0==Object.keys(filter).length)return void this.logger.warn(`Skipping lookup; none matching fields (${matchingFields.join(", ")}) for ${sobjectType} have values`);const lookupKey=this.buildLookupKey(sobjectType,matchingFields,filter);return this.getCachedEntry(sobjectType,lookupKey,cacheOnly?void 0:async()=>{var _a;return null===(_a=await this.lookupService.lookupSingle(sobjectType,filter,[matchingKey.returnField],!1))||void 0===_a?void 0:_a.Id})}async lookupIds(records,batchSize,cancelToken){const lookupResults=new Array,lookupKeyToResultsIndex=new Map,lookupTypes=new Map;for(const[i,{sobjectType,values}]of records.entries()){const matchingFields=await this.getMatchingFields(sobjectType,values),lookupKey=this.buildLookupKey(sobjectType,matchingFields,values);if(!lookupKey){this.logger.error(`Unable to build lookup key for type ${sobjectType} with values:`,values);continue}const id=this.getCachedEntry(sobjectType,lookupKey);if(id)lookupResults[i]=id;else{if(null==cancelToken?void 0:cancelToken.isCancellationRequested)return[];lookupKeyToResultsIndex.set(lookupKey,i),util_1.arrayMapPush(lookupTypes,[sobjectType,...matchingFields].join(":"),values)}}for(const[typeKey,entries]of lookupTypes.entries()){const matchingFields=typeKey.split(":"),sobjectType=matchingFields.shift();this.logger.verbose(`Looking up Ids for ${entries.length} records of type ${sobjectType} matching on ${matchingFields.length} fields`);const timer=new util_1.Timer,total=entries.length;let found=0;do{if(null==cancelToken?void 0:cancelToken.isCancellationRequested)return[];const lookupFilters=entries.splice(0,batchSize).map((entry=>this.buildFilter(entry,matchingFields))),results=await this.lookupService.lookup(sobjectType,lookupFilters,["Id",...matchingFields],void 0,!1);for(const rec of results){const lookupKey=this.buildLookupKey(sobjectType,matchingFields,rec);if(!lookupKey){this.logger.error("Unable to rebuild lookup key for lookup result:",rec);continue}this.updateCachedEntry(sobjectType,lookupKey,rec.id);const resultsIndex=lookupKeyToResultsIndex.get(lookupKey);if(void 0!==resultsIndex){if(lookupResults[resultsIndex]){if(lookupResults[resultsIndex]==rec.Id)continue;this.logger.error(`Duplicate match for lookup key ${lookupKey}; existing lookup ${lookupResults[resultsIndex]}; overwriting lookup result with ${rec.id}`)}lookupResults[resultsIndex]=rec.id,found++}else this.logger.debug("Got result for record not requested:",lookupKey)}}while(entries.length>0);this.logger.log(`Found ${found}/${total} requested ${sobjectType} records [${timer.stop()}]`)}return lookupResults}buildFilter(data,fields){const filter={};for(const field of fields){const value=data[field];void 0!==value?filter[field]="string"==typeof value?this.updateNamespace(value):value:this.logger.verbose(`One of the matching key fields (${field}) does not have a value`)}return filter}buildLookupKey(sobjectType,fields,data){const values=fields.map((field=>data[field])).map((value=>null==value?"":value));return values.length?this.vlocityNamespaceService.replaceWithPlaceholder(`${sobjectType}/${values.join("/")}`):void 0}async getMatchingFields(sobjectType,record){const matchingKey=await this.matchingKeyService.getMatchingKeyDefinition(sobjectType);if(matchingKey.fields.length)return matchingKey.fields;const fields=new Array;for(let field of Object.keys(record)){const fieldDescribe=util_1.last(await this.schema.describeSObjectFieldPath(sobjectType,field,!1)||[]);if(fieldDescribe){if(fieldDescribe.calculated)if(fieldDescribe.calculatedFormula&&this.isLookupFormula(fieldDescribe.calculatedFormula))field=fieldDescribe.calculatedFormula;else if(util_1.isSalesforceId(record[field])){this.logger.error(`Matching field ${sobjectType}.${field} is ignored due to non-resolvable formula definition:`,fieldDescribe.calculatedFormula);continue}fieldDescribe.filterable?fieldDescribe.autoNumber?this.logger.error(`Matching field ${sobjectType}.${field} is ignored for being an auto generate number (${fieldDescribe.type})`):fields.push(field):this.logger.error(`Matching field ${sobjectType}.${field} is ignored due to not being filterable (${fieldDescribe.type})`)}else this.logger.error(`Matching field ${sobjectType}.${field} does not exists:`,record)}return fields}isLookupFormula(formula){return/^[a-z0-9_.]+$/gi.test(formula)}getLookupKey(obj){return obj.VlocityLookupRecordSourceKey||obj.VlocityMatchingRecordSourceKey}updateNamespace(name){return this.vlocityNamespaceService.updateNamespace(name)}getCachedEntry(sobjectType,key,resolver){if(!key)return;if("object"==typeof key)return this.getMatchingFields(sobjectType,key).then((matchingKeyFields=>this.getCachedEntry(sobjectType,this.buildLookupKey(sobjectType,matchingKeyFields,key),resolver)));return!this.getCache(sobjectType).entries.has(key.toLowerCase())&&resolver?Promise.resolve(resolver(key)).then((result=>this.updateCachedEntry(sobjectType,key,result))):this.getCache(sobjectType).entries.get(key.toLowerCase())}updateCachedEntry(sobjectType,key,id){return"object"==typeof key?this.getMatchingFields(sobjectType,key).then((matchingKeyFields=>{const lookupKey=this.buildLookupKey(sobjectType,matchingKeyFields,key);if(lookupKey)return this.updateCachedEntry(sobjectType,lookupKey,id)})):(this.getCache(sobjectType).entries.set(key.toLowerCase(),id),id)}getCache(sobjectType){let cache=this.lookupCache.get(sobjectType.toLowerCase());return cache||this.lookupCache.set(sobjectType.toLowerCase(),cache={refreshed:0,entries:new Map}),cache}};DatapackLookupService=DatapackLookupService_1=__decorate([core_1.injectable({lifecycle:core_1.LifecyclePolicy.transient}),__metadata("design:typeinfo",{paramTypes:()=>[vlocityNamespaceService_1.VlocityNamespaceService,vlocityMatchingKeyService_1.default,salesforceLookupService_1.default,salesforceSchemaService_1.default,Object]})],DatapackLookupService),exports.DatapackLookupService=DatapackLookupService},"./src/lib/vlocity/datapackUtil.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.isPartOfDatapack=exports.getDatapackHeaderByMatchingKey=exports.getExportProjectFolder=exports.getDatapackManifestKey=exports.getDatapackHeadersInWorkspace=exports.getDatapackHeaders=void 0;const path=__webpack_require__("path"),fs=__webpack_require__("./node_modules/fs-extra/lib/index.js"),core_1=__webpack_require__("./packages/core/lib/index.js"),util_1=__webpack_require__("./packages/util/lib/index.js");async function getDatapackHeaders(paths,recursive=!1){const folderSet=await util_1.mapAsyncParallel(Array.isArray(paths)?paths:[paths],(async pathStr=>(await fs.lstat(pathStr)).isDirectory()?pathStr:path.dirname(pathStr)));return(await util_1.mapAsyncParallel(folderSet,(async pathStr=>{const files=(await fs.readdir(pathStr)).map((file=>path.join(pathStr,file))),datapackHeaders=files.filter((name=>/DataPack.json$/i.test(name)));if(recursive){const folders=await util_1.filterAsyncParallel(files,(async file=>(await fs.stat(file)).isDirectory()));datapackHeaders.push(...await getDatapackHeaders(folders,recursive))}return datapackHeaders}))).flat()}async function getDatapackHeadersInWorkspace(){return __webpack_require__("vscode").workspace.findFiles("**/*_DataPack.json")}exports.getDatapackHeaders=getDatapackHeaders,exports.getDatapackHeadersInWorkspace=getDatapackHeadersInWorkspace,exports.getDatapackManifestKey=function getDatapackManifestKey(datapackHeaderPath){const lastPathParts=path.dirname(datapackHeaderPath).split(/\/|\\/gm).slice(-2);return{datapackType:lastPathParts[0],key:`${lastPathParts.join("/")}`}},exports.getExportProjectFolder=function getExportProjectFolder(datapackHeaderPath){const dirname=path.dirname(datapackHeaderPath);return path.join(dirname,"..","..")},exports.getDatapackHeaderByMatchingKey=async function getDatapackHeaderByMatchingKey(matchingKey){const files=(await getDatapackHeadersInWorkspace()).map((uri=>uri.fsPath));for(const file of files){if((await util_1.getDocumentBodyAsString(file)).includes(matchingKey))return file}},exports.isPartOfDatapack=async function isPartOfDatapack(fspath){return(await getDatapackHeaders(fspath)).length>0};class DatapackUtil{static get logger(){return core_1.LogManager.get(DatapackUtil)}static getLabel(sfRecordLikeObject){if(DatapackUtil.isOmniscriptRecord(sfRecordLikeObject))return`${sfRecordLikeObject.Type__c}/${sfRecordLikeObject.SubType__c}`;if(sfRecordLikeObject.Name)return sfRecordLikeObject.Name;if(sfRecordLikeObject.DeveloperName)return sfRecordLikeObject.DeveloperName;if(sfRecordLikeObject.Title)return sfRecordLikeObject.Title;if(sfRecordLikeObject.Label)return sfRecordLikeObject.Label;if(DatapackUtil.logger.warn("Object does not have common namable property",sfRecordLikeObject),sfRecordLikeObject.Id)return sfRecordLikeObject.Id;if(sfRecordLikeObject.GlobalKey__c)return sfRecordLikeObject.GlobalKey__c;throw new Error(`The specified object does not have a name like property to use as label ${JSON.stringify(sfRecordLikeObject)}`)}static isOmniscriptRecord(sfRecordLikeObject){return!(!sfRecordLikeObject.sobjectType||!sfRecordLikeObject.sobjectType.endsWith("OmniScript__c"))||!(!sfRecordLikeObject.Id||!sfRecordLikeObject.Id.startsWith("a2C"))}}exports.default=DatapackUtil},"./src/lib/vlocity/deploymentSpecs/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const vlocityUITemplate_1=__webpack_require__("./src/lib/vlocity/deploymentSpecs/vlocityUITemplate.ts"),omniScript_1=__webpack_require__("./src/lib/vlocity/deploymentSpecs/omniScript.ts"),vlocityAction_1=__webpack_require__("./src/lib/vlocity/deploymentSpecs/vlocityAction.ts"),vlocityCard_1=__webpack_require__("./src/lib/vlocity/deploymentSpecs/vlocityCard.ts"),product2_1=__webpack_require__("./src/lib/vlocity/deploymentSpecs/product2.ts");exports.default={VlocityUITemplate:vlocityUITemplate_1.VlocityUITemplateSpec,OmniScript:omniScript_1.VlocityOmniScriptSpec,IntegrationProcedure:omniScript_1.VlocityOmniScriptSpec,VlocityAction:vlocityAction_1.VlocityActionSpec,VlocityCard:vlocityCard_1.VlocityCardSpec,VlocityUILayout:vlocityCard_1.VlocityCardSpec,Product2:product2_1.Product2Spec}},"./src/lib/vlocity/deploymentSpecs/omniScript.ts":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.VlocityOmniScriptSpec=void 0;const core_1=__webpack_require__("./packages/core/lib/index.js"),salesforceService_1=__webpack_require__("./src/lib/salesforce/salesforceService.ts"),util_1=__webpack_require__("./packages/util/lib/index.js"),datapackDeploymentRecord_1=__webpack_require__("./src/lib/vlocity/datapackDeploymentRecord.ts");let VlocityOmniScriptSpec=class VlocityOmniScriptSpec{constructor(salesforceService,logger){this.salesforceService=salesforceService,this.logger=logger}async preprocess(datapack){datapack.IsActive__c=!1,delete datapack.Version__c}async afterDeploy(event){await util_1.forEachAsyncParallel(event.getDeployedRecords("OmniScript__c"),(async record=>{try{this.logger.info(`Activating ${record.datapackKey}...`),await this.activateOmniScript(record.recordId)}catch(err){this.logger.error(`Failed to activate OmniScript ${record.datapackKey} due to activation error: ${err}`),record.updateStatus(datapackDeploymentRecord_1.DeploymentStatus.Failed,err.message||err)}}),4)}async activateOmniScript(id){await this.invokeBusinessProcessController("activateScript",[id,1])}invokeBusinessProcessController(method,payload={}){return this.salesforceService.requestApexRemote("vlocity_namespace__embeddingbusinessprocesspage","vlocity_namespace.EmbeddingBusinessProcessController",method,payload)}};VlocityOmniScriptSpec=__decorate([core_1.injectable({lifecycle:core_1.LifecyclePolicy.transient}),__metadata("design:typeinfo",{paramTypes:()=>[salesforceService_1.default,core_1.Logger]})],VlocityOmniScriptSpec),exports.VlocityOmniScriptSpec=VlocityOmniScriptSpec},"./src/lib/vlocity/deploymentSpecs/product2.ts":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Product2Spec=void 0;const core_1=__webpack_require__("./packages/core/lib/index.js"),salesforceService_1=__webpack_require__("./src/lib/salesforce/salesforceService.ts");let Product2Spec=class Product2Spec{constructor(salesforceService,logger){this.salesforceService=salesforceService,this.logger=logger}async afterRecordConversion(records){const pricebookEntries=this.getPriceBookEntries(records),priceListEntries=records.filter((r=>r.sourceKey.startsWith("%vlocity_namespace%__PriceListEntry__c"))),standardPricebookEntry=pricebookEntries.get("Standard Price Book");if(standardPricebookEntry)for(const[name,pricebookEntry]of pricebookEntries)"Standard Price Book"!=name&&pricebookEntry.addDependency(standardPricebookEntry);for(const pricebookEntry of pricebookEntries.values())priceListEntries.forEach((ple=>ple.addDependency(pricebookEntry)))}getPriceBookEntries(records){return new Map(records.filter((r=>"PricebookEntry"==r.sobjectType&&r.getLookup("Pricebook2Id"))).map((r=>{var _a;return[null===(_a=r.getLookup("Pricebook2Id"))||void 0===_a?void 0:_a.Name,r]})))}};Product2Spec=__decorate([core_1.injectable({lifecycle:core_1.LifecyclePolicy.transient}),__metadata("design:typeinfo",{paramTypes:()=>[salesforceService_1.default,core_1.Logger]})],Product2Spec),exports.Product2Spec=Product2Spec},"./src/lib/vlocity/deploymentSpecs/vlocityAction.ts":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.VlocityActionSpec=void 0;const core_1=__webpack_require__("./packages/core/lib/index.js"),salesforceService_1=__webpack_require__("./src/lib/salesforce/salesforceService.ts");let VlocityActionSpec=class VlocityActionSpec{constructor(salesforceService,logger){this.salesforceService=salesforceService,this.logger=logger}async afterDeploy(event){const templateRecords=[...event.getDeployedRecords("VlocityAction__c")].map((record=>({id:record.recordId,isActive__c:!0})));for await(const record of this.salesforceService.update("%vlocity_namespace%__VlocityAction__c",templateRecords))record.success?this.logger.verbose(`Activated Vlocity action ${record.ref}`):this.logger.warn(`Failed activation of action ${record.ref}: ${record.error}`)}};VlocityActionSpec=__decorate([core_1.injectable({lifecycle:core_1.LifecyclePolicy.transient}),__metadata("design:typeinfo",{paramTypes:()=>[salesforceService_1.default,core_1.Logger]})],VlocityActionSpec),exports.VlocityActionSpec=VlocityActionSpec},"./src/lib/vlocity/deploymentSpecs/vlocityCard.ts":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.VlocityCardSpec=void 0;const core_1=__webpack_require__("./packages/core/lib/index.js"),salesforceService_1=__webpack_require__("./src/lib/salesforce/salesforceService.ts");let VlocityCardSpec=class VlocityCardSpec{constructor(salesforceService,logger){this.salesforceService=salesforceService,this.logger=logger}async preprocess(datapack){datapack.Active__c=!0}};VlocityCardSpec=__decorate([core_1.injectable({lifecycle:core_1.LifecyclePolicy.transient}),__metadata("design:typeinfo",{paramTypes:()=>[salesforceService_1.default,core_1.Logger]})],VlocityCardSpec),exports.VlocityCardSpec=VlocityCardSpec},"./src/lib/vlocity/deploymentSpecs/vlocityUITemplate.ts":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.VlocityUITemplateSpec=void 0;const path=__webpack_require__("path"),sass_1=__webpack_require__("./src/lib/sass/index.ts"),core_1=__webpack_require__("./packages/core/lib/index.js"),salesforceService_1=__webpack_require__("./src/lib/salesforce/salesforceService.ts"),util_1=__webpack_require__("./packages/util/lib/index.js");let VlocityUITemplateSpec=class VlocityUITemplateSpec{constructor(salesforceService,logger,sass){this.salesforceService=salesforceService,this.logger=logger,this.sass=sass}async preprocess(datapack){if(datapack.sass__c){const timer=new util_1.Timer,includePaths=[datapack.datapackFolder,path.join(datapack.datapackFolder,"..")],result=await this.sass.compile(datapack.sass__c,{importer:{includePaths}});if(this.logger.info(`Compiled ${datapack.name} SASS [${timer.stop()}]`),0!=result.status)throw new Error(result.formatted);datapack["%vlocity_namespace%__Css__c"]=result.text}datapack.data.active__c=!1}async afterDeploy(event){const templateRecords=[...event.getDeployedRecords("VlocityUITemplate__c")].map((record=>({id:record.recordId,active__c:!0})));for await(const record of this.salesforceService.update("%vlocity_namespace%__VlocityUITemplate__c",templateRecords))record.success?this.logger.verbose(`Activated Vlocity UI template ${record.ref}`):this.logger.warn(`Failed activation of template ${record.ref}: ${record.error}`)}};VlocityUITemplateSpec=__decorate([core_1.injectable({lifecycle:core_1.LifecyclePolicy.transient}),__metadata("design:typeinfo",{paramTypes:()=>[salesforceService_1.default,core_1.Logger,sass_1.SassCompiler]})],VlocityUITemplateSpec),exports.VlocityUITemplateSpec=VlocityUITemplateSpec},"./src/lib/vlocity/vlocityDatapackService.ts":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.DatapackResultCollection=void 0;const path=__webpack_require__("path"),fs=__webpack_require__("./node_modules/fs-extra/lib/index.js"),yaml=__webpack_require__("./node_modules/js-yaml/dist/js-yaml.mjs"),vlocity=__webpack_require__("./node_modules/vlocity/lib/vlocity.js"),vscode=__webpack_require__("vscode"),core_1=__webpack_require__("./packages/core/lib/index.js"),jsForceConnectionProvider_1=__webpack_require__("./src/lib/salesforce/connection/jsForceConnectionProvider.ts"),salesforceService_1=__webpack_require__("./src/lib/salesforce/salesforceService.ts"),vlocodeConfiguration_1=__webpack_require__("./src/lib/vlocodeConfiguration.ts"),exportQueryDefinitions=__webpack_require__("./src/exportQueryDefinitions.yaml"),util_1=__webpack_require__("./packages/util/lib/index.js"),datapackLoader_1=__webpack_require__("./src/lib/vlocity/datapackLoader.ts"),datapackUtil_1=__webpack_require__("./src/lib/vlocity/datapackUtil.ts"),DataPacksExpand=__webpack_require__("./node_modules/vlocity/lib/datapacksexpand.js"),vlocityMatchingKeyService_1=__webpack_require__("./src/lib/vlocity/vlocityMatchingKeyService.ts");class DatapackResultCollection{constructor(results=[]){this.results=results}static fromJobResult(result){const records=(result.records||[]).map((record=>{var _a;return{key:record.VlocityDataPackKey,label:record.VlocityDataPackDisplayLabel,success:"Success"==record.VlocityDataPackStatus,errorMessage:null===(_a=record.ErrorMessage)||void 0===_a?void 0:_a.trim()}}));return new DatapackResultCollection(records)}get length(){return this.results.length}get hasErrors(){return this.results.some((result=>!result.success))}[Symbol.iterator](){return this.results[Symbol.iterator]()}getErrors(){return this.results.filter((result=>!result.success))}getResult(key){return this.results.find((result=>result.key.toLowerCase()==key.toLowerCase()))}add(...results){return this.results.push(...results),this}join(results){return this.results.push(...results),this}clear(){this.results=[]}}exports.DatapackResultCollection=DatapackResultCollection;class BuildToolsExpandDefinitionProvider{constructor(vlocityBuildTools){this.vlocityBuildTools=vlocityBuildTools}getDatapackExpandDefinition(key,target){return this.vlocityBuildTools.datapacksutils.getExpandedDefinition(target.datapackType,void 0,key)}getSObjectExpandDefinition(key,target){return this.vlocityBuildTools.datapacksutils.getExpandedDefinition(target.datapackType,target.sobjectType,key)}}let VlocityDatapackService=class VlocityDatapackService{constructor(logger,connectionProvider,config,salesforceService,matchingKeyService,loader){this.logger=logger,this.connectionProvider=connectionProvider,this.config=config,this.salesforceService=salesforceService,this.matchingKeyService=matchingKeyService,this.loader=loader}dispose(){this.customSettingsWatcher&&(this.customSettingsWatcher.dispose(),this.customSettingsWatcher=void 0)}async initialize(){return this.vlocityBuildTools=await this.createVlocityInstance(),this}async createVlocityInstance(){const connection=await this.connectionProvider.getJsForceConnection(),vlocityInstanceParams={accessToken:connection.accessToken,instanceUrl:connection.instanceUrl},buildTools=new vlocity({...this.config,...vlocityInstanceParams});buildTools.jsForceConnection=connection,buildTools.utilityservice.login=async()=>{},buildTools.utilityservice.sfdxLogin=async()=>{},buildTools.datapacksutils.printJobStatus=()=>{},buildTools.datapacksutils.saveCurrentJobInfo=()=>{},buildTools.datapacksexportbuildfile.saveFile=()=>{},buildTools.datapacksutils.updateStatusIPC=()=>{},await buildTools.utilityservice.checkLogin();const customJobOptions=await this.getCustomJobOptions();return customJobOptions&&customJobOptions.OverrideSettings&&buildTools.datapacksutils.overrideExpandedDefinition(customJobOptions.OverrideSettings),this.expandProvider=new BuildToolsExpandDefinitionProvider(this.vlocityBuildTools),buildTools}get vlocityNamespace(){return this.vlocityBuildTools.namespace}async getQueryDefinitions(){const customJobOptions=await this.getCustomJobOptions();if(customJobOptions&&customJobOptions.customQueries){return{...customJobOptions.customQueries.reduce(((map,val)=>Object.assign(map,{[val.VlocityDataPackType]:val})),{}),...exportQueryDefinitions}}return exportQueryDefinitions}async getQueryDefinition(datapack){var _a;return null===(_a=Object.entries(await this.getQueryDefinitions()).find((([type])=>util_1.stringEquals(type,datapack))))||void 0===_a?void 0:_a[1]}getExpandedValue(key,datapack){let definition=this.expandProvider.getSObjectExpandDefinition(key,datapack);if("string"==typeof definition&&(definition=[definition]),definition&&Array.isArray(definition)){const resolveValue=field=>{var _a;return field.startsWith("_")?field.substr(0):"object"==typeof datapack[field]&&(null===(_a=datapack[field].VlocityDataPackType)||void 0===_a?void 0:_a.endsWith("MatchingKeyObject"))?datapack[field].VlocityMatchingRecordSourceKey||datapack[field].VlocityLookupRecordSourceKey:datapack[field]};return definition.map(resolveValue).filter((v=>!!v)).join("_")}}async getJsForceConnection(){return this.connectionProvider.getJsForceConnection()}isGuaranteedParentKey(key){return key.startsWith("RecordType/")||this.vlocityBuildTools.datapacksutils.isGuaranteedParentKey(key)}async isVlocityPackageInstalled(){return void 0!==await this.salesforceService.isPackageInstalled(/^vlocity/i)}resolvedProjectPath(){return path.resolve(this.config.projectPath||".")}async loadDatapack(file){return this.loader.loadFrom(file.fsPath)}async loadAllDatapacks(files,cancellationToken){return this.loader.loadAll(files.map((file=>file.fsPath)),cancellationToken)}async expandDatapack(datapack,targetPath){const expander=new DataPacksExpand(this.vlocityBuildTools);expander.targetPath=targetPath;const jobOptions={...await this.getCustomJobOptions(),...this.config},parentName=expander.getDataPackFolder(datapack.datapackType,datapack.VlocityRecordSObjectType,datapack);this.logger.verbose(`Expanding datapack ${parentName} (${datapack.datapackType})`),await expander.processDataPackData(datapack.datapackType,parentName,void 0,datapack.data,!1,jobOptions)}getDatapackReferenceKey(datapack){return`${datapack.datapackType}/${this.vlocityBuildTools.datapacksexpand.getDataPackFolder(datapack.datapackType,datapack.sobjectType,datapack)}`}async deploy(datapackHeaders,token){const headersByProject=util_1.groupBy(datapackHeaders,datapackUtil_1.getExportProjectFolder),projectPath=this.resolvedProjectPath();return(await util_1.mapAsync(Object.keys(headersByProject),(projectFolder=>{const deployManifest=headersByProject[projectFolder].map((header=>datapackUtil_1.getDatapackManifestKey(header).key));return this.runCommand("Deploy",{manifest:deployManifest,projectPath,expansionPath:path.relative(projectPath,projectFolder),activate:this.config.autoActivate,continueAfterError:!0,delete:!0,compileOnBuild:this.config.compileOnBuild},token)}))).reduce(((results,result)=>results.join(result)))}async getSalesforceIds(entries){const exportQueries=await this.createExportQueries(entries);return(await Promise.all(exportQueries.map((query=>this.salesforceService.query(query.query))))).map((result=>{var _a;return null===(_a=result[0])||void 0===_a?void 0:_a.Id}))}async export(entries,exportFolder,maxDepth=0,cancellationToken){const exportQueries=await this.createExportQueries(entries.filter((e=>!e.id))),exportManifest=this.createExportManifest(entries.filter((e=>!!e.id))),projectPath=this.resolvedProjectPath(),parallelExports=entries.some((entry=>"SObject"==entry.datapackType))?1:this.config.parallelLimit;return this.runCommand("Export",{queries:exportQueries,projectPath,expansionPath:path.relative(projectPath,exportFolder),ignoreAllErrors:!1,fullManifest:exportManifest,skipQueries:0==exportQueries.length,defaultMaxParallel:parallelExports,maxDepth,initialized:!0},cancellationToken)}createExportManifest(objects){return objects.reduce(((manifest,entry)=>(manifest[entry.datapackType]=manifest[entry.datapackType]||{},manifest[entry.datapackType][entry.id]={Id:entry.id,VlocityDataPackType:entry.datapackType,VlocityRecordSObjectType:entry.sobjectType},manifest)),{})}async createExportQueries(objects){return Promise.all(objects.map((async entry=>({VlocityDataPackType:entry.datapackType,query:await this.matchingKeyService.getQuery(entry.datapackType,entry)}))))}async runYamlJob(command,yamlFile,cancellationToken){const jobInfo=yaml.load(await util_1.getDocumentBodyAsString(yamlFile));return delete jobInfo.projectPath,jobInfo.initialized=!0,this.runCommand(command,jobInfo,cancellationToken)}async runCommand(command,jobInfo,cancellationToken){const jobResult=await this.datapacksJobAsync(command,jobInfo,cancellationToken);return DatapackResultCollection.fromJobResult(jobResult)}async datapacksJobAsync(command,jobInfo,cancellationToken){const localOptions={projectPath:this.resolvedProjectPath(),autoUpdateSettings:!1},jobOptions={...await this.getCustomJobOptions(),...this.config,...localOptions,...jobInfo};cancellationToken&&(jobOptions.cancellationToken=cancellationToken);const vlocityInstance=await this.createVlocityInstance();vlocityInstance.datapacksexportbuildfile.currentExportFileData={};return{...await vlocityInstance.datapacksjob.runJob(command,jobOptions),currentStatus:jobOptions.currentStatus}}async getCustomJobOptions(){if(this.config.customJobOptionsYaml){if(!this.customSettings){const yamlFullPath=await this.getWorkspacePath(this.config.customJobOptionsYaml);if(!yamlFullPath)return void vscode.window.showErrorMessage(`Custom Vlocity YAML file does not exists: ${this.config.customJobOptionsYaml}`);this.customSettingsWatcher||(this.customSettingsWatcher=vscode.workspace.createFileSystemWatcher(yamlFullPath),this.customSettingsWatcher.onDidChange((e=>this.customSettings=this.loadCustomSettingsFrom(e.fsPath))),this.customSettingsWatcher.onDidCreate((e=>this.customSettings=this.loadCustomSettingsFrom(e.fsPath))),this.customSettingsWatcher.onDidDelete((()=>this.customSettings=null))),this.customSettings=await this.loadCustomSettingsFrom(yamlFullPath)}return this.customSettings}}async loadCustomSettingsFrom(yamlFile){try{const customSettings=yaml.load((await fs.readFile(yamlFile)).toString());return this.logger.info(`Loaded custom settings from YAML file: ${yamlFile}`),{OverrideSettings:customSettings.OverrideSettings,preStepApex:customSettings.preStepApex,postStepApex:customSettings.postStepApex,postJobApex:customSettings.postJobApex,customQueries:customSettings.queries}}catch(err){vscode.window.showErrorMessage(`Failed to parse custom YAML file: ${yamlFile}`,"See details").then((()=>this.logger.focus())),this.logger.error(`Failed to parse custom YAML file: ${yamlFile}/nError: ${err.message||err}`)}}async getWorkspacePath(file){const pathCandidates=[...(vscode.workspace.workspaceFolders||[]).map((root=>path.join(root.uri.fsPath,file))),file];for(const pathCandidate of pathCandidates)if(fs.existsSync(pathCandidate))return pathCandidate}};VlocityDatapackService=__decorate([core_1.injectable(),__metadata("design:typeinfo",{paramTypes:()=>[core_1.Logger,jsForceConnectionProvider_1.default,vlocodeConfiguration_1.default,salesforceService_1.default,vlocityMatchingKeyService_1.default,datapackLoader_1.default]})],VlocityDatapackService),exports.default=VlocityDatapackService},"./src/lib/vlocity/vlocityLogging.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.setLogger=void 0;const core_1=__webpack_require__("./packages/core/lib/index.js"),util=__webpack_require__("./packages/util/lib/index.js");__webpack_require__("./node_modules/vlocity/lib/vlocityutils.js");const loggerMapping={report:core_1.Logger.prototype.info,success:core_1.Logger.prototype.info,warn:core_1.Logger.prototype.warn,error:core_1.Logger.prototype.error,verbose:core_1.Logger.prototype.verbose};exports.setLogger=function setLogger(logger,includeCallerDetails=!1){const vlocityLogFn=(logFn,args)=>{if(!VlocityUtils.silence){if(includeCallerDetails){const callerFrame=util.getStackFrameDetails(2);callerFrame&&args.push(`(${callerFrame.fileName}:${callerFrame.lineNumber})`)}logFn.apply(logger,args)}};for(const[key,value]of Object.entries(loggerMapping))VlocityUtils[key]=(...args)=>vlocityLogFn(value,args);VlocityUtils.output=(_loggingMethod,_color,args)=>vlocityLogFn(logger.log,Array.from(args)),VlocityUtils.fatal=(...args)=>{throw vlocityLogFn(logger.error,Array.from(args)),new Error(Array.from(args).join(" "))}}},"./src/lib/vlocity/vlocityMatchingKeyService.ts":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0});const core_1=__webpack_require__("./packages/core/lib/index.js"),salesforceService_1=__webpack_require__("./src/lib/salesforce/salesforceService.ts"),util_1=__webpack_require__("./packages/util/lib/index.js"),ExportQueryDefinitions=__webpack_require__("./src/exportQueryDefinitions.yaml"),vlocityNamespaceService_1=__webpack_require__("./src/lib/vlocity/vlocityNamespaceService.ts"),datapackInfoService_1=__webpack_require__("./src/lib/vlocity/datapackInfoService.ts");let VlocityMatchingKeyService=class VlocityMatchingKeyService{constructor(logger,vlocityNamespace,datapackInfo,salesforce){this.logger=logger,this.vlocityNamespace=vlocityNamespace,this.datapackInfo=datapackInfo,this.salesforce=salesforce}get matchingKeys(){return this.loadAllMatchingKeys()}get queryDefinitions(){return ExportQueryDefinitions}async getQuery(type,entry){const sobjectType=this.vlocityNamespace.updateNamespace(entry.VlocityRecordSObjectType),matchingKey=await this.getMatchingKeyDefinition(sobjectType);if(!matchingKey)throw new Error(`Object type ${type} does not have a matching key specified in Salesforce.`);let baseQuery=this.getExportQuery(type);baseQuery||(this.logger.warn(`No base query found for type ${type}; using generic select`),baseQuery=`SELECT ${matchingKey.returnField} FROM ${sobjectType}`);const sobject=await this.salesforce.schema.describeSObject(sobjectType),getFieldType=fieldName=>{var _a;return null===(_a=sobject.fields.find((field=>util_1.stringEquals(field.name,this.vlocityNamespace.updateNamespace(fieldName),!0))))||void 0===_a?void 0:_a.type};if(matchingKey.fields.length&&(baseQuery+=/ where /gi.test(baseQuery)?" AND ":" WHERE ",baseQuery+=matchingKey.fields.filter((field=>entry[field])).map((field=>`${field} = ${this.formatValue(entry[field],getFieldType(field))}`)).join(" and ")),baseQuery+=" ORDER BY LastModifiedDate DESC LIMIT 1",!/ where /gi.test(baseQuery))throw new Error(`The specified ${type} does not have a matching key`);return baseQuery}formatValue(value,type){switch(type){case"int":return`${parseInt(value,10)}`;case"boolean":return`${null==value?null:!!value}`;case"datetime":case"double":case"currency":case"date":return value?`${value}`:"null"}return value?`'${value}'`:"null"}getExportQuery(datapackType){if(this.queryDefinitions[datapackType])return this.queryDefinitions[datapackType].query}async getMatchingKeyDefinition(type){const matchingKeys=await this.matchingKeys,typeCheckingOrder=[type,util_1.removeNamespacePrefix(type)];for(const typeKey of typeCheckingOrder){const matchingKey=matchingKeys.get(typeKey);if(matchingKey)return matchingKey}return{sobjectType:type,fields:[],returnField:"Id"}}async loadAllMatchingKeys(){const matchingKeys=[...await this.queryMatchingKeys(),...await this.loadMatchingKeysFromQueryDefinitions()],values=new Map;for(const value of matchingKeys){values.set(value.sobjectType,value);const objectWithoutPrefix=util_1.removeNamespacePrefix(value.sobjectType);objectWithoutPrefix!==value.sobjectType&&values.set(objectWithoutPrefix,value),value.datapackType&&values.set(value.datapackType,value)}return values}async queryMatchingKeys(){this.logger.verbose("Querying matching keys from Salesforce");const matchingKeyResults=await this.salesforce.lookup("vlocity_namespace__DRMatchingKey__mdt",void 0,"all"),matchingKeyObjects=await Promise.all(matchingKeyResults.map((async record=>{const fields=record.matchingKeyFields.split(",").map((s=>s.trim())),validFields=await this.validateMatchingKeyFields(record.objectAPIName,fields),datapackType=await this.datapackInfo.getDatapackType(record.objectAPIName);return{sobjectType:record.objectAPIName,datapackType,fields:validFields,returnField:record.returnKeyField}})));return this.logger.log(`Loaded ${matchingKeyObjects.length} matching keys definitions from Salesforce`),matchingKeyObjects}async loadMatchingKeysFromQueryDefinitions(){this.logger.verbose("Loading extra matching keys from QueryDefinitions");const matchingKeys=[];for(const qd of Object.values(this.queryDefinitions)){const sobjectType=this.getSObjectType(qd.VlocityDataPackType);if(!sobjectType||!qd.matchingKey)continue;const fields=await this.validateMatchingKeyFields(sobjectType,qd.matchingKey.fields);fields.length&&matchingKeys.push({sobjectType,fields,datapackType:qd.VlocityDataPackType,returnField:qd.matchingKey.returnField||"Id"})}return this.logger.log(`Loaded ${matchingKeys.length} matching keys from QueryDefinitions`),matchingKeys}async validateMatchingKeyFields(sobjectType,fields){const validFields=await Promise.all(fields.map((field=>this.salesforce.schema.describeSObjectField(sobjectType,field,!1))));for(const[i,field]of validFields.entries())field||this.logger.warn(`${sobjectType}: matching key field '${fields[i]}' is invalid or not accessible`);return validFields.filter((field=>void 0!==field)).map((field=>field.name))}getDatapackType(sobjectType){if(sobjectType){const sobjectTypeWithoutNamespace=util_1.removeNamespacePrefix(sobjectType),regex=new RegExp(`from (${sobjectType}|(%|)vlocity_namespace(%|)__${sobjectTypeWithoutNamespace})`,"ig");return Object.keys(this.queryDefinitions).find((type=>regex.test(this.queryDefinitions[type].query)))}}getSObjectType(datapackType){const queryDef=this.queryDefinitions[datapackType];if(queryDef){const match=queryDef.query.match(/from ([^\s]+)/im);if(match)return match[1]}}};__decorate([util_1.cache(-1),__metadata("design:typeinfo",{type:()=>Object,paramTypes:()=>[]})],VlocityMatchingKeyService.prototype,"matchingKeys",null),VlocityMatchingKeyService=__decorate([core_1.injectable(),__metadata("design:typeinfo",{paramTypes:()=>[core_1.Logger,vlocityNamespaceService_1.VlocityNamespaceService,datapackInfoService_1.default,salesforceService_1.default]})],VlocityMatchingKeyService),exports.default=VlocityMatchingKeyService},"./src/lib/vlocity/vlocityNamespaceService.ts":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.VlocityNamespaceService=void 0;const core_1=__webpack_require__("./packages/core/lib/index.js"),util_1=__webpack_require__("./packages/util/lib/index.js"),chalk=__webpack_require__("./node_modules/chalk/source/index.js"),constants=__webpack_require__("./src/constants.ts");let VlocityNamespaceService=class VlocityNamespaceService{constructor(vlocityNamespace,logger){this.vlocityNamespace=vlocityNamespace,this.logger=logger}getNamespace(){var _a;return null!==(_a=this.vlocityNamespace)&&void 0!==_a?_a:""}replaceWithPlaceholder(name){return this.vlocityNamespace?name.replace(new RegExp(`${this.vlocityNamespace}`,"gi"),constants.NAMESPACE_PLACEHOLDER):name}updateNamespace(name){return this.vlocityNamespace?name.replace(constants.NAMESPACE_PLACEHOLDER_PATTERN,this.vlocityNamespace):name.replace(constants.NAMESPACE_PLACEHOLDER_PATTERN,"").replace(/^__/,"")}async initialize(connectionProvider){const connection=await connectionProvider.getJsForceConnection();return this.vlocityNamespace=await this.getConnectionNamespace(connection),this}async getConnectionNamespace(connection){var _a;const timer=new util_1.Timer,results=await connection.query("select NamespacePrefix from ApexClass where name = 'DRDataPackService' limit 1"),namespace=(null===(_a=results.records[0])||void 0===_a?void 0:_a.NamespacePrefix)||null;return 0==results.totalSize?this.logger.warn("Unable to detect Vlocity Managed Package on target org, is Vlocity installed?"):this.logger.info(`Initialized Vlocity namespace to ${chalk.bold(namespace)} [${timer.stop()}]`),namespace}};VlocityNamespaceService=__decorate([core_1.injectable(),__metadata("design:typeinfo",{paramTypes:()=>[Object,core_1.Logger]})],VlocityNamespaceService),exports.VlocityNamespaceService=VlocityNamespaceService},"./src/lib/vlocodeActivity.ts":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.VlocodeActivityStatus=void 0,function(VlocodeActivityStatus){VlocodeActivityStatus[VlocodeActivityStatus.Pending=0]="Pending",VlocodeActivityStatus[VlocodeActivityStatus.InProgress=1]="InProgress",VlocodeActivityStatus[VlocodeActivityStatus.Completed=2]="Completed",VlocodeActivityStatus[VlocodeActivityStatus.Failed=3]="Failed",VlocodeActivityStatus[VlocodeActivityStatus.Cancelled=4]="Cancelled"}(exports.VlocodeActivityStatus||(exports.VlocodeActivityStatus={}))},"./src/lib/vlocodeConfiguration.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.VlocodeVlocityDeployConfiguration=exports.VlocodeSalesforceConfiguration=void 0;const config_1=__webpack_require__("./src/lib/config/index.ts");class VlocodeSalesforceConfiguration extends config_1.BaseConfiguration{}exports.VlocodeSalesforceConfiguration=VlocodeSalesforceConfiguration;class VlocodeVlocityDeployConfiguration extends config_1.BaseConfiguration{}exports.VlocodeVlocityDeployConfiguration=VlocodeVlocityDeployConfiguration;class VlocodeConfiguration extends config_1.BaseConfiguration{}exports.default=VlocodeConfiguration},"./src/lib/vlocodeContext.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.initializeContext=exports.getContext=void 0;const path=__webpack_require__("path"),util_1=__webpack_require__("./packages/util/lib/index.js");class VlocodeContext{constructor(extensionPath,storagePath,service){this.extensionPath=extensionPath,this.storagePath=storagePath,this.service=service}asAbsolutePath(relativePath){return path.join(this.extensionPath,relativePath)}}exports.getContext=function getContext(){return util_1.getInstance(VlocodeContext)},exports.initializeContext=function initializeContext(context,service){return util_1.singleton(VlocodeContext,context.extensionPath,context.storagePath,service)}},"./src/lib/vlocodeService.ts":function(__unused_webpack_module,exports,__webpack_require__){var VlocodeService_1,__decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0});const vscode=__webpack_require__("vscode"),_constants_1=__webpack_require__("./src/constants.ts"),vlocodeActivity_1=__webpack_require__("./src/lib/vlocodeActivity.ts"),util_1=__webpack_require__("./packages/util/lib/index.js"),chalk=__webpack_require__("./node_modules/chalk/source/index.js"),core_1=__webpack_require__("./packages/core/lib/index.js"),vlocodeConfiguration_1=__webpack_require__("./src/lib/vlocodeConfiguration.ts"),vlocityDatapackService_1=__webpack_require__("./src/lib/vlocity/vlocityDatapackService.ts"),jsForceConnectionProvider_1=__webpack_require__("./src/lib/salesforce/connection/jsForceConnectionProvider.ts"),sfdxConnectionProvider_1=__webpack_require__("./src/lib/salesforce/connection/sfdxConnectionProvider.ts"),salesforceService_1=__webpack_require__("./src/lib/salesforce/salesforceService.ts"),config_1=__webpack_require__("./src/lib/config/index.ts"),commandRouter_1=__webpack_require__("./src/lib/commandRouter.ts"),vlocityNamespaceService_1=__webpack_require__("./src/lib/vlocity/vlocityNamespaceService.ts");let VlocodeService=VlocodeService_1=class VlocodeService{constructor(config,commandRouter,logger){this.config=config,this.commandRouter=commandRouter,this.logger=logger,this.disposables=[],this.statusItems={},this.connectionHooks=new util_1.HookManager,this.diagnostics={},this.activitiesChangedEmitter=new vscode.EventEmitter,this.activities=util_1.observeArray([]),this.onActivitiesChanged=this.activitiesChangedEmitter.event,this.createConfigWatcher(),this.connectionHooks.registerHook({pre:this.updateNamespaceHook.bind(this)})}get datapackService(){if(!this._datapackService)throw new Error("Vlocode is not initialized; VlocityDatapackService is null");return this._datapackService}get salesforceService(){if(!this._salesforceService)throw new Error("Vlocode is not initialized; SalesforceService is null");return this._salesforceService}get connected(){return!!this._datapackService}get commands(){return this.commandRouter}dispose(){console.log("dispose service"),this.disposables.forEach((disposable=>disposable.dispose())),this.disposables=[],this._datapackService&&(this._datapackService.dispose(),delete this._datapackService)}async initialize(){this.showStatus("$(sync) Connecting to Salesforce...");try{delete this.connector,this._salesforceService&&core_1.container.unregister(this._salesforceService),this._datapackService&&core_1.container.unregister(this._datapackService),this.config.sfdxUsername&&(await this.nsService.initialize(this),this._salesforceService=core_1.container.get(salesforceService_1.default),this._datapackService=await core_1.container.get(vlocityDatapackService_1.default).initialize()),this.updateExtensionStatus(this.config)}catch(err){this.logger.error(err),"NamedOrgNotFound"==(null==err?void 0:err.message)?this.showStatus(`$(error) Unknown Salesforce user: ${this.config.sfdxUsername}`,_constants_1.VlocodeCommand.selectOrg):this.showStatus("$(alert) Could not connect to Salesforce",_constants_1.VlocodeCommand.selectOrg)}}getDiagnostics(name){return this.diagnostics[name]?this.diagnostics[name]:this.registerDisposable(this.diagnostics[name]=vscode.languages.createDiagnosticCollection(name))}showStatus(text,command){this.createUpdateStatusBarItem("connection",{text,command,tooltip:"Click to select a different Salesforce org for Vlocode"})}showApiVersionStatusItem(){this.createUpdateStatusBarItem("apiVersion",{text:this.config.salesforce.apiVersion||"Select Salesforce API Version",tooltip:`Currently using API version ${this.config.salesforce.apiVersion}, click to select a different API version`,command:_constants_1.VlocodeCommand.selectApiVersion})}hideAllStatusBarItems(){for(const statusItem of Object.values(this.statusItems))statusItem.hide()}createUpdateStatusBarItem(localName,options){if(!this.statusItems[localName]){const priority=30-Object.keys(this.statusItems).length;this.statusItems[localName]=this.registerDisposable(vscode.window.createStatusBarItem(`${_constants_1.CONFIG_SECTION}.${localName}`,vscode.StatusBarAlignment.Left,priority))}for(const key of util_1.intersect(Object.keys(options),["text","tooltip","command"]))this.statusItems[localName][key]=options[key];return this.statusItems[localName].show(),this.statusItems[localName]}withProgress(title,task){return this.withActivity({progressTitle:title,cancellable:!1,location:vscode.ProgressLocation.Notification},"function"==typeof task?task:()=>task)}withCancelableProgress(title,task){return this.withActivity({progressTitle:title,cancellable:!0,location:vscode.ProgressLocation.Notification},task)}withStatusBarProgress(title,task){return this.withActivity({progressTitle:title,cancellable:!1,location:vscode.ProgressLocation.Window},"function"==typeof task?task:()=>task)}withActivity(input,task){const options="string"==typeof input?{activityTitle:input,progressTitle:input,propagateExceptions:!0,cancellable:task.length>2,location:vscode.ProgressLocation.Notification}:input,cancelTokenSource=options.cancellable?new vscode.CancellationTokenSource:void 0,onCompleteEmitter=new vscode.EventEmitter,activityRecord=util_1.observeObject({startTime:Date.now(),endTime:-1,cancellable:options.cancellable,title:options.activityTitle||options.progressTitle,status:vlocodeActivity_1.VlocodeActivityStatus.Pending,onComplete:onCompleteEmitter.event,cancel(){null==cancelTokenSource||cancelTokenSource.cancel()},dispose(){null==cancelTokenSource||cancelTokenSource.dispose(),onCompleteEmitter.dispose()}});return this.activities.push(activityRecord),this.registerDisposable(activityRecord),vscode.window.withProgress({title:options.progressTitle||options.activityTitle,cancellable:options.cancellable,location:options.location},(async(progress,token)=>{null==token||token.onCancellationRequested((()=>cancelTokenSource&&!cancelTokenSource.token.isCancellationRequested&&cancelTokenSource.cancel())),activityRecord.status=vlocodeActivity_1.VlocodeActivityStatus.InProgress;try{const result=await task((progress=>({report({message,increment,total,status}){progress.report({message,increment:total&&increment?increment/total*100:increment}),void 0!==status&&(activityRecord.status=status)}}))(progress),null==cancelTokenSource?void 0:cancelTokenSource.token);return activityRecord.status==vlocodeActivity_1.VlocodeActivityStatus.InProgress&&(activityRecord.status=vlocodeActivity_1.VlocodeActivityStatus.Completed),result}catch(e){if(activityRecord.status==vlocodeActivity_1.VlocodeActivityStatus.InProgress&&(activityRecord.status=vlocodeActivity_1.VlocodeActivityStatus.Failed),!1!==options.propagateExceptions)throw e;this.logger.error(e)}finally{(null==cancelTokenSource?void 0:cancelTokenSource.token.isCancellationRequested)&&(activityRecord.status=vlocodeActivity_1.VlocodeActivityStatus.Cancelled),activityRecord.endTime=Date.now(),onCompleteEmitter.fire(activityRecord)}}))}async getJsForceConnection(){if(!this.connector){if(!this.config.sfdxUsername)throw new Error("Cannot connect to Salesforce; no username specified in configuration");const connectorHooks=(new util_1.HookManager).registerHook({post:args=>{"getJsForceConnection"===args.name&&(args.returnValue=args.returnValue.catch((err=>this.handleGetConnectionError(args.target,err))).then((connection=>this.connectionHooks.attach(connection))))}});this.connector=connectorHooks.attach(new sfdxConnectionProvider_1.default(this.config.sfdxUsername))}const conn=await this.connector.getJsForceConnection();return this.config.salesforce.apiVersion&&(conn.version=this.config.salesforce.apiVersion),conn}async handleGetConnectionError(connector,err){if("RefreshTokenAuthError"!=(null==err?void 0:err.message))throw err;{const action=await vscode.window.showWarningMessage(`Your refresh token for ${this.config.sfdxUsername} has expired. Do you want to refresh it?`,{title:"Yes",refresh:!0},{title:"No",refresh:!1});if(!(null==action?void 0:action.refresh))throw new Error(`Unable to connect to Salesforce, the refresh token for ${this.config.sfdxUsername} has expired`);if((await this.refreshOAuthTokens()).accessToken)return connector.getJsForceConnection()}}refreshOAuthTokens(){return this.withActivity({progressTitle:`Refresh ${this.config.sfdxUsername} org credentials...`,location:vscode.ProgressLocation.Notification,propagateExceptions:!0,cancellable:!0},((progress,token)=>util_1.sfdx.refreshOAuthTokens(this.config.sfdxUsername,token)))}updateNamespaceHook({args}){for(let i=0;i<args.length;i++)"string"==typeof args[i]&&(args[i]=this.nsService.updateNamespace(args[i]))}async readWorkspaceFile(uri){const doc=vscode.workspace.textDocuments.find((doc=>doc.uri==uri));return doc?doc.getText():(await vscode.workspace.fs.readFile(uri)).toString()}updateExtensionStatus(config){return vscode.workspace.workspaceFolders&&0!=vscode.workspace.workspaceFolders.length?config.sfdxUsername?(this.setExtensionContext("orgSelected",!0),this.showStatus(`$(cloud-upload) Vlocode ${config.sfdxUsername}`,_constants_1.VlocodeCommand.selectOrg),void util_1.sfdx.getSfdxAlias(config.sfdxUsername).then((userAliasOrName=>this.showStatus(`$(cloud-upload) Vlocode ${userAliasOrName}`,_constants_1.VlocodeCommand.selectOrg)))):(this.setExtensionContext("orgSelected",!1),this.showStatus("$(gear) Select Salesforce org",_constants_1.VlocodeCommand.selectOrg)):(this.setExtensionContext("orgSelected",!1),this.hideAllStatusBarItems())}setExtensionContext(key,value){vscode.commands.executeCommand("setContext",`${_constants_1.CONTEXT_PREFIX}.${key}`,value)}registerDisposable(disposable){return util_1.isPromise(disposable)?disposable.then((result=>this.registerDisposable(result))):(this.disposables.push(disposable),disposable)}createConfigWatcher(){this.updateExtensionStatus(this.config),this.showApiVersionStatusItem(),this.disposables.push(config_1.ConfigurationManager.watchProperties(this.config,["sfdxUsername","projectPath","customJobOptionsYaml"],this.processConfigurationChange.bind(this)),config_1.ConfigurationManager.watchProperties(this.config.salesforce,["apiVersion"],this.processConfigurationChange.bind(this)))}async processConfigurationChange(){this.showStatus("$(sync) Processing config changes...",_constants_1.VlocodeCommand.selectOrg),await this.initialize(),this.showApiVersionStatusItem()}async validateSalesforceConnectivity(){if(!this.config.sfdxUsername){const message="Select a Salesforce instance for this workspace to use Vlocode";if(!await vscode.window.showInformationMessage(message,"Connect to Salesforce"))return message;if(await this.commands.execute(_constants_1.VlocodeCommand.selectOrg),!this.config.sfdxUsername)return"Salesforce org selection cancelled"}return this.connected||(await this.initialize(),this.connected)?await this.datapackService.isVlocityPackageInstalled()?void 0:"The Vlocity managed package is not installed on your Salesforce instance; select a different Salesforce instance or install Vlocity":"Unable to connect to Salesforce; are you connected to the Internet?"}validateWorkspaceFolder(){if(!vscode.workspace.workspaceFolders||0==vscode.workspace.workspaceFolders.length)return"No workspace folders detected. Open at least one folder in the current workspace to use Vlocode."}async validateAll(throwException){const validationResult=this.validateWorkspaceFolder()||await this.validateSalesforceConnectivity();if(validationResult){if(throwException)throw Error(validationResult);return validationResult}}enableSalesforceSupport(support){this.config.salesforce.enabled!==support&&(this.config.salesforce.enabled=support),vscode.commands.executeCommand("setContext","vlocodeSalesforceSupport",support),this.logger.info(`Salesforce support ${support?chalk.green("enabled"):chalk.red("disabled")}`)}enableDeveloperLogsPanel(enabled){this.config.salesforce.developerLogsVisible!==enabled&&(this.config.salesforce.developerLogsVisible=enabled),vscode.commands.executeCommand("setContext","vlocodeSalesforceDeveloperLogs",enabled),this.logger.info(`Salesforce developer logs view ${enabled?chalk.green("enabled"):chalk.red("disabled")}`)}updateApiVersion(apiVersion){if("string"==typeof apiVersion)return this.updateApiVersion(parseInt(apiVersion,10));this.logger.verbose(`Using Salesforce API version: ${apiVersion}`),this.config.salesforce.apiVersion=`${apiVersion}.0`}};__decorate([core_1.injectable.property,__metadata("design:typeinfo",{type:()=>vlocityNamespaceService_1.VlocityNamespaceService})],VlocodeService.prototype,"nsService",void 0),VlocodeService=VlocodeService_1=__decorate([core_1.injectable({provides:[jsForceConnectionProvider_1.default,VlocodeService_1]}),__metadata("design:typeinfo",{paramTypes:()=>[vlocodeConfiguration_1.default,commandRouter_1.default,core_1.Logger]})],VlocodeService),exports.default=VlocodeService},"./src/lib/workspaceContextDetector.ts":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.WorkspaceContextDetector=void 0;const path=__webpack_require__("path"),timers_1=__webpack_require__("timers"),constants=__webpack_require__("./src/constants.ts"),vscode=__webpack_require__("vscode"),fs=__webpack_require__("./node_modules/fs-extra/lib/index.js"),core_1=__webpack_require__("./packages/core/lib/index.js"),util_1=__webpack_require__("./packages/util/lib/index.js");let WorkspaceContextDetector=class WorkspaceContextDetector{constructor(editorContextKey,isApplicableFile,fs,logger){this.editorContextKey=editorContextKey,this.isApplicableFile=isApplicableFile,this.fs=fs,this.logger=logger,this.contextFiles={}}dispose(){var _a,_b;this.contextFiles={},null===(_a=this.workspaceFolderWatcher)||void 0===_a||_a.dispose(),null===(_b=this.workspaceFileWatcher)||void 0===_b||_b.dispose(),this.scheduledContextUpdate&&timers_1.clearTimeout(this.scheduledContextUpdate),vscode.commands.executeCommand("setContext",`${constants.CONTEXT_PREFIX}.${this.editorContextKey}`,null)}async initialize(){return this.workspaceFolderWatcher=vscode.workspace.onDidChangeWorkspaceFolders((async e=>{for(const removeWorkspace of e.removed)this.remove(removeWorkspace.uri.fsPath);for(const addedWorkspace of e.added)this.add(await this.getApplicableFiles(addedWorkspace.uri.fsPath));this.scheduleContextUpdate()})),this.workspaceFileWatcher=vscode.workspace.createFileSystemWatcher("**/*",!1,!0,!1),this.workspaceFileWatcher.onDidCreate((async newFile=>{const fsPath=newFile.fsPath;if(await this.fs.isDirectory(fsPath)){const folderFiles=await this.getApplicableFiles(fsPath);folderFiles.length&&(this.add(fsPath.split(/\\|\//).map(((v,i,p)=>[...p.slice(0,i),v].join(path.sep)))),this.add(folderFiles),this.scheduleContextUpdate())}else this.isApplicableFile(fsPath)&&(this.add(fsPath.split(/\\|\//).map(((v,i,p)=>[...p.slice(0,i),v].join(path.sep)))),this.scheduleContextUpdate())})),this.add(await this.getApplicableFoldersInWorkspace()),this.scheduleContextUpdate(),this}add(filePath){Array.isArray(filePath)?filePath.forEach((p=>this.add(p))):this.contextFiles[filePath]=!0}remove(filePath){delete this.contextFiles[filePath]}scheduleContextUpdate(){this.scheduledContextUpdate&&timers_1.clearTimeout(this.scheduledContextUpdate),this.scheduledContextUpdate=timers_1.setTimeout((()=>this.updateContext()),50)}async updateContext(){this.scheduledContextUpdate=void 0;const timer=new util_1.Timer;await vscode.commands.executeCommand("setContext",`${constants.CONTEXT_PREFIX}.${this.editorContextKey}`,this.contextFiles),this.logger.verbose(`Updated context ${constants.CONTEXT_PREFIX}.${this.editorContextKey} [${timer.stop()}]`)}async getApplicableFoldersInWorkspace(){var _a;const files=new Array;for(const workspace of null!==(_a=vscode.workspace.workspaceFolders)&&void 0!==_a?_a:[]){this.logger.info(`Probing workspace ${workspace.name} (${workspace.uri.path}) for ${this.editorContextKey}...`);const timer=new util_1.Timer,workspaceFiles=await this.getApplicableFiles(workspace.uri.fsPath);this.logger.info(`Detected ${workspaceFiles.length} applicable files for context [${this.editorContextKey}] in workspace ${workspace.name} [${timer.stop()}]`),files.push(...workspaceFiles)}return files}async getApplicableFiles(folder){const files=new Array,entries=await fs.readdir(folder,{withFileTypes:!0});for(const entry of entries){if(entry.name.startsWith(".")||"node_modules"==entry.name)continue;const fullPath=path.join(folder,entry.name);entry.isDirectory()?files.push(...await this.getApplicableFiles(fullPath)):this.isApplicableFile(entry.name)&&files.push(fullPath)}return files.length&&files.push(folder),files}};WorkspaceContextDetector=__decorate([core_1.injectable({lifecycle:core_1.LifecyclePolicy.transient}),__metadata("design:typeinfo",{paramTypes:()=>[String,Function,core_1.FileSystem,core_1.Logger]})],WorkspaceContextDetector),exports.WorkspaceContextDetector=WorkspaceContextDetector},"./src/symbolProviders/apexLogSymbolProvider.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ApexLogSymbolProvider=void 0;const vscode=__webpack_require__("vscode");exports.ApexLogSymbolProvider=class ApexLogSymbolProvider{constructor(){this.functionPattern=/^(?<time>[\d+:.]+) \(\d+\)\|(?<type>CONSTRUCTOR|METHOD|SYSTEM_METHOD)_(?<mode>ENTRY|EXIT)\|\[\d+\]\|(?<name>.*)$/,this.assignmentPattern=/^(?<time>[\d+:.]+) \(\d+\)\|VARIABLE_ASSIGNMENT\|\[\d+\]\|(?<name>.*)$/}async provideDocumentSymbols(document){return this.parseSymbols(this.getDocumentLineIterator(document))}parseSymbols(documentLines){const symbols=new Array;for(const line of documentLines){const functionMatch=line.text.match(this.functionPattern),assignmentMatch=line.text.match(this.assignmentPattern);if(null==functionMatch?void 0:functionMatch.groups){let type="CONSTRUCTOR"===functionMatch.groups.type?vscode.SymbolKind.Constructor:vscode.SymbolKind.Method;const symbolName=functionMatch.groups.name.split("|").pop()||"NAME_MISSING",symbolDetail=functionMatch.groups.name.split("|").slice(0,2).join("|");symbolName.includes(".__sfdc_")&&(type=vscode.SymbolKind.Property);const symbol=new vscode.DocumentSymbol(symbolName,symbolDetail,type,line.range,line.range);if("ENTRY"!==functionMatch.groups.mode)break;symbol.children.push(...this.parseSymbols(documentLines)),symbols.push(symbol)}if(null==assignmentMatch?void 0:assignmentMatch.groups){const type=vscode.SymbolKind.Variable,nameParts=assignmentMatch.groups.name.split("|"),symbolName=`${nameParts.shift()} = ${nameParts.shift()}`,symbolDetail=nameParts.join("|");symbols.push(new vscode.DocumentSymbol(symbolName,symbolDetail,type,line.range,line.range))}}return symbols}getDocumentLineIterator(document){return{index:0,next:function(){return this.index>=document.lineCount?{value:void 0,done:!0}:{value:document.lineAt(this.index++),done:!1}},[Symbol.iterator]:function(){return this}}}}},"./src/treeDataProviders/activityDataProvider.ts":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0});const vscode=__webpack_require__("vscode"),vlocodeActivity_1=__webpack_require__("./src/lib/vlocodeActivity.ts"),vlocodeService_1=__webpack_require__("./src/lib/vlocodeService.ts"),core_1=__webpack_require__("./packages/core/lib/index.js"),baseDataProvider_1=__webpack_require__("./src/treeDataProviders/baseDataProvider.ts");let ActivityDataProvider=class ActivityDataProvider extends baseDataProvider_1.default{constructor(service){super(service),this.vlocode.activities.onArrayChanged((event=>{var _a;null===(_a=event.newValues)||void 0===_a||_a.map((v=>v.onPropertyChanged((()=>this.dataChangedEmitter.fire(v))))),this.dataChangedEmitter.fire(void 0)}))}toTreeItem(node){return{label:this.getActivityLabel(node),contextValue:"vlocode:activity",tooltip:node.title,iconPath:this.getItemIconPath(this.getIcon(node)),description:this.getStatusLabel(node),collapsibleState:vscode.TreeItemCollapsibleState.None}}getIcon(node){switch(node.status){case vlocodeActivity_1.VlocodeActivityStatus.InProgress:return{light:"resources/light/loading.svg",dark:"resources/dark/loading.svg"};case vlocodeActivity_1.VlocodeActivityStatus.Completed:return{light:"resources/light/checked.svg",dark:"resources/dark/checked.svg"};case vlocodeActivity_1.VlocodeActivityStatus.Cancelled:return{light:"resources/light/error.svg",dark:"resources/dark/error.svg"};case vlocodeActivity_1.VlocodeActivityStatus.Failed:return{light:"resources/light/warning.svg",dark:"resources/dark/warning.svg"};default:return}}getStatusLabel(node){switch(node.status){case vlocodeActivity_1.VlocodeActivityStatus.InProgress:return"In progress";default:return vlocodeActivity_1.VlocodeActivityStatus[node.status]}}getActivityLabel(node){return node.title.replace(/[.]+$/gi,"")}getChildren(node){if(!node)return[...this.vlocode.activities].reverse()}};ActivityDataProvider=__decorate([core_1.injectable(),__metadata("design:typeinfo",{paramTypes:()=>[vlocodeService_1.default]})],ActivityDataProvider),exports.default=ActivityDataProvider},"./src/treeDataProviders/baseDataProvider.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const vscode=__webpack_require__("vscode"),vlocodeContext_1=__webpack_require__("./src/lib/vlocodeContext.ts"),uuid=__webpack_require__("./node_modules/uuid/dist/esm-node/index.js");exports.default=class BaseDataProvider{constructor(vlocode){this.vlocode=vlocode,this.dataChangedEmitter=new vscode.EventEmitter,this.clickHandlerGuid=uuid.v4(),this.vlocode.commands.registerAll(this.getCommands()),this.onClick&&this.vlocode.commands.register(this.clickHandlerGuid,this.onClick.bind(this)),this.initialize()}get onDidChangeTreeData(){return this.dataChangedEmitter.event}initialize(){}getAbsolutePath(path){return vlocodeContext_1.getContext().asAbsolutePath(path)}executeCommand(commandName,...args){return this.vlocode.commands.execute(commandName,...args)}refresh(node){this.dataChangedEmitter.fire(node)}getCommands(){return{}}getTreeItem(node){const item=this.toTreeItem(node);return item.command||(item.command={title:"Open",command:this.clickHandlerGuid,arguments:[node]}),item}getItemIconPath(icon){if(icon)return"string"==typeof icon?this.getAbsolutePath(icon):"object"==typeof icon?{light:this.getAbsolutePath(icon.light),dark:this.getAbsolutePath(icon.dark)}:void 0}}},"./src/treeDataProviders/datapackDataProvider.ts":function(__unused_webpack_module,exports,__webpack_require__){var DatapackDataProvider_1,__decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r};Object.defineProperty(exports,"__esModule",{value:!0});const constants=__webpack_require__("./src/constants.ts"),core_1=__webpack_require__("./packages/core/lib/index.js"),datapackUtil_1=__webpack_require__("./src/lib/vlocity/datapackUtil.ts"),util_1=__webpack_require__("./packages/util/lib/index.js"),exportQueryDefinitions=__webpack_require__("./src/exportQueryDefinitions.yaml"),datapackInfoService_1=__webpack_require__("./src/lib/vlocity/datapackInfoService.ts"),vscode_1=__webpack_require__("vscode"),openSalesforceCommand_1=__webpack_require__("./src/commands/openSalesforceCommand.ts"),baseDataProvider_1=__webpack_require__("./src/treeDataProviders/baseDataProvider.ts"),config_1=__webpack_require__("./src/lib/config/index.ts");let DatapackDataProvider=DatapackDataProvider_1=class DatapackDataProvider extends baseDataProvider_1.default{get logger(){return core_1.LogManager.get(DatapackDataProvider_1)}initialize(){config_1.ConfigurationManager.watchProperties(this.vlocode.config,["sfdxUsername"],(()=>this.refresh()))}async onExport(node){if(node.nodeType==DatapackNodeType.Category){const exportableNodes=(await this.vlocode.withStatusBarProgress("Loading exportable datapacks...",(()=>this.getChildren(node)))).map((node=>{if(node instanceof DatapackObjectGroupNode){const record=node.records.slice(-1)[0];return record&&{id:record.Id,datapackType:node.datapackType,sobjectType:record.attributes.type}}return node})).filter((node=>void 0!==node));return this.executeCommand(constants.VlocodeCommand.exportDatapack,...exportableNodes)}if(node.nodeType==DatapackNodeType.Object||node.nodeType==DatapackNodeType.SObjectRecord)return this.executeCommand(constants.VlocodeCommand.exportDatapack,node);if(node.nodeType==DatapackNodeType.SObjectType&&node instanceof DatapackSObjectTypeNode){const children=await this.vlocode.withStatusBarProgress("Loading exportable SObjects...",(()=>this.getExportableSObjectRecords(node.sobjectType)));return this.executeCommand(constants.VlocodeCommand.exportDatapack,...children)}}onRefresh(){util_1.clearCache(core_1.container.get(datapackInfoService_1.default)),util_1.clearCache(this.vlocode.salesforceService.schema),super.refresh()}getCommands(){return{"vlocode.datapackExplorer.export":async node=>this.onExport(node),"vlocode.datapackExplorer.openSalesforce":openSalesforceCommand_1.default,"vlocode.datapackExplorer.refresh":()=>this.onRefresh()}}get datapackService(){return this.vlocode.datapackService}get salesforceService(){return this.vlocode.salesforceService}toTreeItem(node){var _a,_b;return{id:node.getId(),label:node.getItemLabel(),tooltip:null===(_a=node.getItemTooltip)||void 0===_a?void 0:_a.call(node),iconPath:this.getItemIconPath(node.icon),description:null===(_b=node.getItemDescription)||void 0===_b?void 0:_b.call(node),contextValue:`vlocode:datapack:${node.nodeType}`,collapsibleState:"boolean"==typeof node.collapsibleState?node.collapsibleState?vscode_1.TreeItemCollapsibleState.Collapsed:vscode_1.TreeItemCollapsibleState.None:node.collapsibleState}}async getChildren(node){await this.vlocode.validateAll(!0);const nodeSorter=(a,b)=>a.getItemLabel().localeCompare(b.getItemLabel());try{return(await this.getNodes(node)).sort(nodeSorter)}catch(err){return[new DatapackErrorNode(err.message)]}}async getNodes(node){if(!node)return[new DatapackRootNode("Datapacks","Vlocity datapacks",vscode_1.TreeItemCollapsibleState.Expanded),new DatapackRootNode("SObjects","Generic SObjects",vscode_1.TreeItemCollapsibleState.Collapsed)];if(node instanceof DatapackRootNode){if("Datapacks"===node.label){return(await core_1.container.get(datapackInfoService_1.default).getDatapacks()).map((info=>new DatapackCategoryNode(info.datapackType)))}if("SObjects"===node.label)return this.getExportableSObjectTypes()}else{if(node instanceof DatapackCategoryNode)return this.expandCategoryNode(node);if(node instanceof DatapackObjectGroupNode)return this.createDatapackObjectNodes(node.records,node.datapackType);if(node instanceof DatapackSObjectTypeNode)return this.getExportableSObjectRecords(node.sobjectType)}throw new Error(`Specified node type is neither a Category or Group node: ${node.getItemLabel()} (${node.nodeType})`)}async expandCategoryNode(node){const records=await this.getExportableRecords(node.datapackType);if(!records||!records.length)return[new DatapackTextNode("No datapacks available")];const queryDefinition=await this.datapackService.getQueryDefinition(node.datapackType);return queryDefinition&&queryDefinition.groupKey?this.createDatapackGroupNodes(records,node.datapackType,queryDefinition.groupKey):this.createDatapackObjectNodes(records,node.datapackType)}async getExportableRecords(datapackType){const query=await this.getQuery(datapackType),results=await this.vlocode.salesforceService.query(query);return this.logger.log(`Found ${results.length} exportable datapacks form type ${datapackType}`),results}async getQuery(datapackType){const queryDefinition=await this.datapackService.getQueryDefinition(datapackType);if(queryDefinition&&queryDefinition.query)return util_1.addFieldsToQuery(queryDefinition.query,"Name");return`Select Id, Name from ${await core_1.container.get(datapackInfoService_1.default).getSObjectType(datapackType)}`}async getExportableSObjectTypes(){const customObjects=await this.vlocode.salesforceService.schema.describeSObjects(),datapacks=(await core_1.container.get(datapackInfoService_1.default).getDatapacks()).filter((dp=>!!dp.sobjectType));return customObjects.filter((record=>(sobject=>sobject.retrieveable&&sobject.updateable&&sobject.createable&&!sobject.deprecatedAndHidden)(record)&&!(sobject=>datapacks.some((dp=>util_1.normalizeSalesforceName(dp.sobjectType)===util_1.normalizeSalesforceName(sobject))))(record.name))).map((record=>new DatapackSObjectTypeNode(record.name)))}async getExportableSObjectRecords(sobjectType){var _a;const{fields}=await this.salesforceService.schema.describeSObject(sobjectType),nameField=(null===(_a=fields.find((field=>field.nameField)))||void 0===_a?void 0:_a.name)||"Id",records=await this.salesforceService.lookup(sobjectType,void 0,[nameField],2e3);return this.createDatapackObjectNodes(records,"SObject")}createDatapackGroupNodes(records,datapackType,groupByKey){const groupedRecords=util_1.groupBy(records,(r=>util_1.evalExpr(groupByKey,r)));return Object.keys(groupedRecords).map((key=>new DatapackObjectGroupNode(groupedRecords[key],datapackType)))}createDatapackObjectNodes(records,datapackType){return records.map((record=>new DatapackObjectNode(record,datapackType)))}};var DatapackNodeType;DatapackDataProvider=DatapackDataProvider_1=__decorate([core_1.injectable()],DatapackDataProvider),exports.default=DatapackDataProvider,function(DatapackNodeType){DatapackNodeType.Text="text",DatapackNodeType.Root="root",DatapackNodeType.Category="category",DatapackNodeType.Object="object",DatapackNodeType.ObjectGroup="objectGroup",DatapackNodeType.SObjectType="sobjectType",DatapackNodeType.SObjectRecord="sobject"}(DatapackNodeType||(DatapackNodeType={}));class DatapackNode{constructor(nodeType,collapsibleState=!1,icon){this.nodeType=nodeType,this.collapsibleState=collapsibleState,this.icon=icon}}class DatapackTextNode extends DatapackNode{constructor(text,icon){super(DatapackNodeType.Text,!1,icon),this.text=text,this.icon=icon}getId(){return this.getItemLabel()}getItemLabel(){return this.text}}class DatapackRootNode extends DatapackNode{constructor(label,desc,collapsibleState,icon){super(DatapackNodeType.Root,collapsibleState,icon),this.label=label,this.desc=desc,this.getId=()=>`root:${this.getItemLabel()}`,this.getItemLabel=()=>this.label,this.getItemDescription=()=>this.desc}}class DatapackErrorNode extends DatapackTextNode{constructor(text){super(text,{light:"resources/light/error.svg",dark:"resources/dark/error.svg"})}}class DatapackCategoryNode extends DatapackNode{constructor(datapackType){super(DatapackNodeType.Category,!0),this.datapackType=datapackType,this.getId=()=>`${this.nodeType}:${this.getItemLabel()}`,this.getItemLabel=()=>this.datapackType,this.getItemTooltip=()=>`View datapacks of type ${this.datapackType}`}}class DatapackObjectGroupNode extends DatapackNode{constructor(records,datapackType){super(DatapackNodeType.ObjectGroup,!0,{light:"resources/light/package.svg",dark:"resources/dark/package.svg"}),this.records=records,this.datapackType=datapackType,this.getId=()=>`${this.datapackType}-${this.getItemLabel()}`,this.getItemLabel=()=>util_1.evalExpr(this.getLabelFormat(),this.records[0]),this.getItemTooltip=()=>`Found ${this.records.length} versions`}getItemDescription(){const nodeConfig=exportQueryDefinitions[this.datapackType];return nodeConfig&&nodeConfig.groupDescription?util_1.evalExpr(nodeConfig.groupDescription,{...this.records[0],count:this.records.length}):`${this.records.length} version(s)`}getLabelFormat(){const nodeConfig=exportQueryDefinitions[this.datapackType];return nodeConfig&&nodeConfig.groupName?nodeConfig.groupName:"'<NO_GROUP_NAME>' + Id"}}class DatapackSObjectTypeNode extends DatapackNode{constructor(sobjectType){super(DatapackNodeType.SObjectType,!0),this.sobjectType=sobjectType,this.getId=()=>`SObject_${this.sobjectType}`,this.getItemLabel=()=>this.sobjectType}}class DatapackObjectNode extends DatapackNode{constructor(record,datapackType){super(DatapackNodeType.Object,!1,{light:"resources/light/package.svg",dark:"resources/dark/package.svg"}),this.record=record,this.datapackType=datapackType,this.getId=()=>this.id,this.getItemTooltip=()=>{var _a;return null===(_a=this.record.attributes)||void 0===_a?void 0:_a.url}}getItemLabel(){const nodeConfig=exportQueryDefinitions[this.datapackType];return nodeConfig&&nodeConfig.name?util_1.evalExpr(nodeConfig.name,this.record):datapackUtil_1.default.getLabel(this.record)}getItemDescription(){const nodeConfig=exportQueryDefinitions[this.datapackType];return nodeConfig&&nodeConfig.description?util_1.evalExpr(nodeConfig.description,this.record):this.id}get sobjectType(){var _a;return null===(_a=this.record.attributes)||void 0===_a?void 0:_a.type}get id(){return this.record.Id}get name(){var _a;return null!==(_a=this.record.Name)&&void 0!==_a?_a:"<NO_NAME>"}}},"./src/treeDataProviders/developerLogDataProvider.ts":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0});const vscode=__webpack_require__("vscode"),vlocodeService_1=__webpack_require__("./src/lib/vlocodeService.ts"),moment=__webpack_require__("./node_modules/moment/moment.js"),config_1=__webpack_require__("./src/lib/config/index.ts"),_constants_1=__webpack_require__("./src/constants.ts"),debugLogViewer_1=__webpack_require__("./src/lib/salesforce/debugLogViewer.ts"),core_1=__webpack_require__("./packages/core/lib/index.js"),baseDataProvider_1=__webpack_require__("./src/treeDataProviders/baseDataProvider.ts");let DeveloperLogDataProvider=class DeveloperLogDataProvider extends baseDataProvider_1.default{constructor(service,logger){super(service),this.logger=logger,this.logs=[],this.autoRefreshingPaused=!0,this.currentUserOnly=!1,this.autoRefreshInterval=3e3,config_1.ConfigurationManager.watchProperties(this.vlocode.config,["sfdxUsername"],(config=>{this.lastRefresh=void 0,this.logs.splice(0),config.sfdxUsername&&this.refresh()})),config_1.ConfigurationManager.watchProperties(this.vlocode.config.salesforce,["developerLogsVisible"],(config=>{service.enableDeveloperLogsPanel(config.developerLogsVisible)}),{initial:!0}),config_1.ConfigurationManager.watchProperties(this.vlocode.config.salesforce,["developerLogsAutoRefresh"],(config=>{this.enableAutoRefresh(!!config.developerLogsAutoRefresh)}),{initial:!0}),config_1.ConfigurationManager.watchProperties(this.vlocode.config.salesforce,["developerLogsVisibility"],(config=>{this.currentUserOnly="all"!=config.developerLogsVisibility,this.lastRefresh=void 0,this.refresh()}),{initial:!0})}dispose(){this.enableAutoRefresh(!1)}getCommands(){return{"vlocode.developerLogs.refresh":this.refresh.bind(this),"vlocode.developerLogs.setLogLevel":async()=>{await this.executeCommand(_constants_1.VlocodeCommand.setTraceFlags)},"vlocode.developerLogs.setLogVisibility":async()=>{await this.executeCommand(_constants_1.VlocodeCommand.setLogVisibility)},"vlocode.developerLogs.deleteAll":async()=>{await this.executeCommand(_constants_1.VlocodeCommand.clearDeveloperLogs),this.logs.splice(0),this.refresh()}}}enableAutoRefresh(enabled){enabled?this.scheduleRefresh(3e3):this.autoRefreshScheduledId&&clearTimeout(this.autoRefreshScheduledId)}pauseAutoRefresh(paused){this.autoRefreshingPaused=paused}scheduleRefresh(timeout){this.autoRefreshScheduledId&&clearTimeout(this.autoRefreshScheduledId),this.autoRefreshScheduledId=setTimeout(this.refreshTask.bind(this),timeout)}async refreshTask(){this.autoRefreshScheduledId=null;try{!this.autoRefreshingPaused&&await this.refreshLogs()&&this.refresh()}catch(err){this.logger.error(err)}finally{this.scheduleRefresh(this.autoRefreshInterval)}}async onClick(log){(new debugLogViewer_1.DebugLogViewer).showDeveloperLog(log)}toTreeItem(log){return{id:log.id,label:this.getLabel(log),description:this.getStatusLabel(log),contextValue:"salesforce:developerLog",tooltip:this.getTooltip(log),iconPath:this.getItemIconPath(this.getIcon(log)),collapsibleState:vscode.TreeItemCollapsibleState.None}}getIcon(node){return{light:"resources/light/log.svg",dark:"resources/dark/log.svg"}}getTooltip(log){return`${log.status} - ${moment(log.startTime).format("M/D/YYYY HH:mm:ss")}`}getStatusLabel(log){return`${moment(log.startTime).format("M/D/YYYY HH:mm:ss")} (${(log.durationMilliseconds/1e3).toFixed(2)}s) - ${Math.floor(log.size/102.4)/10}KB`}getLabel(log){return this.currentUserOnly?`${log.request}: ${log.operation}`:`${log.request}: ${log.operation} <${log.user}>`}async getChildren(node){if(!node)return this.lastRefresh&&Date.now()-this.lastRefresh.getTime()<500||await this.refreshLogs(),this.logs}async refreshLogs(){await this.vlocode.validateAll(!0);const refreshDate=new Date,latestLogs=await this.vlocode.salesforceService.getDeveloperLogs(this.lastRefresh,this.currentUserOnly);this.lastRefresh=refreshDate;const uniqueLogEntries=new Map(this.logs.concat(latestLogs).map((item=>[item.id,item])));let newLogs=Array.from(uniqueLogEntries.values());return newLogs.length!=this.logs.length&&(newLogs=newLogs.filter((log=>"<empty>"!=log.operation||log.size>5120)),this.logs=newLogs.sort(((a,b)=>b.startTime.getTime()-a.startTime.getTime())),this.logs.splice(100),!0)}};DeveloperLogDataProvider=__decorate([core_1.injectable(),__metadata("design:typeinfo",{paramTypes:()=>[vlocodeService_1.default,core_1.Logger]})],DeveloperLogDataProvider),exports.default=DeveloperLogDataProvider},"./src/treeDataProviders/jobExplorer.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const path=__webpack_require__("path"),vscode=__webpack_require__("vscode"),fs=__webpack_require__("./node_modules/fs-extra/lib/index.js"),core_1=__webpack_require__("./packages/core/lib/index.js"),yaml=__webpack_require__("./node_modules/js-yaml/dist/js-yaml.mjs"),util_1=__webpack_require__("./packages/util/lib/index.js"),baseDataProvider_1=__webpack_require__("./src/treeDataProviders/baseDataProvider.ts");class JobDataProvider extends baseDataProvider_1.default{constructor(){super(...arguments),this.jobCommandOptions=[{type:"Export",icon:"cloud-download",label:"Run as Export",detail:"retrieve and save Vlocity datapacks on your local machine"},{type:"Deploy",icon:"cloud-upload",label:"Run as Deploy",detail:"upload and deploy previously exported Vlocity datapacks"}]}getCommands(){return{"vlocode.jobExplorer.run":async node=>this.runJob(node),"vlocode.jobExplorer.refresh":()=>this.refresh()}}async runJob(node){const jobCommand=await vscode.window.showQuickPick(this.jobCommandOptions,{placeHolder:"Select how to run this job",ignoreFocusOut:!0});if(jobCommand)try{await this.vlocode.withActivity({location:vscode.ProgressLocation.Notification,progressTitle:`${jobCommand.type}ing with ${path.basename(node.jobFile.fsPath)} ...`,cancellable:!0},((progress,token)=>this.datapackService.runYamlJob(jobCommand.type,node.jobFile.fsPath,token))),vscode.window.showInformationMessage(`Successfully ${jobCommand.type.toLowerCase()}ed with ${path.basename(node.jobFile.fsPath)}`)}catch(err){vscode.window.showErrorMessage(`Running job file ${path.basename(node.jobFile.fsPath)} resulted in an error, see the log for details.`)}}get datapackService(){return this.vlocode.datapackService}get logger(){return core_1.LogManager.get(JobDataProvider)}toTreeItem(node){return{label:node.label,resourceUri:node.jobFile,command:{title:"Open",command:"vscode.open",arguments:[node.jobFile]},contextValue:"vlocode:jobYaml",tooltip:node.tooltip,description:node.description,collapsibleState:vscode.TreeItemCollapsibleState.None}}isValidJob(job){return!(!job||!Array.isArray(job.queries))&&job.queries.every((query=>!!query.VlocityDataPackType))}async getChildren(node){const yamlFiles=await vscode.workspace.findFiles("**/*.yaml"),yamlFilesWithBody=await Promise.all(yamlFiles.map((async file=>{try{return{file,body:yaml.load((await fs.readFile(file.fsPath)).toString("utf8"),{filename:file.fsPath})}}catch(err){this.logger.error(`Unable to load YAML file ${file} due to parsing error: ${err.message||err}`)}})));this.logger.info(`Found ${yamlFilesWithBody.length} YAML files in workspace folders`);const validJobFiles=util_1.filterUndefined(yamlFilesWithBody).filter((file=>this.isValidJob(file.body)));return this.logger.info(`Displaying ${validJobFiles.length} valid Job files in Job explorer`),validJobFiles.map((({file})=>new JobNode(file)))}}exports.default=JobDataProvider;class JobNode{constructor(jobFile){this.jobFile=jobFile}get label(){return path.basename(this.jobFile.fsPath)}get tooltip(){return this.jobFile.fsPath}get description(){return vscode.workspace.asRelativePath(this.jobFile)}}},"./node_modules/typescript/lib sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/typescript/lib sync recursive",module.exports=webpackEmptyContext},"./node_modules/vlocity/lib sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/vlocity/lib sync recursive",module.exports=webpackEmptyContext},"./packages/core/lib/container.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.container=exports.Container=exports.LifecyclePolicy=void 0,__webpack_require__("./node_modules/reflect-metadata/Reflect.js");const stream_1=__webpack_require__("stream"),util_1=__webpack_require__("./packages/util/lib/index.js"),unique_names_generator_1=__webpack_require__("./node_modules/unique-names-generator/dist/index.m.js"),logging_1=__webpack_require__("./packages/core/lib/logging/index.js");var LifecyclePolicy;!function(LifecyclePolicy){LifecyclePolicy[LifecyclePolicy.singleton=1]="singleton",LifecyclePolicy[LifecyclePolicy.transient=2]="transient"}(LifecyclePolicy=exports.LifecyclePolicy||(exports.LifecyclePolicy={}));const lazyMarker=Symbol("[[Container:Lazy]]"),lazyTarget=Symbol("[[Container:LazyTarget]]"),lazyIsResolved=Symbol("[[Container:LazyIsResolved]]"),serviceGuidSymbol=Symbol("[[Container:ServiceGuid]]"),uniqueNameConfig={dictionaries:[unique_names_generator_1.adjectives,unique_names_generator_1.animals],separator:"-",style:"lowerCase",length:2};class Container{constructor(logger=logging_1.LogManager.get(Container),parent){this.logger=logger,this.parent=parent,this.instances=new Map,this.resolveStack=new Array,this.serviceDependencies=new Map,this.servicesProvided=Symbol("[[Container:ServicesProvided]]"),this.containerGuid=unique_names_generator_1.uniqueNamesGenerator(uniqueNameConfig),this.factories=new Map,this.serviceTypes=new Map,this.providers=new Map,logger.verbose(`Starting IoC container: ${this.containerGuid} (${parent?"CHILD":"MAIN"})`)}new(options){return new Container(this.logger,(null==options?void 0:options.isolated)?void 0:this)}dispose(){this.factories.clear(),this.providers.clear();for(const instance of this.instances)"function"==typeof instance.dispose&&instance.dispose()}resolve(service,overrideLifecycle,receiver,resolver=this){const serviceName=this.getServiceName(service);if("Object"==serviceName)return;const provider=this.providers.get(serviceName);if(provider&&receiver)return provider(receiver);const currentInstance=this.instances.get(serviceName);if(currentInstance&&overrideLifecycle!=LifecyclePolicy.transient)return currentInstance;const factory=this.factories.get(serviceName);if(factory){const instance=factory.new();return(null!=overrideLifecycle?overrideLifecycle:factory.lifecycle)===LifecyclePolicy.singleton?resolver.registerAs(resolver.register(instance),service):instance}const type=this.serviceTypes.get(serviceName);if(type){const circularReference=this.resolveStack.includes(type.ctor.name),instance=this.createLazyProxy((()=>this.resolve(service,overrideLifecycle,receiver,resolver)),type.ctor.prototype);if(circularReference)return this.logger.verbose(`Resolving circular reference as lazy: ${this.resolveStack.join("->")}->${type.ctor.name}`),instance;this.resolveStack.push(type.ctor.name),instance[lazyTarget].setInstance(resolver.createInstance(type.ctor)),this.resolveStack.pop();return(null!=overrideLifecycle?overrideLifecycle:type.lifecycle)===LifecyclePolicy.singleton?resolver.registerAs(resolver.register(instance),service):instance}if(this.parent)return this.parent.resolve(service,overrideLifecycle,receiver,resolver);this.logger.warn(`Unable to resolve implementation for ${serviceName} requested by ${null==receiver?void 0:receiver.name}`)}create(ctor,...params){return this.createInstance(ctor,params)}get(service,overrideLifecycle){const instance=this.resolve(service,overrideLifecycle);if(void 0===instance)throw new Error(`Unable to resolve implementation for ${this.getServiceName(service)}`);return instance}register(instances){for(const instance of util_1.asArray(instances)){const provides=Reflect.getMetadata("service:provides",Object.getPrototypeOf(instance).constructor);if(null==provides?void 0:provides.length)for(const serviceType of provides)this.registerAs(instance,serviceType);else"Object"!==instance.constructor.name&&this.registerAs(instance,instance.constructor)}return instances}createInstance(ctor,args=[]){const instanceGuid=this.generateServiceGuid(ctor);return(()=>{const resolvedArgs=this.resolveParameters(ctor,args,instanceGuid),instance=this.decorateWithServiceGuid(new ctor(...resolvedArgs),instanceGuid);return this.resolveProperties(instance)})()}resolveParameters(ctor,args=[],instanceGuid){var _a;if(0==ctor.length)return args;const paramTypes=util_1.getCtorParameterTypes(ctor);if(!paramTypes)throw new Error("Cannot resolve parameters of an object without design time decoration");for(let i=0;i<paramTypes.length;i++){if(!0===Reflect.getMetadata(`dependency:inject:${i}:ignore`,ctor)||void 0!==args[i])continue;const serviceType=null!==(_a=Reflect.getMetadata(`dependency:inject:${i}`,ctor))&&void 0!==_a?_a:paramTypes[i];serviceType&&(args[i]=this.resolve(serviceType,void 0,ctor),instanceGuid&&void 0!==args[i]&&this.registerDependentService(instanceGuid,args[i]))}return args}resolveProperties(instance){var _a;const prototype=Object.getPrototypeOf(instance),properties=null!==(_a=Reflect.getMetadata("service:properties",prototype))&&void 0!==_a?_a:[];for(const property of properties){if(void 0!==instance[property])continue;const typeInfo=util_1.getPropertyType(prototype,property);if(!typeInfo)throw new Error("Code compiled with emitting required type metadata");const resolvedPropertyValue=this.resolve(typeInfo,void 0,prototype.constructor);resolvedPropertyValue&&(instance[property]=resolvedPropertyValue,this.registerDependentService(instance[serviceGuidSymbol],resolvedPropertyValue))}return instance}generateServiceGuid(ctor){return`${"function"==typeof ctor?ctor.name:Object.getPrototypeOf(ctor).constructor.name}-${unique_names_generator_1.uniqueNamesGenerator(uniqueNameConfig)}`}decorateWithServiceGuid(instance,guid){return instance[serviceGuidSymbol]||(instance[serviceGuidSymbol]=null!=guid?guid:guid=this.generateServiceGuid(instance)),instance}registerDependentService(serviceGuid,dependsOn){const dependencyGuid=dependsOn[serviceGuidSymbol];this.isLazyProxy(dependsOn)&&!dependsOn[lazyIsResolved]?dependsOn[lazyTarget].once("resolved",(instance=>this.registerDependentService(serviceGuid,instance))):dependencyGuid&&util_1.arrayMapPush(this.serviceDependencies,dependencyGuid,serviceGuid)}unregister(instance){var _a;const instanceGuid=instance[serviceGuidSymbol];if(!instanceGuid)return;this.logger.debug(`Unregister: ${instance.constructor.name} (${instance[serviceGuidSymbol]}) (${this.containerGuid})`),null===(_a=instance[this.servicesProvided])||void 0===_a||_a.clear(),instance[serviceGuidSymbol]=void 0;const activeInstanceByGuid=new Map([...this.instances.values()].map((i=>[i[serviceGuidSymbol],i]))),dependentServices=this.serviceDependencies.get(instanceGuid);for(const[service,activeInstance]of this.instances.entries())activeInstance===instance&&this.instances.delete(service);for(const dependentServiceGuid of null!=dependentServices?dependentServices:[]){const dependentInstance=activeInstanceByGuid.get(dependentServiceGuid);dependentInstance&&this.unregister(dependentInstance)}"function"==typeof instance.dispose&&instance.dispose()}registerAs(instance,services){this.decorateWithServiceGuid(instance,this.generateServiceGuid(instance));for(const service of util_1.Iterable.asIterable(services)){const providedService=this.getServiceName(service),providedServices=instance[this.servicesProvided]||(instance[this.servicesProvided]=new Set);providedServices.has(providedService)||(this.instances.has(providedService)&&this.logger.warn(`Overriding existing service from ${this.instances.get(providedService.constructor.name)}->${instance.constructor.name}`),this.logger.debug(`Register: ${instance.constructor.name} as [${providedService}] (${instance[serviceGuidSymbol]}) (container: ${this.containerGuid})`),this.instances.set(providedService,instance),providedServices.add(providedService))}return instance}registerFactory(services,factory,lifecycle){for(const service of util_1.Iterable.asIterable(services))this.logger.debug(`Register factory for: ${this.getServiceName(service)}`),this.factories.set(this.getServiceName(service),{new:factory,lifecycle})}registerType(services,type,lifecycle){for(const service of util_1.Iterable.asIterable(services))this.logger.debug(`Register service type for: ${this.getServiceName(service)}`),this.serviceTypes.set(this.getServiceName(service),{ctor:type,lifecycle})}registerProvider(service,provider){this.logger.debug(`Register provider for: ${this.getServiceName(service)}`),this.providers.set(this.getServiceName(service),provider)}getServiceName(service){return"string"==typeof service?service:service.name}isLazyProxy(obj){return 1==obj[lazyMarker]}createLazyProxy(factory,prototype){return new Proxy(new ProxyTarget(factory),{get(target,prop){var _a;return prop===lazyMarker||(prop===lazyIsResolved?!!target.instance:prop===lazyTarget?target:prop===serviceGuidSymbol?null===(_a=target.instance)||void 0===_a?void 0:_a[serviceGuidSymbol]:target.instance||"function"!=typeof prototype[prop]?target.getInstance()[prop]:function(...args){return prototype[prop].apply(this,args)})},set:(target,prop,value)=>prop!==lazyMarker&&prop!==lazyTarget&&prop!==lazyIsResolved&&("function"!=typeof prototype[prop]&&(target.getInstance()[prop]=value,!0)),has:(target,prop)=>prop in target.getInstance(),getOwnPropertyDescriptor:(target,prop)=>Object.getOwnPropertyDescriptor(target.getInstance(),prop),getPrototypeOf:()=>prototype,ownKeys:target=>Object.keys(target.getInstance())})}}exports.Container=Container;class ProxyTarget extends stream_1.EventEmitter{constructor(factory){super(),this.factory=factory}setInstance(instance){this.instance=instance}getInstance(){return this.instance||this.emit("resolved",this.instance=this.factory()),this.instance}}exports.container=util_1.singleton(Container)},"./packages/core/lib/fs/cachedFileSystem.js":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.CachedFileSystemAdapter=void 0;const util_1=__webpack_require__("./packages/util/lib/index.js"),types_1=__webpack_require__("./packages/core/lib/fs/types.js");class CachedFileSystemAdapter extends types_1.FileSystem{constructor(innerFs){super(),this.innerFs=innerFs}async readFileAsString(fileName,encoding="utf-8"){return(await this.readFile(fileName)).toString(encoding)}clearCache(){util_1.clearCache(this)}readFile(fileName){return this.innerFs.readFile(fileName)}stat(path,options){return this.innerFs.stat(path,options)}readDirectory(path){return this.innerFs.readDirectory(path)}findFiles(patterns){return this.innerFs.findFiles(patterns)}}__decorate([util_1.cache(),__metadata("design:typeinfo",{type:()=>Function,paramTypes:()=>[String],returnType:()=>Promise})],CachedFileSystemAdapter.prototype,"readFile",null),__decorate([util_1.cache(),__metadata("design:typeinfo",{type:()=>Function,paramTypes:()=>[String,Object],returnType:()=>Promise})],CachedFileSystemAdapter.prototype,"stat",null),exports.CachedFileSystemAdapter=CachedFileSystemAdapter},"./packages/core/lib/fs/index.js":function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__("./packages/core/lib/fs/types.js"),exports),__exportStar(__webpack_require__("./packages/core/lib/fs/nodeFileSystem.js"),exports),__exportStar(__webpack_require__("./packages/core/lib/fs/memoryFileSystem.js"),exports),__exportStar(__webpack_require__("./packages/core/lib/fs/cachedFileSystem.js"),exports)},"./packages/core/lib/fs/memoryFileSystem.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MemoryFileSystem=void 0;const memfs_1=__webpack_require__("./node_modules/memfs/lib/index.js"),nodeFileSystem_1=__webpack_require__("./packages/core/lib/fs/nodeFileSystem.js");class MemoryFileSystem extends nodeFileSystem_1.NodeFileSystem{constructor(files={}){super(memfs_1.Volume.fromJSON(files))}}exports.MemoryFileSystem=MemoryFileSystem},"./packages/core/lib/fs/nodeFileSystem.js":function(__unused_webpack_module,exports,__webpack_require__){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.NodeFileSystem=void 0;const fs=__webpack_require__("fs"),path=__webpack_require__("path"),globby=__webpack_require__("./node_modules/globby/index.js"),index_1=__webpack_require__("./packages/core/lib/index.js"),types_1=__webpack_require__("./packages/core/lib/fs/types.js");let NodeFileSystem=class NodeFileSystem extends types_1.FileSystem{constructor(innerFs=fs){super(),this.innerFs=innerFs}async stat(path,options){return new Promise(((resolve,reject)=>this.innerFs.stat(path,((err,result)=>{err?(null==options?void 0:options.throws)?reject(err):resolve(void 0):resolve(result)}))))}readFile(path){return new Promise(((resolve,reject)=>this.innerFs.readFile(path,((err,result)=>{err?reject(err):resolve(result)}))))}readDirectory(path){return new Promise(((resolve,reject)=>this.innerFs.readdir(path,((err,result)=>{err?reject(err):resolve(result)}))))}findFiles(patterns){return globby(this.normalizeGlobPatterns(patterns),{fs:{lstat:this.innerFs.lstat.bind(this.innerFs),stat:this.innerFs.stat.bind(this.innerFs),lstatSync:this.innerFs.lstatSync.bind(this.innerFs),statSync:this.innerFs.statSync.bind(this.innerFs),readdir:this.innerFs.readdir.bind(this.innerFs),readdirSync:this.innerFs.readdirSync.bind(this.innerFs)}})}normalizeGlobPatterns(patterns){return"string"==typeof patterns?patterns.replace(/[/\\]+/g,path.posix.sep):patterns.map(this.normalizeGlobPatterns,this)}};NodeFileSystem=__decorate([index_1.injectable({provides:types_1.FileSystem,lifecycle:index_1.LifecyclePolicy.singleton}),__metadata("design:typeinfo",{paramTypes:()=>[Object]})],NodeFileSystem),exports.NodeFileSystem=NodeFileSystem},"./packages/core/lib/fs/types.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.FileSystem=void 0;exports.FileSystem=class FileSystem{async isFile(path){var _a;return 1==(null===(_a=await this.stat(path))||void 0===_a?void 0:_a.isFile())}async isDirectory(path){var _a;return 1==(null===(_a=await this.stat(path))||void 0===_a?void 0:_a.isDirectory())}async pathExists(path){return void 0!==await this.stat(path)}async readFileAsString(path,encoding="utf-8"){return(await this.readFile(path)).toString(encoding)}}},"./packages/core/lib/index.js":function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__("./packages/core/lib/container.js"),exports),__exportStar(__webpack_require__("./packages/core/lib/inject.js"),exports),__exportStar(__webpack_require__("./packages/core/lib/fs/index.js"),exports),__exportStar(__webpack_require__("./packages/core/lib/logging/index.js"),exports),__exportStar(__webpack_require__("./packages/core/lib/logging/writers/index.js"),exports)},"./packages/core/lib/inject.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ignore=exports.injectable=exports.DesignTimeParameters=void 0,__webpack_require__("./node_modules/reflect-metadata/Reflect.js");const util_1=__webpack_require__("./packages/util/lib/index.js"),container_1=__webpack_require__("./packages/core/lib/container.js");exports.DesignTimeParameters=Symbol("[[DesignTimeParameters]]"),exports.injectable=Object.assign((function injectable(options){var _a;const lifecycle=(null==options?void 0:options.lifecycle)||container_1.LifecyclePolicy.singleton,services=util_1.asArray(null!==(_a=null==options?void 0:options.provides)&&void 0!==_a?_a:[]);return function(ctor){for(const serviceType of services)container_1.container.registerType(serviceType,ctor,lifecycle);return ctor.name&&container_1.container.registerType(ctor,ctor,lifecycle),Reflect.defineMetadata("service:provides",services,ctor),Reflect.defineMetadata("service:lifecycle",lifecycle,ctor),Object.defineProperty(class extends ctor{constructor(...args){container_1.container.resolveParameters(ctor,args),super(...args),container_1.container.resolveProperties(this)}},"name",{value:ctor.name,configurable:!1,writable:!1})}}),{transient:function(options){return this({...options,lifecycle:container_1.LifecyclePolicy.transient})},singleton:function(options){return this({...options,lifecycle:container_1.LifecyclePolicy.singleton})},property:function(target,propertyKey){var _a;const properties=(null!==(_a=Reflect.getMetadata("service:properties",target))&&void 0!==_a?_a:[]).concat([propertyKey]);Reflect.defineMetadata("service:properties",properties,target)},param:function(serviceType){return function(target,propertyKey,parameterIndex){var _a,_b,_c;const serviceName="string"==typeof serviceType?serviceType:null!==(_c=null===(_b=null===(_a=serviceType.prototype)||void 0===_a?void 0:_a.constructor)||void 0===_b?void 0:_b.name)&&void 0!==_c?_c:serviceType.name;Reflect.defineMetadata(`dependency:inject:${parameterIndex}`,serviceName,target)}}}),exports.ignore=function ignore(target,propertyKey,parameterIndex){Reflect.defineMetadata(`dependency:inject:${parameterIndex}:ignore`,!0,target)}},"./packages/core/lib/logging/index.js":function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.LogManager=exports.withLogger=exports.LogLevel=void 0;const util_1=__webpack_require__("./packages/util/lib/index.js"),logManager_1=__webpack_require__("./packages/core/lib/logging/logManager.js");var LogLevel;!function(LogLevel){LogLevel[LogLevel.debug=0]="debug",LogLevel[LogLevel.verbose=1]="verbose",LogLevel[LogLevel.info=2]="info",LogLevel[LogLevel.warn=3]="warn",LogLevel[LogLevel.error=4]="error",LogLevel[LogLevel.fatal=5]="fatal"}(LogLevel=exports.LogLevel||(exports.LogLevel={})),__exportStar(__webpack_require__("./packages/core/lib/logging/logger.js"),exports),__exportStar(__webpack_require__("./packages/core/lib/logging/logManager.js"),exports),exports.withLogger=function withLogger(constructor){return class extends constructor{constructor(){super(...arguments),this.logger=exports.LogManager.get(constructor)}}},exports.LogManager=util_1.singleton(logManager_1.default,LogLevel.info)},"./packages/core/lib/logging/logLevels.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LogLevel=void 0,function(LogLevel){LogLevel[LogLevel.debug=0]="debug",LogLevel[LogLevel.verbose=1]="verbose",LogLevel[LogLevel.info=2]="info",LogLevel[LogLevel.warn=3]="warn",LogLevel[LogLevel.error=4]="error",LogLevel[LogLevel.fatal=5]="fatal"}(exports.LogLevel||(exports.LogLevel={}))},"./packages/core/lib/logging/logManager.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const util_1=__webpack_require__("./packages/util/lib/index.js"),logger_1=__webpack_require__("./packages/core/lib/logging/logger.js"),logLevels_1=__webpack_require__("./packages/core/lib/logging/logLevels.js"),queueWriter_1=__webpack_require__("./packages/core/lib/logging/writers/queueWriter.js");exports.default=class LogManager{constructor(globalLogLevel){this.globalLogLevel=globalLogLevel,this.activeLoggers={},this.detailedLogLevels={},this.logFilters={},this.logWriters={},this.logWriterChain=[],this.earlyWriter=new queueWriter_1.QueueWriter,this.debug=!1}get(type){const name="string"==typeof type?type:type.name;return this.activeLoggers[name]||(this.activeLoggers[name]=this.createLogger(name))}setGlobalLogLevel(level){this.globalLogLevel!=level&&(this.debug&&console.info(`# Changed global logging level from ${logLevels_1.LogLevel[this.globalLogLevel]} to ${logLevels_1.LogLevel[level]}`),this.globalLogLevel=level)}getGlobalLogLevel(){return this.globalLogLevel}registerWriter(...writers){const flushEarlyWiteQueue=!this.logWriterChain.length;this.logWriterChain.push(...writers),flushEarlyWiteQueue&&this.earlyWriter.flush(this.logWriterChain)}unregisterWriter(...writers){for(const writer of writers){const index=this.logWriterChain.indexOf(writer);-1!==index&&this.logWriterChain.splice(index,1)}}registerWriterFor(type,...writers){var _a;const name="string"==typeof type?type:type.name,flushEarlyWiteQueue=!this.logWriterChain.length&&!(null===(_a=this.logWriters[name])||void 0===_a?void 0:_a.length);(this.logWriters[name]||(this.logWriters[name]=[])).push(...writers),flushEarlyWiteQueue&&this.earlyWriter.flush(this.logWriters[name],!1)}unregisterWritersFor(type){var _a;const name="string"==typeof type?type:type.name;null===(_a=this.logWriters[name])||void 0===_a||_a.splice(0,this.logWriters[name].length)}setLogLevel(type,level){const name="string"==typeof type?type:type.name;this.detailedLogLevels[name]=level}getLogLevel(type){const name="string"==typeof type?type:type.name;return this.detailedLogLevels[name]||this.globalLogLevel}registerFilter(logger,filter){const logName="string"==typeof logger?logger:logger.name;let filterFunc="function"==typeof filter?filter:filter.filter;if(this.logFilters[logName]){const currentFilter=this.logFilters[logName];filterFunc=ops=>currentFilter(ops)&&filterFunc(ops)}this.logFilters[logName]=filterFunc}getFilter(logName){return this.logFilters[logName]}getWriters(logName){const writers=this.logWriters[logName]||this.logWriterChain;return writers.length?writers:[this.earlyWriter]}createLogger(logName){return new logger_1.Logger(this,logName,{write:entry=>{const promises=this.getWriters(logName).map((writer=>writer.write(entry))).filter(util_1.isPromise);if(promises.length)return Promise.all(promises)},focus:()=>{for(const writer of this.getWriters(logName))if(writer.focus)return writer.focus()}})}}},"./packages/core/lib/logging/logger.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Logger=void 0;const logging_1=__webpack_require__("./packages/core/lib/logging/index.js"),util_1=__webpack_require__("./packages/util/lib/index.js");class Logger{constructor(manager,name,writer){this.manager=manager,this.name=name,this.writer=writer}focus(){var _a,_b;null===(_b=null===(_a=this.writer)||void 0===_a?void 0:_a.focus)||void 0===_b||_b.call(_a)}log(...args){this.write(logging_1.LogLevel.info,...args)}info(...args){this.write(logging_1.LogLevel.info,...args)}verbose(...args){this.write(logging_1.LogLevel.verbose,...args)}warn(...args){this.write(logging_1.LogLevel.warn,...args)}error(...args){this.write(logging_1.LogLevel.error,...args)}debug(...args){this.write(logging_1.LogLevel.debug,...args)}write(level,...args){if(this.manager){if(level<this.manager.getLogLevel(this.name))return;const filter=this.manager.getFilter(this.name);if(filter&&!filter({logger:this,severity:level,args}))return}level==logging_1.LogLevel.error&&console.error(...args.filter((arg=>"string"==typeof arg||arg instanceof Error))),this.writeEntry({category:this.name,level,time:new Date,message:args.map(this.formatArg).join(" ")})}writeEntry(entry){if(!this.writer)return;const result=this.writer.write(entry);util_1.isPromise(result)&&result.catch((err=>{console.error(`Error while writing to log: ${err.message||err}`)}))}formatArg(arg){if(arg instanceof Error)return arg.message;if(null!==arg&&"object"==typeof arg)try{return JSON.stringify(arg)}catch(err){return"{Object}"}return arg}}exports.Logger=Logger,Logger.null=new class extends Logger{constructor(){super(void 0,"/dev/null")}write(){}writeEntry(){}}},"./packages/core/lib/logging/writers/chainWriter.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ChainWriter=void 0;exports.ChainWriter=class ChainWriter{constructor(...args){this.chain=args||[]}append(...writers){this.chain.push(...writers)}write(entry){this.chain.forEach((writer=>writer.write(entry)))}}},"./packages/core/lib/logging/writers/consoleWriter.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConsoleWriter=void 0;const __1=__webpack_require__("./packages/core/lib/logging/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js");class ConsoleWriter{constructor(formatMessages=!0){this.formatMessages=formatMessages}write({level,time,category,message}){const formattedMessage=this.formatMessages?`${moment(time).format(ConsoleWriter.LOG_DATE_FORMAT)}:: [${__1.LogLevel[level]}] [${category}]: ${message}`:message;switch(level){case __1.LogLevel.debug:return console.debug(formattedMessage);case __1.LogLevel.warn:return console.warn(formattedMessage);case __1.LogLevel.error:return console.error(formattedMessage);default:return console.info(formattedMessage)}}}exports.ConsoleWriter=ConsoleWriter,ConsoleWriter.LOG_DATE_FORMAT="HH:mm:ss.SS"},"./packages/core/lib/logging/writers/index.js":function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__("./packages/core/lib/logging/writers/chainWriter.js"),exports),__exportStar(__webpack_require__("./packages/core/lib/logging/writers/consoleWriter.js"),exports),__exportStar(__webpack_require__("./packages/core/lib/logging/writers/outputChannelWriter.js"),exports),__exportStar(__webpack_require__("./packages/core/lib/logging/writers/terminalWriter.js"),exports)},"./packages/core/lib/logging/writers/outputChannelWriter.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.OutputChannelWriter=void 0;const moment=__webpack_require__("./node_modules/moment/moment.js"),logging_1=__webpack_require__("./packages/core/lib/logging/index.js");class OutputChannelWriter{constructor(channelName){this.channelName=channelName}get outputChannel(){return this._outputChannel||(this._outputChannel=__webpack_require__("vscode").window.createOutputChannel(this.channelName))}dispose(){this._outputChannel&&(this._outputChannel.hide(),this._outputChannel.dispose())}focus(){this._outputChannel.show(!0)}write({level,time,message}){const levelPrefix=(logging_1.LogLevel[level]||"unknown").substr(0,1);this.outputChannel.appendLine(`[${moment(time).format(OutputChannelWriter.LOG_DATE_FORMAT)}] ${levelPrefix}: ${message}`)}}exports.OutputChannelWriter=OutputChannelWriter,OutputChannelWriter.LOG_DATE_FORMAT="HH:mm:ss.SS"},"./packages/core/lib/logging/writers/queueWriter.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.QueueWriter=void 0;exports.QueueWriter=class QueueWriter{constructor(){this.queue=new Array}flush(writers,clearQueue=!0){this.queue.forEach((entry=>writers.forEach((w=>w.write(entry))))),clearQueue&&(this.queue=[])}write(entry){this.queue.push(entry)}}},"./packages/core/lib/logging/writers/terminalWriter.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TerminalWriter=void 0;const chalk=__webpack_require__("./node_modules/chalk/source/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),logging_1=__webpack_require__("./packages/core/lib/logging/index.js");exports.TerminalWriter=class TerminalWriter{constructor(name){this.name=name,this.isOpened=!1,this.queuedMessages=[],this.chalk=new chalk.Instance({level:2}),this.vscode=__webpack_require__("vscode"),this.colors={[logging_1.LogLevel.debug]:this.chalk.magenta,[logging_1.LogLevel.verbose]:this.chalk.dim,[logging_1.LogLevel.info]:this.chalk.grey,[logging_1.LogLevel.warn]:this.chalk.yellowBright,[logging_1.LogLevel.error]:this.chalk.bold.redBright,[logging_1.LogLevel.fatal]:this.chalk.bold.redBright}}get isClosed(){return!this.isOpened||!this.currentTerminal}get isFocused(){var _a,_b;return(null===(_a=this.vscode.window.activeTerminal)||void 0===_a?void 0:_a.name)==(null===(_b=this.currentTerminal)||void 0===_b?void 0:_b.name)}dispose(){this.close(),[this.writeEmitter,this.closeEmitter].forEach((d=>null==d?void 0:d.dispose()))}createTerminal(){return this.currentTerminal&&(this.currentTerminal.dispose(),this.currentTerminal=void 0),this.terminalWatchdog&&(clearTimeout(this.terminalWatchdog),this.terminalWatchdog=void 0),[this.writeEmitter,this.closeEmitter].forEach((d=>null==d?void 0:d.dispose())),this.writeEmitter=new this.vscode.EventEmitter,this.closeEmitter=new this.vscode.EventEmitter,this.terminalWatchdog=setTimeout(this.checkTerminalState.bind(this),5e3),this.isOpened=!1,this.currentTerminal=this.vscode.window.createTerminal({name:this.name,pty:{onDidWrite:this.writeEmitter.event,onDidClose:this.closeEmitter.event,close:this.close.bind(this),open:this.open.bind(this),handleInput:()=>{}}}),this.currentTerminal}checkTerminalState(){const terminal=this.currentTerminal;terminal&&!1===terminal.isOpen&&this.createTerminal()}show(){(this.currentTerminal||this.createTerminal()).show(!0)}open(){let entry;for(this.isOpened=!0;entry=this.queuedMessages.shift();)this.write(entry);this.focus()}close(){this.isOpened=!1,this.currentTerminal&&(this.currentTerminal.dispose(),this.closeEmitter.fire(),this.currentTerminal=void 0),this.terminalWatchdog&&(clearTimeout(this.terminalWatchdog),this.terminalWatchdog=void 0)}focus(){var _a;this.isFocused||null===(_a=this.currentTerminal)||void 0===_a||_a.show(!0)}write(entry){if(this.isClosed&&this.show(),this.isOpened){const levelColor=this.colors[entry.level]||this.chalk.grey,logPrefix=`[${this.chalk.green(moment(entry.time).format("HH:mm:ss.SS"))}] [${this.chalk.white.bold(entry.category)}]`,logLevelName=levelColor(`[${logging_1.LogLevel[entry.level]}]`);let messageBody=entry.message.replace(/\r/g,"").replace(/\n/g,"\r\n");(entry.level==logging_1.LogLevel.warn||entry.level>=logging_1.LogLevel.error)&&(messageBody=levelColor(messageBody));const formattedMessage=`${logPrefix} ${logLevelName} ${messageBody}`;this.writeEmitter.fire(formattedMessage+"\r\n")}else this.queuedMessages.push(entry)}}},electron:module=>{module.exports=require("electron")},vscode:module=>{module.exports=require("vscode")},assert:module=>{module.exports=require("assert")},async_hooks:module=>{module.exports=require("async_hooks")},buffer:module=>{module.exports=require("buffer")},child_process:module=>{module.exports=require("child_process")},constants:module=>{module.exports=require("constants")},crypto:module=>{module.exports=require("crypto")},dns:module=>{module.exports=require("dns")},domain:module=>{module.exports=require("domain")},events:module=>{module.exports=require("events")},fs:module=>{module.exports=require("fs")},http:module=>{module.exports=require("http")},https:module=>{module.exports=require("https")},inspector:module=>{module.exports=require("inspector")},module:module=>{module.exports=require("module")},net:module=>{module.exports=require("net")},os:module=>{module.exports=require("os")},path:module=>{module.exports=require("path")},perf_hooks:module=>{module.exports=require("perf_hooks")},process:module=>{module.exports=require("process")},punycode:module=>{module.exports=require("punycode")},querystring:module=>{module.exports=require("querystring")},readline:module=>{module.exports=require("readline")},stream:module=>{module.exports=require("stream")},string_decoder:module=>{module.exports=require("string_decoder")},timers:module=>{module.exports=require("timers")},tls:module=>{module.exports=require("tls")},tty:module=>{module.exports=require("tty")},url:module=>{module.exports=require("url")},util:module=>{module.exports=require("util")},vm:module=>{module.exports=require("vm")},zlib:module=>{module.exports=require("zlib")},"./package.json":module=>{module.exports=JSON.parse('{"name":"vlocode","displayName":"Salesforce Vlocity Integration","description":"Salesforce and Vlocity development and deployment extension for VSCode","version":"0.16.18","license":"MIT","icon":"resources/icon.png","author":{"name":"Peter van Gulik","email":"peter@curlybracket.nl"},"publisher":"curlybracket","engines":{"vscode":"^1.61.0"},"homepage":"https://github.com/Codeneos/vlocode#readme","categories":["Other"],"keywords":["salesforce","vlocity"],"repository":"https://github.com/codeneos/vlocode.git","bugs":{"url":"https://github.com/Codeneos/vlocode/issues","email":"peter@curlybracket.nl"},"badges":[{"description":"CI Build Status","url":"https://circleci.com/gh/Codeneos/vlocode/tree/master.svg?style=svg","href":"https://circleci.com/gh/Codeneos/vlocode/tree/master"},{"description":"Written in Typescript","url":"https://img.shields.io/github/languages/top/codeneos/vlocode.svg?logo=github","href":"https://github.com/Codeneos/vlocode"},{"description":"Releases and version history","url":"https://badgen.net/github/release/Codeneos/vlocode/stable","href":"https://github.com/Codeneos/vlocode/releases"},{"description":"Downloads","url":"https://badgen.net/vs-marketplace/d/curlybracket.vlocode","href":"https://marketplace.visualstudio.com/items?itemName=curlybracket.vlocode"},{"description":"Rating","url":"https://vsmarketplacebadge.apphb.com/rating-star/curlybracket.vlocode.svg","href":"https://marketplace.visualstudio.com/items?itemName=curlybracket.vlocode"},{"description":"Bugs","url":"https://img.shields.io/sonar/https/sonarcloud.io/curlybracket.vlocode/bugs.svg?color=lightgray&label=bugs&logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAEAAAABACAMAAACdt4HsAAAAolBMVEUAAAD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgCXdjhZAAAANXRSTlMA%2Bg335ykFAwnr7hDZON7Ie1ZDMfTUmIUUSSLPoVAa4r6K8rtyXD62gG2xpsKSjnZpYx6qTp5XIo8AAAOWSURBVFjD7VbZtqIwEGSVRXYQAVFBFvf16v%2F%2F2tgJKsYEvPM4Z%2FLiwV7SXV2phPu3lyB71fnserLwN9HD%2BGBL4u2%2BRMk%2BeMJvw887CH6uIKuGvwhXvIK%2FEYtf1sq38epRu1GWtFa%2FLH%2FPNxFFvq6q9aGQ8LeYC19hH2L30VFWm4p8Z4Tb2H%2BRYbBC%2B2urWfvfy1hHGZx%2BHNwFeBox4alMDfhfv%2FbFJxNUvvlpqVEGe9aTYAxe85pmihGWTne8bEGnJ7qx5KG5pDNBCZssBcZ8M7CeOkcILuKUCTAP6bvo5GuAE5P1ESAsyR0JKqhxzLYfACG3ZwY8dMDsoWcOKXDFZ9tNYFnYQeMNkPh09fzZgD5loMKWfYxrREOeF3VjU%2FqUHMn8bp8w5Elwl4tba2nbTwWRNSRPBUWeFHMjkgqirckMXuPDFx5hUtcSGU4b%2BemV3BHeSHpoUut2uirL8XYSwNfCJEDetjQyjFrtNyJmjE3cnBJ54b3dgmhVBgytfIRTpENChPQ8aYNSHxzy4DkoTrmMseju1XcRmg64L866eL0nj1ER4rkZ7oghQuScgadNWz5ijIVBzlkiRCDoQKOB25Dagqhw8ECGP%2FXGHwOEwKPvCj4184HMpk%2Fwo72IGpWfzEEjze8WGwqL%2BwrIMbNafrUO52LGefCb9RUwtFG82ybvBnaecsd%2BrQYEfgD0d6lZ4x6gFdGj3%2FLDV2H%2B0tr4FHVZcjaUllDnvppk8etrRqrxzAJUOQNIGLEEcHTpwAVpNIfSRCyFDcwOZu6ACbgC6o25Quj0VrAjhINAuWInuGAMUtiHyqMp333L1AFQmCuZbr7WSTHMoBVngpsd0UCCCetm50W88DihgB5c5mNjz0oQB3hnjNWOVoKpA8Amo4Dl4wwkBupFoR4AgGnIfq7M5ScYOq0JD9jO5wPmgwmDH%2B2Qpk0%2FKyjxa32lfsYjRZtcmo0kfJERE4vyoHnihgRT1TOK0J97ngLk92MOWk5XKKxZtiu0CvNTXNlReQmu2FzIbgLlKoJ8XuLtdQ0XUZxkAfzVyzSV8N02Vtvd6s2NN8%2FSMNzaEo%2B%2F525sPG5a%2BycM08xqLAtHfX8Kj26UlZmgRTzFYlTkbJK9RjrNHUSvYWmQFj2UKbQxQ6u1Fz8ay8ojuTMR24nTekAX0aQKd5am65KRHaZvo4vivDAkfaFZdnhOKOEt7ZR9XwYBJZeKLJf7LP4vYv0BK5jBy9A2z3IAAAAASUVORK5CYII%3D","href":"https://sonarcloud.io/dashboard?id=curlybracket.vlocode"},{"description":"Vulnerabilities","url":"https://img.shields.io/sonar/https/sonarcloud.io/curlybracket.vlocode/vulnerabilities.svg?label=vulnerabilities&logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAEAAAABACAMAAACdt4HsAAAAolBMVEUAAAD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgD%2FZgCXdjhZAAAANXRSTlMA%2Bg335ykFAwnr7hDZON7Ie1ZDMfTUmIUUSSLPoVAa4r6K8rtyXD62gG2xpsKSjnZpYx6qTp5XIo8AAAOWSURBVFjD7VbZtqIwEGSVRXYQAVFBFvf16v%2F%2F2tgJKsYEvPM4Z%2FLiwV7SXV2phPu3lyB71fnserLwN9HD%2BGBL4u2%2BRMk%2BeMJvw887CH6uIKuGvwhXvIK%2FEYtf1sq38epRu1GWtFa%2FLH%2FPNxFFvq6q9aGQ8LeYC19hH2L30VFWm4p8Z4Tb2H%2BRYbBC%2B2urWfvfy1hHGZx%2BHNwFeBox4alMDfhfv%2FbFJxNUvvlpqVEGe9aTYAxe85pmihGWTne8bEGnJ7qx5KG5pDNBCZssBcZ8M7CeOkcILuKUCTAP6bvo5GuAE5P1ESAsyR0JKqhxzLYfACG3ZwY8dMDsoWcOKXDFZ9tNYFnYQeMNkPh09fzZgD5loMKWfYxrREOeF3VjU%2FqUHMn8bp8w5Elwl4tba2nbTwWRNSRPBUWeFHMjkgqirckMXuPDFx5hUtcSGU4b%2BemV3BHeSHpoUut2uirL8XYSwNfCJEDetjQyjFrtNyJmjE3cnBJ54b3dgmhVBgytfIRTpENChPQ8aYNSHxzy4DkoTrmMseju1XcRmg64L866eL0nj1ER4rkZ7oghQuScgadNWz5ijIVBzlkiRCDoQKOB25Dagqhw8ECGP%2FXGHwOEwKPvCj4184HMpk%2Fwo72IGpWfzEEjze8WGwqL%2BwrIMbNafrUO52LGefCb9RUwtFG82ybvBnaecsd%2BrQYEfgD0d6lZ4x6gFdGj3%2FLDV2H%2B0tr4FHVZcjaUllDnvppk8etrRqrxzAJUOQNIGLEEcHTpwAVpNIfSRCyFDcwOZu6ACbgC6o25Quj0VrAjhINAuWInuGAMUtiHyqMp333L1AFQmCuZbr7WSTHMoBVngpsd0UCCCetm50W88DihgB5c5mNjz0oQB3hnjNWOVoKpA8Amo4Dl4wwkBupFoR4AgGnIfq7M5ScYOq0JD9jO5wPmgwmDH%2B2Qpk0%2FKyjxa32lfsYjRZtcmo0kfJERE4vyoHnihgRT1TOK0J97ngLk92MOWk5XKKxZtiu0CvNTXNlReQmu2FzIbgLlKoJ8XuLtdQ0XUZxkAfzVyzSV8N02Vtvd6s2NN8%2FSMNzaEo%2B%2F525sPG5a%2BycM08xqLAtHfX8Kj26UlZmgRTzFYlTkbJK9RjrNHUSvYWmQFj2UKbQxQ6u1Fz8ay8ojuTMR24nTekAX0aQKd5am65KRHaZvo4vivDAkfaFZdnhOKOEt7ZR9XwYBJZeKLJf7LP4vYv0BK5jBy9A2z3IAAAAASUVORK5CYII%3D","href":"https://sonarcloud.io/dashboard?id=curlybracket.vlocode"}],"activationEvents":["onView:datapackExplorer","onView:jobExplorer","onView:developerLogsView","workspaceContains:**/*_datapack.json","workspaceContains:**/*_DataPack.json","workspaceContains:**/.vlocode","workspaceContains:**/*.cls","onCommand:vlocode.selectOrg","onCommand:vlocode.refreshDatapack","onCommand:vlocode.deployDatapack","onCommand:vlocode.openSalesforce","onCommand:vlocode.renameDatapack","onCommand:vlocode.cloneDatapack","onCommand:vlocode.exportDatapack","onCommand:vlocode.buildParentKeyFiles","onCommand:vlocode.buildDatapack","onCommand:vlocode.viewDatapack.generic","onCommand:vlocode.adminCommands","onCommand:vlocode.admin.refreshPriceBook","onCommand:vlocode.admin.refreshProductHierarchy","onCommand:vlocode.admin.refreshPriceBookAndProductHierarchy","onCommand:vlocode.admin.updateAllProdAttribCommand","onCommand:vlocode.admin.clearPlatformCache","onCommand:vlocode.deployMetadata","onCommand:vlocode.refreshMetadata","onCommand:vlocode.destroyMetadata","onCommand:vlocode.selectApiVersion","onCommand:vlocode.createMetadataCommand","onCommand:vlocode.execAnonymousCommand","onCommand:vlocode.viewInSalesforce","onCommand:vlocode.createLwc","onCommand:vlocode.createApexClass","onCommand:vlocode.datapackExplorer.export","onCommand:vlocode.datapackExplorer.refresh","onCommand:vlocode.datapackExplorer.openSalesforce","onCommand:vlocode.jobExplorer.refresh","onCommand:vlocode.jobExplorer.run","onCommand:vlocode.clearDeveloperLogs","onCommand:vlocode.setTraceFlags","onCommand:vlocode.developerLogs.setLogLevel","onCommand:vlocode.developerLogs.deleteAll","onCommand:vlocode.developerLogs.refresh","onCommand:vlocode.setLogVisibility","onCommand:vlocode.developerLogs.setLogVisibility","onCommand:vlocode.execRestApi","onCommand:vlocode.retrieveMetadata","onCommand:vlocode.pauseDeploymentQueue","onCommand:vlocode.resumeDeploymentQueue","onCommand:vlocode.clearDeploymentQueue","onCommand:vlocode.addToProfile","onCommand:vlocode.removeFromProfile","onCommand:vlocode.createOmniscriptLwc"],"main":"./out/vlocode","contributes":{"viewsContainers":{"activitybar":[{"id":"vlocode-vlocity","title":"Vlocity","icon":"resources/datapacks.svg"}],"panel":[{"id":"vlocode-developerlogs","title":"Salesforce Logs","icon":"resources/datapacks.svg"}]},"viewsWelcome":[{"view":"datapackExplorer","when":"vlocode.orgSelected != true","contents":"Select an Salesforce instance to start exploring datapacks.\\n[Select Salesforce org](command:vlocode.selectOrg)"}],"views":{"vlocode-vlocity":[{"id":"datapackExplorer","name":"Datapacks"},{"id":"activityView","when":"vlocode.orgSelected == true","name":"Activity"},{"id":"jobExplorer","when":"vlocode.orgSelected == true","name":"Jobs"}],"vlocode-developerlogs":[{"id":"developerLogsView","name":"Salesforce Logs","when":"vlocodeSalesforceSupport && vlocodeSalesforceDeveloperLogs && vlocode.orgSelected","contextualTitle":""}]},"commands":[{"command":"vlocode.selectOrg","title":"Vlocity: Select Salesforce Org"},{"command":"vlocode.refreshDatapack","title":"Vlocity: Refresh Datapack from Org"},{"command":"vlocode.deployDatapack","title":"Vlocity: Deploy Datapack to Org"},{"command":"vlocode.openSalesforce","title":"Vlocity: Open in Org"},{"command":"vlocode.renameDatapack","title":"Vlocity: Rename Datapack"},{"command":"vlocode.cloneDatapack","title":"Vlocity: Clone Datapack"},{"command":"vlocode.exportDatapack","title":"Vlocity: Export Datapack from Org"},{"command":"vlocode.buildParentKeyFiles","title":"Vlocity: Repair Datapack dependencies"},{"command":"vlocode.createOmniscriptLwc","title":"Vlocity: New Omniscript Web Component (LWC)"},{"command":"vlocode.buildDatapack","title":"Vlocity: Build Datapack"},{"command":"vlocode.viewDatapack.generic","title":"Vlocity: View Datapack"},{"command":"vlocode.adminCommands","title":"Vlocity: Administration Console"},{"command":"vlocode.admin.refreshPriceBook","title":"Vlocity: Refresh Pricebook"},{"command":"vlocode.admin.refreshProductHierarchy","title":"Vlocity: Refresh Product Hierarchy"},{"command":"vlocode.admin.refreshPriceBookAndProductHierarchy","title":"Vlocity: Refresh Pricebook and Product Hierarchy"},{"command":"vlocode.admin.updateAllProdAttribCommand","title":"Vlocity: Update Product Attributes"},{"command":"vlocode.admin.clearPlatformCache","title":"Vlocity: Clear Platform Cache"},{"command":"vlocode.deployMetadata","title":"Salesforce: Deploy to Org"},{"command":"vlocode.refreshMetadata","title":"Salesforce: Refresh from Org"},{"command":"vlocode.destroyMetadata","title":"Salesforce: Delete from Org"},{"command":"vlocode.viewInSalesforce","title":"Salesforce: Open in Org"},{"command":"vlocode.selectApiVersion","title":"Salesforce: Select API Version"},{"command":"vlocode.createMetadataCommand","title":"Salesforce: Create new metadata (LWC, APEX, Aura)"},{"command":"vlocode.execAnonymousCommand","title":"Salesforce: Execute Anonymous APEX"},{"command":"vlocode.createLwc","title":"Salesforce: New Lightning Web Component (LWC)"},{"command":"vlocode.createApexClass","title":"Salesforce: New APEX class"},{"command":"vlocode.clearDeveloperLogs","title":"Salesforce: Clear Developer Logs"},{"command":"vlocode.setTraceFlags","title":"Salesforce: Set Debug Log Level"},{"command":"vlocode.setLogVisibility","title":"Salesforce: Set Developer Log Visibility"},{"command":"vlocode.execRestApi","title":"Salesforce: Execute REST API"},{"command":"vlocode.retrieveMetadata","title":"Salesforce: Export/Retrieve metadata from Org"},{"command":"vlocode.pauseDeploymentQueue","title":"Salesforce: Pause deployments"},{"command":"vlocode.resumeDeploymentQueue","title":"Salesforce: Resume deployments"},{"command":"vlocode.clearDeploymentQueue","title":"Salesforce: Clear pending deployment queue"},{"command":"vlocode.addToProfile","title":"Salesforce: Add to profiles"},{"command":"vlocode.removeFromProfile","title":"Salesforce: Remove from profiles"},{"command":"vlocode.datapackExplorer.export","title":"Export","icon":{"light":"resources/light/export.svg","dark":"resources/dark/export.svg"}},{"command":"vlocode.datapackExplorer.refresh","title":"Refresh","icon":{"light":"resources/light/refresh.svg","dark":"resources/dark/refresh.svg"}},{"command":"vlocode.datapackExplorer.openSalesforce","title":"Open in Salesforce","icon":{"light":"resources/light/link-external.svg","dark":"resources/dark/link-external.svg"}},{"command":"vlocode.jobExplorer.refresh","title":"Refresh","icon":{"light":"resources/light/refresh.svg","dark":"resources/dark/refresh.svg"}},{"command":"vlocode.jobExplorer.run","title":"Run job","icon":{"light":"resources/light/start.svg","dark":"resources/dark/start.svg"}},{"command":"vlocode.developerLogs.setLogLevel","title":"Set log level","icon":{"light":"resources/light/settings.svg","dark":"resources/dark/settings.svg"}},{"command":"vlocode.developerLogs.deleteAll","title":"Delete all logs","icon":{"light":"resources/light/trash.svg","dark":"resources/dark/trash.svg"}},{"command":"vlocode.developerLogs.refresh","title":"Refresh","icon":{"light":"resources/light/refresh.svg","dark":"resources/dark/refresh.svg"}},{"command":"vlocode.developerLogs.setLogVisibility","title":"Log Visibility (own/all)","icon":{"light":"resources/light/visibility.svg","dark":"resources/dark/visibility.svg"}}],"menus":{"commandPalette":[{"command":"vlocode.selectOrg","group":"v_vlocity"},{"command":"vlocode.refreshDatapack","group":"v_vlocity","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"},{"command":"vlocode.deployDatapack","group":"v_vlocity","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"},{"command":"vlocode.openSalesforce","group":"v_vlocity","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"},{"command":"vlocode.renameDatapack","group":"v_vlocity","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"},{"command":"vlocode.cloneDatapack","group":"v_vlocity","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"},{"command":"vlocode.exportDatapack","group":"v_vlocity"},{"command":"vlocode.buildParentKeyFiles","group":"v_vlocity","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"},{"command":"vlocode.createOmniscriptLwc","group":"v_vlocity"},{"command":"vlocode.buildDatapack","group":"v_vlocity","when":"false"},{"command":"vlocode.viewDatapack.generic","group":"v_vlocity","when":"false"},{"command":"vlocode.adminCommands","group":"v_vlocity"},{"command":"vlocode.admin.refreshPriceBook","group":"v_vlocity"},{"command":"vlocode.admin.refreshProductHierarchy","group":"v_vlocity"},{"command":"vlocode.admin.refreshPriceBookAndProductHierarchy","group":"v_vlocity"},{"command":"vlocode.admin.updateAllProdAttribCommand","group":"v_vlocity"},{"command":"vlocode.admin.clearPlatformCache","group":"v_vlocity"},{"command":"vlocode.deployMetadata","group":"v_salesforce","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.metadata"},{"command":"vlocode.refreshMetadata","group":"v_salesforce","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.metadata"},{"command":"vlocode.destroyMetadata","group":"v_salesforce","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.metadata"},{"command":"vlocode.viewInSalesforce","group":"v_salesforce","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.metadata"},{"command":"vlocode.selectApiVersion","group":"v_salesforce","when":"config.vlocity.salesforce.enabled"},{"command":"vlocode.createMetadataCommand","group":"v_salesforce","when":"config.vlocity.salesforce.enabled"},{"command":"vlocode.execAnonymousCommand","group":"v_salesforce","when":"config.vlocity.salesforce.enabled"},{"command":"vlocode.createLwc","group":"v_salesforce","when":"config.vlocity.salesforce.enabled"},{"command":"vlocode.createApexClass","group":"v_salesforce","when":"config.vlocity.salesforce.enabled"},{"command":"vlocode.clearDeveloperLogs","group":"v_salesforce","when":"config.vlocity.salesforce.enabled"},{"command":"vlocode.setTraceFlags","group":"v_salesforce","when":"config.vlocity.salesforce.enabled"},{"command":"vlocode.setLogVisibility","group":"v_salesforce","when":"config.vlocity.salesforce.enabled"},{"command":"vlocode.execRestApi","group":"v_salesforce","when":"config.vlocity.salesforce.enabled"},{"command":"vlocode.retrieveMetadata","group":"v_salesforce","when":"config.vlocity.salesforce.enabled"},{"command":"vlocode.pauseDeploymentQueue","group":"v_salesforce","when":"config.vlocity.salesforce.enabled"},{"command":"vlocode.resumeDeploymentQueue","group":"v_salesforce","when":"config.vlocity.salesforce.enabled"},{"command":"vlocode.clearDeploymentQueue","group":"v_salesforce","when":"config.vlocity.salesforce.enabled"},{"command":"vlocode.addToProfile","group":"v_salesforce_profile"},{"command":"vlocode.removeFromProfile","group":"v_salesforce_profile"},{"command":"vlocode.datapackExplorer.export","when":"false"},{"command":"vlocode.datapackExplorer.refresh","when":"false"},{"command":"vlocode.datapackExplorer.openSalesforce","when":"false"},{"command":"vlocode.jobExplorer.refresh","when":"false"},{"command":"vlocode.jobExplorer.run","when":"false"},{"command":"vlocode.developerLogs.setLogLevel","when":"false"},{"command":"vlocode.developerLogs.deleteAll","when":"false"},{"command":"vlocode.developerLogs.refresh","when":"false"},{"command":"vlocode.developerLogs.setLogVisibility","when":"false"}],"explorer/context":[{"command":"vlocode.refreshDatapack","group":"v_vlocity","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"},{"command":"vlocode.deployDatapack","group":"v_vlocity","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"},{"command":"vlocode.openSalesforce","group":"v_vlocity","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"},{"command":"vlocode.renameDatapack","group":"v_vlocity","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"},{"command":"vlocode.cloneDatapack","group":"v_vlocity","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"},{"command":"vlocode.deployMetadata","group":"v_salesforce","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.metadata"},{"command":"vlocode.refreshMetadata","group":"v_salesforce","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.metadata"},{"command":"vlocode.destroyMetadata","group":"v_salesforce","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.metadata"},{"command":"vlocode.viewInSalesforce","group":"v_salesforce","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.metadata"},{"command":"vlocode.addToProfile","group":"v_salesforce_profile","when":"config.vlocity.salesforce.profileActionsInContextMenu && config.vlocity.salesforce.enabled && resourceScheme == file && resourceFilename =~ /(\\\\.object|\\\\.field-meta\\\\.xml|\\\\.cls|\\\\.cls-meta\\\\.xml)$/"},{"command":"vlocode.addToProfile","group":"v_salesforce_profile","when":"config.vlocity.salesforce.profileActionsInContextMenu && config.vlocity.salesforce.enabled && explorerResourceIsFolder && resourceDirname =~ /(objects|classes)/"},{"command":"vlocode.removeFromProfile","group":"v_salesforce_profile","when":"config.vlocity.salesforce.profileActionsInContextMenu && config.vlocity.salesforce.enabled && resourceScheme == file && resourceFilename =~ /(\\\\.object|\\\\.field-meta\\\\.xml|\\\\.cls|\\\\.cls-meta\\\\.xml)$/"},{"command":"vlocode.removeFromProfile","group":"v_salesforce_profile","when":"config.vlocity.salesforce.profileActionsInContextMenu && config.vlocity.salesforce.enabled && explorerResourceIsFolder && resourceDirname =~ /(objects|classes)/"}],"editor/context":[{"command":"vlocode.refreshDatapack","group":"v_vlocity","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"},{"command":"vlocode.deployDatapack","group":"v_vlocity","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"},{"command":"vlocode.openSalesforce","group":"v_vlocity","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"},{"command":"vlocode.cloneDatapack","group":"v_vlocity","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.datapacks"},{"command":"vlocode.deployMetadata","group":"v_salesforce","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.metadata"},{"command":"vlocode.refreshMetadata","group":"v_salesforce","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.metadata"},{"command":"vlocode.destroyMetadata","group":"v_salesforce","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.metadata"},{"command":"vlocode.viewInSalesforce","group":"v_salesforce","when":"vlocode.conditionalContextMenus == false || resourcePath in vlocode.metadata"},{"command":"vlocode.addToProfile","group":"v_salesforce_profile","when":"config.vlocity.salesforce.profileActionsInContextMenu && config.vlocity.salesforce.enabled && resourceScheme == file && resourceFilename =~ /(\\\\.object|\\\\.field-meta\\\\.xml|\\\\.cls|\\\\.cls-meta\\\\.xml)$/"},{"command":"vlocode.removeFromProfile","group":"v_salesforce_profile","when":"config.vlocity.salesforce.profileActionsInContextMenu && config.vlocity.salesforce.enabled && resourceScheme == file && resourceFilename =~ /(\\\\.object|\\\\.field-meta\\\\.xml|\\\\.cls|\\\\.cls-meta\\\\.xml)$/"}],"view/item/context":[{"command":"vlocode.datapackExplorer.export","group":"inline","when":"viewItem == vlocode:datapack:object"},{"command":"vlocode.datapackExplorer.export","group":"inline","when":"viewItem == vlocode:datapack:category"},{"command":"vlocode.datapackExplorer.export","group":"inline","when":"viewItem == vlocode:datapack:sobject"},{"command":"vlocode.datapackExplorer.export","group":"inline","when":"viewItem == vlocode:datapack:sobjectType"},{"command":"vlocode.datapackExplorer.export","group":"v_vlocity","when":"viewItem == vlocode:datapack:object"},{"command":"vlocode.datapackExplorer.export","group":"v_vlocity","when":"viewItem == vlocode:datapack:category"},{"command":"vlocode.datapackExplorer.export","group":"v_vlocity","when":"viewItem == vlocode:datapack:sobject"},{"command":"vlocode.datapackExplorer.export","group":"v_vlocity","when":"viewItem == vlocode:datapack:sobjectType"},{"command":"vlocode.datapackExplorer.openSalesforce","group":"inline","when":"viewItem == vlocode:datapack:object"},{"command":"vlocode.datapackExplorer.openSalesforce","group":"inline","when":"viewItem == vlocode:datapack:sobject"},{"command":"vlocode.datapackExplorer.openSalesforce","group":"v_vlocity","when":"viewItem == vlocode:datapack:object"},{"command":"vlocode.datapackExplorer.openSalesforce","group":"v_vlocity","when":"viewItem == vlocode:datapack:sobject"},{"command":"vlocode.jobExplorer.run","group":"inline","when":"viewItem == vlocode:jobYaml"}],"view/title":[{"command":"vlocode.datapackExplorer.refresh","group":"navigation","when":"view == datapackExplorer"},{"command":"vlocode.jobExplorer.refresh","group":"navigation","when":"view == jobExplorer"},{"command":"vlocode.developerLogs.setLogLevel","group":"navigation","when":"view == developerLogsView"},{"command":"vlocode.developerLogs.deleteAll","group":"navigation","when":"view == developerLogsView"},{"command":"vlocode.developerLogs.refresh","group":"navigation","when":"view == developerLogsView"},{"command":"vlocode.developerLogs.setLogVisibility","group":"navigation","when":"view == developerLogsView"}]},"configuration":[{"type":"object","title":"General","properties":{"vlocity.sfdxUsername":{"type":"string","scope":"machine-overridable","markdownDescription":"SFDX username; when this is specified the username, password, loginUrl and instanceUrl are ignored."},"vlocity.httpProxy":{"type":"string","description":"Optional HTTP proxy for connecting to Salesforce"},"vlocity.logLevel":{"type":"string","default":"info","enum":["info","verbose","debug"],"markdownDescription":"Determines the amount of details printed to the integrated terminal for Vlocode"},"vlocity.logInTerminal":{"type":"boolean","default":true,"markdownDescription":"Enable logging in `TERMINAL` tab instead of in the `OUTPUT` tab, terminal logging uses a vscode *Pseudoterminal* and has support for colors but might not work correctly on all platforms.\\n\\n**Note** Changing this will require you to restart for the changes to be applied."},"vlocity.conditionalContextMenus":{"type":"boolean","default":true,"markdownDescription":"When enabled context menu options on the workspace-explorer and editor are displayed only when applicable; when enabled Vlocode monitors your workspace folders and keeps track of a list of files which are either Salesforce metadata of Vlocity datapacks. If you disabled this both Vlocity and Salesforce context menu options will always be visible. __Note: if you don\'t see any context menu options disable this.__"}}},{"type":"object","title":"Vlocity","properties":{"vlocity.projectPath":{"type":"string","scope":"machine-overridable","markdownDescription":"Path to the folder containing the Vlocity datapacks relative to the workspace root folder, for example:\\n - `./vlocity`\\n - `./datapacks`"},"vlocity.customJobOptionsYaml":{"type":"string","scope":"machine-overridable","markdownDescription":"Path to the custom YAML that is used during deployment and export, see the official Vlocity Build repository for [documentation](https://github.com/vlocityinc/vlocity_build#additional-command-line-options) on the format of this file.\\n\\n> **Note** most of the job options are controlled by Vlocode therefore only the **`preStepApex`**, **`postStepApex`** and **`OverrideSettings`** settings will be used from specified YAML file."},"vlocity.deployOnSave":{"type":"boolean","default":false,"markdownDescription":"Automatically deploy datapacks to Salesforce when changes are saved."},"vlocity.compileOnBuild":{"type":"boolean","default":true,"markdownDescription":"Compile SCSS source before deploying to the target org."},"vlocity.autoActivate":{"type":"boolean","default":true,"markdownDescription":"Automatically activate datapacks after deployment to the target org."},"vlocity.parallelLimit":{"type":"number","default":50,"markdownDescription":"The number of parallel exports to run when exporting or refreshing Vlocity datapacks"},"vlocity.deploymentMode":{"type":"string","enum":["compatibility","direct"],"default":"compatibility","enumDescriptions":["Use Vlocity Deployment library; maximizes compatibility at the cost of deployment speed","Directly load records using bulk or collections API; significantly faster then but still beta"],"markdownDescription":"Change how Datapacks are deployment by Vlocode; select _direct_ mode for faster deployments (currently this is a beta feature)"},"vlocity.deploy.chunkSize":{"type":"number","default":100,"markdownDescription":"Number of records to deploy in as single operation using the collection API, only affects deployments when *direct* mode is enabled"},"vlocity.deploy.bulkApiThreshold":{"type":"number","default":500,"markdownDescription":"Record count when to start using the bulk API only has effect when `vlocity.deploy.useBulkApi` is set to true `true`"},"vlocity.deploy.useBulkApi":{"type":"boolean","default":false,"markdownDescription":"When enabled the deployment process will use the bulk API for uploading records when the total record type for a single SObject surpassed the value configured as `bulkApiThreshold`"}}},{"type":"object","title":"Salesforce","properties":{"vlocity.salesforce.enabled":{"type":"boolean","default":true,"markdownDescription":"Enables support for **Salesforce commands** such as _Deploy_ and _Refresh_ of Salesforce Metadata Objects through Vlocode"},"vlocity.salesforce.apiVersion":{"type":"string","pattern":"^\\\\d{2,3}\\\\.\\\\d$","examples":["48.0","49.0","50.0","51.0"],"default":"51.0","markdownDescription":"The API version used for Salesforce deployments and refresh operations. Invalid API versions will cause all Salesforce related commands to fail."},"vlocity.salesforce.deployOnSave":{"type":"boolean","default":false,"markdownDescription":"Automatically deploy metadata files to Salesforce when saved."},"vlocity.salesforce.profileActionsInContextMenu":{"type":"boolean","default":true,"markdownDescription":"Display add __and to profiles__ and __remove from profiles__ commands in the editor and explorer context menu. If unchecked profile actions are only available from the command pallet."},"vlocity.salesforce.manageMetaXmlFiles":{"type":"boolean","default":true,"markdownDescription":"Enables auto renaming and creation of _-meta.xml_ files for APEX classes. _Note: only has effect when **vlocity.salesforce.enabled** is enabled_"},"vlocity.salesforce.exportFolder":{"type":"string","default":"./src","markdownDescription":"Folder to which Vlocode export Salesforce metadata"},"vlocity.salesforce.exportFormat":{"type":"string","enum":["classic","sfdx"],"default":"classic","enumDescriptions":["Export Salesforce Metadata in **classic metadata** format without decomposing metadata and adding additional -meta.xml suffixes as retrieved from Salesforce through the metadata API.","Export Salesforce Metadata in **decomposed SFDX** format without. Decomposes metadata in multiple files and adds additional -meta.xml all exported metadata without content."],"markdownDescription":"Folder to which Vlocode export Salesforce metadata"}}},{"type":"object","title":"Salesforce Developer Logs","properties":{"vlocity.salesforce.developerLogsVisible":{"type":"boolean","default":true,"markdownDescription":"Show the Salesforce developer logs panel"},"vlocity.salesforce.developerLogsVisibility":{"type":"string","enum":["self","all"],"default":"self","enumDescriptions":["Display only the logs generated by the currently connected user","Display all developer logs on the connected org from all users with active trace flags"],"markdownDescription":"Change which logs are displayed and visible in the Developer logs panel"},"vlocity.salesforce.developerLogsAutoRefresh":{"type":"boolean","default":true,"markdownDescription":"Auto refresh the Salesforce logs panel when the panel is visible \\n\\n> **Note** This setting only has effect for Developer instances; for production instances the logs panel needs to be refreshed manually"}}}],"grammars":[{"language":"vldp","scopeName":"source.json","path":"./syntax/datapack.tmLanguage.json"}],"languages":[{"id":"vldp","aliases":["Vlocity Datapack"],"extensions":[],"filenamePatterns":["*_DataPack.json","*_ParentKeys.json"],"configuration":"./syntax/datapack-language.json"},{"id":"xml","extensions":[".accountForecastSetting",".accountRelationshipShareRule",".acctMgrTargetSetting",".actionLinkGroupTemplate",".aiAssistantTemplate",".animationRule",".app",".appMenu",".approvalProcess",".apt",".assignmentRules",".assistantRecommendationType",".authprovider",".autoResponseRules",".batchCalcJobDefinition",".batchProcessJobDefinition",".benefitAction",".bot",".brandingSet",".briefcaseDefinition",".businessProcessFeedbackConfiguration",".businessProcessGroup",".cachePartition",".callCenter",".campaignInfluenceModel",".Canvas",".careProviderSearchConfig",".careSystemFieldMapping",".CaseSubjectParticle",".channelLayout",".ChannelObjectLinkingRule",".ChatterExtension",".cleanDataService",".commandaction",".community",".communityTemplateDefinition",".communityThemeDefinition",".config",".connectedApp",".ConversationVendorFieldDefinition",".ConversationVendorInformation",".corsWhitelistOrigin",".cspTrustedSite",".customApplicationComponent",".customExperience",".customHelpMenuSection",".customPermission",".dashboard",".datacategorygroup",".dataSource",".dataSourceObject",".dataStreamDefinition",".datatype",".decisionTable",".decisionTableDatasetLink",".delegateGroup",".delivery",".deployment",".documentType",".duplicateRule",".dynamicTrigger",".EmbeddedServiceBranding",".EmbeddedServiceConfig",".EmbeddedServiceFieldService",".EmbeddedServiceFlowConfig",".EmbeddedServiceLiveAgent",".entitlementProcess",".entitlementTemplate",".entityImplements",".escalationRules",".eventType",".externalDataConnector",".externalServiceRegistration",".featureParameterBoolean",".featureParameterDate",".featureParameterInteger",".feedFilter",".fieldServiceMobileExtension",".fieldSrcTrgtRelationship",".flexipage",".flow",".flowCategory",".flowDefinition",".form",".function",".gatewayProviderPaymentMethodType",".globalPicklist",".globalValueSet",".globalValueSetTranslation",".goal",".group",".homePageComponent",".homePageLayout",".icon",".iframeWhiteListUrlSettings",".inboundNetworkConnection",".insightType",".installedPackage",".keywords",".labels",".layout",".LeadConvertSetting",".letter",".licenseDefinition",".lightningBolt",".lightningExperienceTheme",".lightningOnboardingConfig",".liveChatAgentConfig",".liveChatButton",".liveChatDeployment",".liveChatSensitiveDataRule",".managedContentType",".managedTopics",".marketingResourceType",".matchingRule",".messageChannel",".milestoneType",".mktDataTranObject",".mlDomain",".MobileApplicationDetail",".mutingpermissionset",".myDomainDiscoverableLogin",".namedCredential",".navigationMenu",".network",".notifications",".notiftype",".oauthcustomscope",".object",".objectSourceTargetMap",".objectTranslation",".orchestrationContext",".outboundNetworkConnection",".participantRole",".pathAssistant",".paymentGatewayProvider",".permissionset",".permissionsetgroup",".platformEventChannel",".platformEventChannelMember",".platformEventSubscriberConfig",".policy",".portal",".postTemplate",".presenceDeclineReason",".presenceUserConfig",".profile",".profilePasswordPolicy",".profileSessionSetting",".prompt",".queue",".queueRoutingConfig",".quickAction",".recommendationStrategy",".redirectWhitelistUrl",".remoteSite",".report",".reportType",".role",".rule",".s3DataConnector",".salesAgreementSetting",".samlssoconfig",".serviceChannel",".servicePresenceStatus",".settings",".sharingRules",".sharingSet",".site",".skill",".snapshot",".standardValueSet",".standardValueSetTranslation",".subscription",".synonymDictionary",".tab",".territory",".territory2",".territory2Model",".territory2Rule",".territory2Type",".testSuite",".timeSheetTemplate",".topicsForObjects",".transactionSecurityPolicy",".translation",".type",".userCriteria",".visualizationPlugin",".wapp",".wds",".weblink",".webStoreTemplate",".workflow",".workSkillRouting",".xmd",".xorghub",".xml"]}]},"scripts":{"postinstall":"patch-package","prepare:commands":"ts-node ./build/buildCommands.ts ./package.json ./commands.yaml","prepare:sync":"ts-node ./build/syncPackages.ts","build":"npm run build:workspaces && npm run prepare:commands && webpack --config webpack.prod.ts --env extension","build:debug":"npm run build:workspaces && npm run prepare:commands && webpack --config webpack.dev.ts --env extension","build:tests":"npm run build:workspaces && npm run prepare:commands && webpack --config webpack.dev.ts --env tests","build:workspaces":" npm run prepare:sync && npm run build --workspaces --quite","watch":"webpack --watch --config webpack.dev.ts --env extension --env tests","watch:prod":"webpack --watch --config webpack.prod.ts --env extension","clean":"rimraf ./out","lint":"eslint ./src/**/*.ts ./packages/*/src/*.ts","test":"npm run build:tests && node ./out/test/runTest.js","docs":"typedoc","bump":"ts-node ./build/bumpVersion.ts patch","package":"vsce package","publish":"vsce publish","vscode:prepublish":"npm run clean && npm run build"},"devDependencies":{"@salesforce/core":"^2.28.2","@types/chai":"^4.2.21","@types/copy-webpack-plugin":"^8.0.1","@types/fs-extra":"^9.0.12","@types/js-yaml":"^4.0.2","@types/jsforce":"^1.9.33","@types/mocha":"^9.0.0","@types/mock-fs":"^4.13.1","@types/node":"^16.4.5","@types/request":"^2.48.7","@types/sinon":"^10.0.2","@types/terser-webpack-plugin":"^5.0.4","@types/uuid":"^8.3.1","@types/vscode":"^1.61.0","@types/webpack":"^5.28.0","@types/webpack-env":"^1.16.2","@types/webpack-merge":"^4.1.5","@types/xml2js":"^0.4.9","@typescript-eslint/eslint-plugin":"^4.28.5","@typescript-eslint/eslint-plugin-tslint":"^4.28.5","@typescript-eslint/parser":"^4.28.5","angular-expressions":"^1.1.3","axios":"^0.21.2","chai":"^4.3.4","chalk":"^4.1.1","cli-ux":"^5.6.3","copy-webpack-plugin":"^9.0.1","escape-string-regexp":"^4.0.0","eslint":"^7.31.0","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.24.1","eslint-plugin-jsdoc":"^36.0.6","eslint-plugin-prefer-arrow":"^1.2.3","eslint-plugin-prettier":"^3.4.0","gelex":"0.0.7","glob":"^7.1.7","globby":"^11.0.4","js-yaml":"^4.1.0","jsforce":"^1.10.1","json-loader":"^0.5.7","jszip":"^3.7.0","log-symbols":"^4.0.0","memfs":"^3.2.2","mocha":"^9.0.3","mocha-html-reporter":"0.0.1","mocha-junit-reporter":"^2.0.0","mocha-multi-reporters":"^1.5.1","mocha-simple-html-reporter":"^2.0.0","mocha-sonarqube-reporter":"^1.0.2","mock-fs":"^5.0.0","moment":"^2.29.1","open":"^8.2.1","patch-package":"^6.4.7","reflect-metadata":"^0.1.13","rimraf":"^3.0.2","salesforce-alm":"^52.1.9","sass.js":"^0.11.1","sinon":"^11.1.2","source-map-support":"^0.5.19","terser":"^5.9.0","terser-webpack-plugin":"^5.2.4","transform-loader":"^0.2.4","ts-loader":"^9.2.4","ts-node":"^10.1.0","tsconfig-paths-webpack-plugin":"^3.5.1","tslint":"^5.20.1","tslint-loader":"^3.5.4","typedoc":"^0.21.5","typescript":"^4.3.5","unique-names-generator":"^4.6.0","uuid":"^8.3.2","vlocity":"^1.14.7","vsce":"^1.100.2","vscode-languageclient":"^7.0.0","vscode-test":"^1.6.1","webpack":"^5.62.1","webpack-cli":"^4.7.2","webpack-dev-server":"^3.11.2","webpack-glob-entry":"^2.1.1","webpack-merge":"^5.8.0","webpack-node-externals":"^3.0.0","xml2js":"^0.4.23"},"workspaces":["packages/util","packages/core"]}')},"./src/lib/salesforce/metadataUrls.json":module=>{module.exports=JSON.parse('{"$default":{"nameField":"DeveloperName","query":"select Id from ${type} where ${nameField} = \'${name}\' and NamespacePrefix = \'${namespace}\'","url":"/lightning/setup/one/page?address=/${id}","strategy":"tooling"},"BrandingSet":{"url":"/lightning/setup/ThemingAndBranding/${id}/edit"},"ConnectedApp":{"strategy":"standard","query":"select id from ConnectedApplication where Name = \'${metadata.label}\'"},"ApexClass":{"nameField":"Name"},"ApexComponent":{"nameField":"Name"},"ApexPage":{"nameField":"Name"},"ApexTrigger":{"nameField":"Name"},"StaticResource":{"nameField":"Name"},"PermissionSet":{"nameField":"Name"},"Profile ":{"nameField":"Name","query":"select Id from ${type} where ${nameField} = \'${name}\'"},"ContentAsset":{"strategy":"standard"},"Document":{"strategy":"standard","query":"select Id from ${type} where ${nameField} = \'${name.split(\'/\').pop()}\' and NamespacePrefix = \'${namespace}\'"},"CustomPermission":{"strategy":"standard"},"DuplicateRule":{"strategy":"standard","query":"select Id from ${type} where ${nameField} = \'${fullName.split(\'.\').pop()}\' and NamespacePrefix = \'${namespace}\'"},"EmailTemplate":{"strategy":"standard","query":"select Id from ${type} where ${nameField} = \'${fullName.split(\'/\').pop()}\' and NamespacePrefix = \'${namespace}\'"},"CustomObject":{"query":null,"url":"/lightning/setup/ObjectManager/${fullName}/Details/view"},"CustomField":{"query":"select Id from ${type} where ${nameField} = \'${name.split(\'.\').pop().split(\'__\').shift()}\' and EntityDefinitionId = \'${fullName.split(\'.\').shift()}\' and NamespacePrefix = \'${namespace}\'","url":"/lightning/setup/ObjectManager/${name.split(\'.\').shift()}/FieldsAndRelationships/${id}/view"},"CustomMetadataObject":{"query":"select Id from CustomObject where ${nameField} = \'${name.split(\'__\').shift()}\' and NamespacePrefix = \'${namespace}\'","url":"/lightning/setup/CustomMetadata/page?address=/${id}?setupid=CustomMetadata"},"CustomMetadataField":{"query":"select Id from ${type} where ${nameField} = \'${name.split(\'.\').pop().split(\'__\').shift()}\' and EntityDefinitionId = \'${fullName.split(\'.\').shift()}\' and NamespacePrefix = \'${namespace}\'","url":"/lightning/setup/CustomMetadata/page?address=/${id}?setupid=CustomMetadata"},"CustomObjectTranslation":{"query":null,"url":"/lightning/setup/LabelWorkbenchTranslate/home"},"Translations":{"query":null,"url":"/lightning/setup/LabelWorkbenchTranslate/home"},"FlexiPage":{"url":"/visualEditor/appBuilder.app?id=${id}"},"Group":{"query":"select Id from ${type} where ${nameField} = \'${name}\'","url":"/lightning/setup/PublicGroups/page?address=/setup/own/groupdetail.jsp?id=${id}"},"Queue":{"query":"select Id from Group where ${nameField} = \'${name}\' and Type = \'Queue\'","url":"/lightning/setup/Queues/page?address=/own/Queue?id=${id}"},"QuickAction":{"query":"select Id from QuickActionDefinition where ${nameField} = \'${name.split(\'.\').pop()}\' and SobjectType = \'${name.split(\'.\').shift()}\' and NamespacePrefix = \'${namespace}\'"},"Role ":{"query":"select Id from ${type} where ${nameField} = \'${name}\'"},"InstalledPackage":{"nameField":"SubscriberPackage.NamespacePrefix","query":"select Id, SubscriberPackage.NamespacePrefix from InstalledSubscriberPackage"},"Settings":{"query":null,"url":"/lightning/setup/${name}Settings/home"},"Layout":{"nameField":"Name"},"LeadConvertSettings ":{"query":"select Id from ${type} where ${nameField} = \'${name}\'"},"LetterHead ":{"query":"select Id from ${type} where ${nameField} = \'${name}\' and NamespacePrefix = \'${namespace}\'","strategy":"standard"},"LightningExperienceTheme":{"url":"/lightning/setup/ThemingAndBranding/${id}/edit"},"MilestoneType":{"nameField":"Name","query":"select Id from ${type} where ${nameField} = \'${name}\'","strategy":"standard"},"Network":{"nameField":"Name","query":"select Id from ${type} where ${nameField} = \'${name}\'","strategy":"standard"},"StandardValueSet":{"nameField":"MasterLabel","query":"select Id from StandardValueSet where MasterLabel = \'${name}\'"},"CustomMetadata":{"strategy":"standard","query":"select Id from ${fullName.split(\'.\').shift()}__mdt where DeveloperName = \'${fullName.split(\'.\').pop()}\'","url":"/lightning/setup/${type}/page?address=/${id}"}}')}},__webpack_module_cache__={};function __webpack_require__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(void 0!==cachedModule)return cachedModule.exports;var module=__webpack_module_cache__[moduleId]={id:moduleId,loaded:!1,exports:{}};return __webpack_modules__[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.loaded=!0,module.exports}__webpack_require__.m=__webpack_modules__,__webpack_require__.c=__webpack_module_cache__,__webpack_require__.x=()=>{var __webpack_exports__=__webpack_require__.O(void 0,["lib-sass","vendor","packages_util_lib_index_js"],(()=>__webpack_require__(__webpack_require__.s="./src/extension.ts")));return __webpack_exports__=__webpack_require__.O(__webpack_exports__)},(()=>{var deferred=[];__webpack_require__.O=(result,chunkIds,fn,priority)=>{if(!chunkIds){var notFulfilled=Infinity;for(i=0;i<deferred.length;i++){for(var[chunkIds,fn,priority]=deferred[i],fulfilled=!0,j=0;j<chunkIds.length;j++)(!1&priority||notFulfilled>=priority)&&Object.keys(__webpack_require__.O).every((key=>__webpack_require__.O[key](chunkIds[j])))?chunkIds.splice(j--,1):(fulfilled=!1,priority<notFulfilled&&(notFulfilled=priority));if(fulfilled){deferred.splice(i--,1);var r=fn();void 0!==r&&(result=r)}}return result}priority=priority||0;for(var i=deferred.length;i>0&&deferred[i-1][2]>priority;i--)deferred[i]=deferred[i-1];deferred[i]=[chunkIds,fn,priority]}})(),(()=>{__webpack_require__.n=module=>{var getter=module&&module.__esModule?()=>module.default:()=>module;return __webpack_require__.d(getter,{a:getter}),getter}})(),(()=>{__webpack_require__.d=(exports,definition)=>{for(var key in definition)__webpack_require__.o(definition,key)&&!__webpack_require__.o(exports,key)&&Object.defineProperty(exports,key,{enumerable:!0,get:definition[key]})}})(),(()=>{__webpack_require__.f={},__webpack_require__.e=chunkId=>Promise.all(Object.keys(__webpack_require__.f).reduce(((promises,key)=>(__webpack_require__.f[key](chunkId,promises),promises)),[]))})(),(()=>{__webpack_require__.u=chunkId=>chunkId+".js"})(),(()=>{__webpack_require__.o=(obj,prop)=>Object.prototype.hasOwnProperty.call(obj,prop)})(),(()=>{__webpack_require__.r=exports=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})}})(),(()=>{__webpack_require__.nmd=module=>(module.paths=[],module.children||(module.children=[]),module)})(),(()=>{var installedChunks={vlocode:1};__webpack_require__.O.require=chunkId=>installedChunks[chunkId];__webpack_require__.f.require=(chunkId,promises)=>{installedChunks[chunkId]||(chunk=>{var moreModules=chunk.modules,chunkIds=chunk.ids,runtime=chunk.runtime;for(var moduleId in moreModules)__webpack_require__.o(moreModules,moduleId)&&(__webpack_require__.m[moduleId]=moreModules[moduleId]);runtime&&runtime(__webpack_require__);for(var i=0;i<chunkIds.length;i++)installedChunks[chunkIds[i]]=1;__webpack_require__.O()})(require("./"+__webpack_require__.u(chunkId)))}})(),(()=>{var next=__webpack_require__.x;__webpack_require__.x=()=>(__webpack_require__.e("lib-sass"),__webpack_require__.e("vendor"),__webpack_require__.e("packages_util_lib_index_js"),next())})();var __webpack_exports__=__webpack_require__.x();module.exports=__webpack_exports__})();